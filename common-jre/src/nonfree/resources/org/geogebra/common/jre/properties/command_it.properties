# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=RapportoAffine
AffineRatio.Syntax=[ <Punto>, <Punto>, <Punto> ]
Angle=Angolo
Angle.Syntax=[ <Oggetto> ]\n[ <Vettore>, <Vettore> ]\n[ <Retta>, <Retta> ]\n[ <Punto>, <Vertice>, <Punto> ]\n[ <Punto>, <Vertice>, <Angolo> ]
Angle.Syntax3D=[ <Oggetto> ]\n[ <Vettore>, <Vettore> ]\n[ <Retta>, <Retta> ]\n[ <Retta>, <Piano> ]\n[ <Piano>, <Piano> ]\n[ <Punto>, <Vertice>, <Punto> ]\n[ <Punto>, <Vertice>, <Angolo> ]\n[ <Punto>, <Punto>, <Punto>, <Direzione> ]
AngularBisector=Bisettrice
AngularBisector.Syntax=[ <Retta>, <Retta> ]\n[ <Punto>, <Punto>, <Punto> ]
Append=Aggiungi
Append.Syntax=[ <Lista>, <Oggetto> ]\n[ <Oggetto>, <Lista> ]
ApplyMatrix=ApplicaMatrice
ApplyMatrix.Syntax=[ <Matrice>, <Oggetto> ]
Arc=Arco
Arc.Syntax=[ <Circonferenza>, <Punto>, <Punto> ]\n[ <Ellisse>, <Punto>, <Punto> ]\n[ <Circonferenza>, <Valore parametro>, <Valore parametro> ]\n[ <Ellisse>, <Valore parametro>, <Valore parametro> ]
AreCollinear=TestAllineamento
AreCollinear.Syntax=[ <Punto>, <Punto>, <Punto> ]
AreConcurrent=TestIncidenza
AreConcurrent.Syntax=[ <Retta>, <Retta>, <Retta> ]
AreConcyclic=TestConciclici
AreConcyclic.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto> ]
AreCongruent=TestCongruenza
AreCongruent.Syntax=[ <Oggetto>, <Oggetto> ]
AreEqual=TestUguaglianza
AreEqual.Syntax=[ <Oggetto>, <Oggetto> ]
AreParallel=TestParallelismo
AreParallel.Syntax=[ <Retta>, <Retta> ]
ArePerpendicular=TestPerpendicolarità
ArePerpendicular.Syntax=[ <Retta>, <Retta> ]
Area.Syntax=[ <Conica> ]\n[ <Poligono> ]\n[ <Punto>, ..., <Punto> ]
Assume=Assumi
Assume.SyntaxCAS=[ <Condizione>, <Espressione> ]
Asymptote=Asintoto
Asymptote.Syntax=[ <Oggetto> ]
AttachCopyToView=InviaCopiaInVista
AttachCopyToView.Syntax=[ <Oggetto>, <Vista 0|1|2> ]\n[ <Oggetto>, <Vista 0|1|2>, <Punto1>, <Punto 2>, <Punto schermo 1>, <Punto schermo 2> ]
Axes=Assi
Axes.Syntax=[ <Conica> ]
Axes.Syntax3D=[ <Conica> ]\n[ <Quadrica> ]
AxisStepX=PassoAsseX
AxisStepX.Syntax=[ ]
AxisStepY=PassoAsseY
AxisStepY.Syntax=[ ]
BarChart=DiagrammaBarre
BarChart.Syntax=[ <Lista dati>, <Lista frequenze> ]\n[ <Lista dati grezzi>, <Larghezza barre>, <Fattore di scala verticale (facoltativo)> ]\n[ <Lista dati>, <Lista frequenze>, <Larghezza barre> ]\n[ <Valore iniziale>, <Valore finale>, <Lista altezze> ]\n[ <Valore iniziale>, <Valore finale>, <Espressione>, <Variabile>, <Da>, <A> ]\n[ <Valore iniziale>, <Valore finale>, <Espressione>, <Variabile>, <Da>, <A>, <Passo> ]
Barycenter=CentroDiMassa
Barycenter.Syntax=[ <Lista di punti>, <Lista di pesi> ]
Bernoulli.Syntax=[ <Probabilità>, <Booleano Cumulata> ]
BetaDist=DistribuzioneBeta
BetaDist.Syntax=[ <Alfa>, <Beta>, <Valore variabile> ]\n[ <Alfa>, <Beta>, <Valore variabile>, <Booleano Cumulata>  ]\n[ <Alfa>, <Beta>, x, <Booleano Cumulata> ]
Binomial=CoefficienteBinomiale
Binomial.Syntax=[ <Numero n>, <Numero k> ]
BinomialDist=Binomiale
BinomialDist.Syntax=[ <Numero di prove>, <Probabilità di successo> ]\n[ <Numero di prove>, <Probabilità di successo>, <Booleano Cumulata> ]\n[ <Numero di prove>, <Probabilità di successo>, <Lista di valori> ]\n[ <Numero di prove>, <Probabilità di successo>, <Valore variabile>, <Booleano Cumulata> ]
BinomialDist.SyntaxCAS=[ <Numero di prove>, <Probabilità di successo>, <Valore variabile>, <Booleano Cumulata> ]
Bottom=BaseInf
Bottom.Syntax=[ <Quadrica> ]
BoxPlot.Syntax=[ <SpostamentoY>, <ScalaY>, <Lista dati grezzi> ]\n[ <SpostamentoY>, <ScalaY>, <Lista dati grezzi>, <Booleano Anomalie> ]\n[ <SpostamentoY>, <ScalaY>, <Lista dati>, <Lista frequenze>, <Booleano Anomalie> ]\n[ <SpostamentoY>, <ScalaY>, <Valore iniziale>, <Q1>, <Mediana>, <Q3>, <Valore finale> ]
Button=Pulsante
Button.Syntax=[ ]\n[ <Legenda> ]
CASLoaded.Syntax=[]
CFactor=FattorizzaC
CFactor.SyntaxCAS=[ <Espressione> ]\n[ <Espressione>, <Variabile> ]
CIFactor=FattorizzaCI
CIFactor.SyntaxCAS=[ <Espressione> ]\n[ <Espressione>, <Variabile> ]
CSolutions=SoluzioniC
CSolutions.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Variabile> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]
CSolve=RisolviC
CSolve.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Variabile> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]
Cauchy.Syntax=[ <Mediana>, <Scala>, <Valore variabile> ]\n[ <Mediana>, <Scala>, <Valore variabile>, <Booleano Cumulata>  ]\n[ <Mediana>, <Scala>, x, <Booleano Cumulata> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Scala>, <Valore variabile> ]
Cell=Cella
Cell.Syntax=[ <Colonna>, <Riga> ]
CellRange=IntervalloCelle
CellRange.Syntax=[ <Cella inizio>, <Cella fine> ]
Center=Centro
Center.Syntax=[ <Conica> ]
Center.Syntax3D=[ <Conica> ]\n[ <Quadrica> ]
CenterView=CentraVista
CenterView.Syntax=[ <Punto> ]
Centroid=Baricentro
Centroid.Syntax=[ <Poligono> ]
CharacteristicPolynomial=PolinomioCaratteristico
CharacteristicPolynomial.Syntax=[ <Matrice> ]
Checkbox=CasellaControllo
Checkbox.Syntax=[ ]\n[ <Legenda> ]\n[ <Lista> ]\n[ <Legenda>, <Lista> ]
ChiSquared=ChiQuadro
ChiSquared.Syntax=[ <Gradi di libertà>, <Valore variabile> ]\n[ <Gradi di libertà>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Gradi di libertà>, x, <Booleano Cumulata> ]
ChiSquared.SyntaxCAS=[ <Gradi di libertà>, <Variabile> ]
ChiSquaredTest=TestChiQuadro
ChiSquaredTest.Syntax=[ <Matrice> ]\n[ <Lista>, <Lista> ]\n[ <Matrice>, <Matrice> ]
Circle=Circonferenza
Circle.Syntax=[ <Punto>, <Valore del raggio> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto>, <Valore del raggio> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Retta>, <Punto> ]\n[ <Punto>, <Raggio>, <Direzione> ]\n[ <Punto>, <Punto>, <Direzione> ]
CircleArc=ArcoCircolare
CircleArc.Syntax=[ <Centro>, <Punto>, <Punto> ]
CircleSector=SettoreCircolare
CircleSector.Syntax=[ <Centro>, <Punto>, <Punto> ]
CircumcircleArc=ArcoTrePunti
CircumcircleArc.Syntax=[ <Punto>, <Punto>, <Punto> ]
CircumcircleSector=SettoreTrePunti
CircumcircleSector.Syntax=[ <Punto>, <Punto>, <Punto> ]
Circumference=Perimetro
Circumference.Syntax=[ <Conica> ]
Classes=Classi
Classes.Syntax=[ <Lista dati>, <Numero delle classi> ]\n[ <Lista dati>, <Inizio>, <Ampiezza delle classi> ]
ClosestPoint=PuntoDistMin
ClosestPoint.Syntax=[ <Cammino>, <Punto> ]\n[ <Retta>, <Retta> ]
ClosestPointRegion=PuntoDistMinRegione
ClosestPointRegion.Syntax=[ <Regione>, <Punto> ]
Coefficients=Coefficienti
Coefficients.Syntax=[ <Polinomio> ]\n[ <Conica> ]
Coefficients.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variabile> ]
Column=Colonna
Column.Syntax=[ <Cella del foglio di calcolo> ]
ColumnName=NomeColonna
ColumnName.Syntax=[ <Cella del foglio di calcolo> ]
Command=Comando
CommonDenominator=DenominatoreComune
CommonDenominator.Syntax=[ <Espressione>, <Espressione> ]
CompleteSquare=CompletaQuadrato
CompleteSquare.Syntax=[ <Funzione quadratica> ]
ComplexRoot=RadiciComplesse
ComplexRoot.Syntax=[ <Polinomio> ]
Cone=Cono
Cone.Syntax=[ <Circonferenza>, <Altezza> ]\n[ <Punto>, <Punto>, <Raggio> ]\n[ <Punto>, <Vettore>, <Angolo> ]
ConeInfinite=ConoInfinito
ConeInfinite.Syntax=[ <Punto>, <Vettore>, <Angolo> ]\n[ <Punto>, <Punto>, <Angolo> ]\n[ <Punto>, <Retta>, <Angolo> ]
Conic=Conica
Conic.Syntax=[ <Lista> ]\n[ <Punto>, <Punto>, <Punto>, <Punto>, <Punto> ]\n[ <Numero>, <Numero>, <Numero>, <Numero>, <Numero>, <Numero> ]
ConstructionStep=PassoCostruzione
ConstructionStep.Syntax=[ ]\n[ <Oggetto> ]
ContingencyTable=TabellaContingenza
ContingencyTable.Syntax=[ <Lista di testi>, <Lista di testi> ]\n[ <Lista di testi>, <Lista di testi>, <Opzioni> ]\n[ <Lista di valori riga>, <Lista di valori colonna>, <Tabella frequenza> ]\n[ <Lista di valori riga>, <Lista di valori colonna>, <Tabella frequenza> , <Opzioni> ]
ContinuedFraction=FrazioneContinua
ContinuedFraction.Syntax=[ <Numero> ]\n[ <Numero>, <Livello> ]\n[ <Numero>, <Livello>, <Booleano Abbreviata> ]
ConvexHull=InviluppoConvesso
ConvexHull.Syntax=[ <Lista di punti> ]
CopyFreeObject=CopiaOggettoLibero
CopyFreeObject.Syntax=[ <Oggetto> ]
Corner.Syntax=[ <Numero del corner> ]\n[ <Immagine>, <Numero del corner> ]\n[ <Testo>, <Numero del corner> ]\n[ <Vista Grafici>, <Numero del corner> ]
CountIf=ContaSe
CountIf.Syntax=[ <Condizione>, <Lista> ]\n[ <Condizione>, <Variabile>, <Lista> ]
Covariance=Covarianza
Covariance.Syntax=[ <Lista di punti> ]\n[ <Lista di numeri>, <Lista di numeri> ]
Cross=ProdottoVettore
Cross.Syntax=[ <Vettore>, <Vettore> ]
CrossRatio=Birapporto
CrossRatio.Syntax=[ <Punto>, <Punto>, <Punto>, <Punto> ]
Cube=Cubo
Cube.Syntax=[ <Quadrato> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
Cubic=Cubica
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Numero> ]
Curvature=Curvatura
Curvature.Syntax=[ <Punto>, <Oggetto> ]
CurvatureVector=VettoreCurvatura
CurvatureVector.Syntax=[ <Punto>, <Oggetto> ]
CurveCartesian=Curva
CurveCartesian.Syntax=[ <Espressione>, <Espressione>, <Variabile parametro>, <Valore iniziale>, <Valore finale> ]
CurveCartesian.Syntax3D=[ <Espressione>, <Espressione>, <Variabile parametro>, <Valore iniziale>, <Valore finale> ]\n[ <Espressione>, <Espressione>, <Espressione>, <Variabile parametro>, <Valore iniziale>, <Valore finale> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Circonferenza>, <Altezza> ]\n[ <Punto>, <Punto>, <Raggio> ]
CylinderInfinite=CilindroInfinito
CylinderInfinite.Syntax=[ <Retta>, <Raggio> ]\n[ <Punto>, <Vettore>, <Raggio> ]\n[ <Punto>, <Punto>, <Raggio> ]
DataFunction=FunzioneDati
DataFunction.Syntax=[ <Lista di numeri>, <Lista di numeri> ]
Defined=TestDefinito
Defined.Syntax=[ <Oggetto> ]
Degree=Grado
Degree.Syntax=[ <Polinomio> ]
Degree.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variabile> ]
DelauneyTriangulation=TriangolazioneDelaunay
DelauneyTriangulation.Syntax=[ <Lista di punti> ]
Delete=Elimina
Delete.Syntax=[ <Oggetto> ]
Denominator=Denominatore
Denominator.Syntax=[ <Numero> ]\n[ <Funzione> ]
Denominator.SyntaxCAS=[ <Espressione> ]
DensityPlot=GraficoDensità
Derivative=Derivata
Derivative.Syntax=[ <Funzione> ]\n[ <Curva> ]\n[ <Funzione>, <Numero> ]\n[ <Funzione>, <Variabile> ]\n[ <Curva>, <Numero> ]\n[ <Funzione>, <Variabile>, <Numero> ]
Derivative.SyntaxCAS=[ <Espressione> ]\n[ <Espressione>, <Variabile> ]\n[ <Espressione>, <Variabile>, <Numero> ]
Determinant=Determinante
Determinant.Syntax=[ <Matrice> ]
Diameter=DiametroConiugato
Diameter.Syntax=[ <Vettore>, <Conica> ]\n[ <Retta>, <Conica> ]
Difference=Differenza
Difference.Syntax=[ <Poligono>, <Poligono> ]
Dilate=Omotetia
Dilate.Syntax=[ <Oggetto>, <Rapporto di dilatazione> ]\n[ <Oggetto>, <Rapporto di dilatazione>, <Centro della dilatazione> ]
Dimension=Dimensione
Dimension.Syntax=[ <Oggetto> ]
Direction=Direzione
Direction.Syntax=[ <Retta> ]
Directrix=Direttrice
Directrix.Syntax=[ <Conica> ]
Distance=Distanza
Distance.Syntax=[ <Punto>, <Oggetto> ]\n[ <Retta>, <Retta> ]\n[ <Piano>, <Piano> ]
Distance.SyntaxCAS=[ <Punto>, <Oggetto> ]
Div=Quoziente
Div.Syntax=[ <Numero dividendo>, <Numero divisore> ]\n[ <Polinomio dividendo>, <Polinomio divisore> ]
Division=Divisione
Division.Syntax=[ <Numero dividendo>, <Numero divisore> ]\n[ <Polinomio dividendo>, <Polinomio divisore> ]
Divisors=Divisori
Divisors.Syntax=[ <Numero> ]
DivisorsList=ListaDivisori
DivisorsList.Syntax=[ <Numero> ]
DivisorsSum=SommaDivisori
DivisorsSum.Syntax=[ <Numero> ]
Dodecahedron=Dodecaedro
Dodecahedron.Syntax=[ <Pentagono regolare> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
Dot=ProdottoScalare
Dot.Syntax=[ <Vettore>, <Vettore> ]
DotPlot=DiagrammaPunti
DotPlot.Syntax=[ <Lista dati grezzi>, <Impila punti adiacenti (facoltativo)>, <Fattore di scala (facoltativo)>]
DynamicCoordinates=CoordinateDinamiche
DynamicCoordinates.Syntax=[ <Punto>, <Ascissa>, <Ordinata> ]\n[ <Punto>, <Ascissa>, <Ordinata>, <Quota> ]
Eccentricity=Eccentricità
Eccentricity.Syntax=[ <Conica> ]
Eigenvalues=Autovalori
Eigenvalues.SyntaxCAS=[ <Matrice> ]
Eigenvectors=Autovettori
Eigenvectors.SyntaxCAS=[ <Matrice> ]
Element=Elemento
Element.Syntax=[ <Lista>, <Posizione dell'elemento> ]\n[ <Matrice>, <Riga>, <Colonna> ]\n[ <Lista>, <Indice1>, <Indice2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Posizione dell'elemento> ]\n[ <Matrice>, <Riga>, <Colonna> ]
Eliminate=Riduzione
Eliminate.Syntax=[ <Lista di polinomi>, <Lista di Variabili> ]
Ellipse=Ellisse
Ellipse.Syntax=[ <Fuoco>, <Fuoco>, <Lunghezza semiasse maggiore> ]\n[ <Fuoco>, <Fuoco>, <Segmento> ]\n[ <Fuoco>, <Fuoco>, <Punto> ]
Ends=BasiInfSup
Ends.Syntax=[ <Quadrica> ]
Envelope=Inviluppo
Envelope.Syntax=[ <Cammino>, <Punto> ]
Erlang.Syntax=[ <Forma>, <Tasso>, <Valore variabile> ]\n[ <Forma>, <Tasso>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Forma>, <Tasso>, x, <Booleano Cumulata> ]
Evaluate=Calcola
Excentricity=SemidistanzaFocale
Excentricity.Syntax=[ <Conica> ]
Execute=Esegui
Execute.Syntax=[ <Lista di testi> ]\n[ <Lista di testi>, <Parametro>, <Parametro>, ... ]
Expand=Sviluppa
Expand.Syntax=[ <Espressione> ]
Exponential=Esponenziale
Exponential.Syntax=[ <Lambda>, <Valore variabile> ]\n[ <Lambda>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Lambda>, x, <Booleano Cumulata> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valore variabile> ]
ExportImage=EsportaImmagine
ExportImage.Syntax=[ <Proprietà>, <Valore>, <Proprietà>, <Valore>, ... ]
ExtendedGCD=MCDEsteso
ExtendedGCD.Syntax=[ <Intero>, <Intero>]\n[ <Polinomio>, <Polinomio>]
Extremum=Estremo
Extremum.Syntax=[ <Polinomio> ]\n[ <Funzione>, <x iniziale>, <x finale> ]
Extremum.SyntaxCAS=[ <Funzione> ]\n[ <Funzione>, <x iniziale>, <x finale> ]
FDistribution=DistribuzioneF
FDistribution.Syntax=[ <Gradi di libertà numeratore>, <Gradi di libertà denominatore>, <Valore variabile> ]\n[ <Gradi di libertà numeratore>, <Gradi di libertà denominatore>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Gradi di libertà numeratore>, <Gradi di libertà denominatore>, x, <Booleano Cumulata> ]
FDistribution.SyntaxCAS=[ <Gradi di libertà numeratore>, <Gradi di libertà denominatore>, <Valore variabile> ]
Factor=Fattorizza
Factor.Syntax=[ <Polinomio> ]
Factor.SyntaxCAS=[ <Numero> ]\n[ <Polinomio> ]\n[ <Espressione>, <Variabile> ]
Factors=Fattori
Factors.Syntax=[ <Polinomio> ]\n[ <Numero> ]
FillCells=RiempiCelle
FillCells.Syntax=[ <IntervalloCelle>, <Oggetto> ]\n[ <Cella>, <Lista> ]\n[ <Cella>, <Matrice> ]
FillColumn=RiempiColonna
FillColumn.Syntax=[ <Colonna>, <Lista> ]
FillRow=RiempiRiga
FillRow.Syntax=[ <Riga>, <Lista> ]
First=Primo
First.Syntax=[ <Lista> ]\n[ <Testo> ]\n[ <Lista>, <Numero di elementi> ]\n[ <Testo>, <Numero di elementi> ]\n[ <Luogo>, <Numero di elementi> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Numero di elementi> ]
FirstAxis=AsseMaggiore
FirstAxis.Syntax=[ <Conica> ]
FirstAxisLength=LunghezzaSemiAsseMag
FirstAxisLength.Syntax=[ <Conica> ]
Fit=Regressione
Fit.Syntax=[ <Lista di punti>, <Lista di funzioni> ]\n[ <Lista di punti>, <Funzione> ]
FitExp=RegExp
FitExp.Syntax=[ <Lista di punti> ]
FitGrowth=RegCrescita
FitGrowth.Syntax=[ <Lista di punti> ]
FitImplicit=RegImplicita
FitImplicit.Syntax=[ <Lista di punti>, <Ordine> ]
FitLineX=RegLinX
FitLineX.Syntax=[ <Lista di punti> ]
FitLineY=RegLin
FitLineY.Syntax=[ <Lista di punti> ]
FitLog=RegLog
FitLog.Syntax=[ <Lista di punti> ]
FitLogistic=RegLogistica
FitLogistic.Syntax=[ <Lista di punti> ]
FitPoly=RegPol
FitPoly.Syntax=[ <Lista di punti>, <Grado del polinomio> ]\n[ <Funzione a mano libera>, <Grado del polinomio> ]
FitPow=RegPot
FitPow.Syntax=[ <Lista di punti> ]
FitSin=RegSin
FitSin.Syntax=[ <Lista di punti> ]
Flatten=Singola
Flatten.Syntax=[ <Lista> ]
Focus=Fuoco
Focus.Syntax=[ <Conica> ]
FractionText=FrazioneInTesto
FractionText.Syntax=[ <Numero> ]\n[ <Punto> ]\n[ <Numero>, <Booleano frazione singola> ]
Frequency=Frequenza
Frequency.Syntax=[ <Lista dati grezzi> ]\n[ <Booleano Cumulata>, <Lista dati grezzi> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi> ]\n[ <Lista di testi>, <Lista di testi> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]
FrequencyPolygon=PoligonoFrequenza
FrequencyPolygon.Syntax=[ <Lista degli estremi delle classi>, <Lista altezze> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi>, <Booleano Usa densità>, <Fattore di scala densità (facoltativo)> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi>, <Booleano Usa densità>, <Fattore di scala densità (facoltativo)> ]
FrequencyTable=TabellaFrequenza
FrequencyTable.Syntax=[ <Lista dati grezzi>, <Fattore di scala (facoltativo)> ]\n[ <Booleano Cumulata>, <Lista dati grezzi> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]
FromBase=DaBase
FromBase.Syntax=[ <Numero come testo>, <Base> ]
Function=Funzione
Function.Syntax=[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Lista di numeri> ]
Function.Syntax3D=[ <Lista di numeri> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Espressione>, <Parametro variabile 1>, <Valore iniziale>, <Valore finale>, <Parametro variabile 2>, <Valore iniziale>, <Valore finale> ]
Function.SyntaxCAS=[ <Funzione>, <x iniziale>, <x finale> ]
FutureValue=ValoreFuturo
FutureValue.Syntax=[ <Tasso>, <Numero periodi>, <Pagamento>, <Valore attuale (facoltativo)>, <Tipo (facoltativo)> ]
GCD=MCD
GCD.Syntax=[ <Lista di numeri> ]\n[ <Numero>, <Numero> ]
GCD.SyntaxCAS=[ <Lista di numeri> ]\n[ <Lista di polinomi> ]\n[ <Numero>, <Numero> ]\n[ <Polinomio>, <Polinomio> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Valore variabile> ]\n[ <Alfa>, <Beta>, <Valore variabile>, <Booleano Cumulata>  ]\n[ <Alfa>, <Beta>, x, <Booleano Cumulata> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valore variabile> ]
GeometricMean=MediaGeometrica
GeometricMean.Syntax=[ <Lista di numeri> ]
GetTime=OraData
GetTime.Syntax=[]\n[ <Formato> ]
GroebnerDegRevLex=GroebnerLexGrInv
GroebnerDegRevLex.Syntax=[ <Lista di polinomi> ]\n[ <Lista di polinomi>, <Lista di Variabili> ]
GroebnerLex.Syntax=[ <Lista di polinomi> ]\n[ <Lista di polinomi>, <Lista di Variabili> ]
GroebnerLexDeg=GroebnerLexGr
GroebnerLexDeg.Syntax=[ <Lista di polinomi> ]\n[ <Lista di polinomi>, <Lista di Variabili> ]
HarmonicMean=MediaArmonica
HarmonicMean.Syntax=[ <Lista di numeri> ]
Height=Altezza
Height.Syntax=[ <Solido> ]
HideLayer=NascondiLivello
HideLayer.Syntax=[ <Numero> ]
Histogram=Istogramma
Histogram.Syntax=[ <Lista degli estremi delle classi>, <Lista altezze> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]
HistogramRight=IstogrammaDestra
HistogramRight.Syntax=[ <Lista degli estremi delle classi>, <Lista altezze> ]\n[ <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)>  ]\n[ <Booleano Cumulata>, <Lista degli estremi delle classi>, <Lista dati grezzi>, <Usa densità>, <Fattore di scala densità (facoltativo)> ]
HyperGeometric=IperGeometrica
HyperGeometric.Syntax=[ <Dimensione popolazione>, <Numero successi>, <Dimensione campione> ]\n[ <Dimensione popolazione>, <Numero successi>, <Dimensione campione>, <Booleano Cumulata> ]\n[ <Dimensione popolazione>, <Numero successi>, <Dimensione campione>, <Valore variabile>, <Booleano Cumulata> ]
HyperGeometric.SyntaxCAS=[ <Dimensione popolazione>, <Numero successi>, <Dimensione campione>, <Valore variabile>, <Booleano Cumulata> ]
Hyperbola=Iperbole
Hyperbola.Syntax=[ <Fuoco>, <Fuoco>, <Lunghezza semiasse maggiore> ]\n[ <Fuoco>, <Fuoco>, <Segmento> ]\n[ <Fuoco>, <Fuoco>, <Punto> ]
IFactor=FattorizzaI
IFactor.Syntax=[ <Polinomio> ]
IFactor.SyntaxCAS=[ <Espressione> ]
Icosahedron=Icosaedro
Icosahedron.Syntax=[ <Triangolo equilatero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
Identity=Identica
Identity.Syntax=[ <Numero> ]
If=Se
If.Syntax=[ <Condizione>, <Allora> ]\n[ <Condizione>, <Allora>, <Altrimenti> ]
ImplicitCurve=CurvaImplicita
ImplicitCurve.Syntax=[ <Lista di punti> ]\n[ <f(x, y)> ]
ImplicitDerivative=DerivataImplicita
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Espressione>, <Variabile dipendente>, <Variabile indipendente> ]
Incircle=CerchioIn
Incircle.Syntax=[ <Punto>, <Punto>, <Punto> ]
IndexOf=PosizioneDi
IndexOf.Syntax=[ <Oggetto>, <Lista> ]\n[ <Testo>, <Testo> ]\n[ <Oggetto>, <Lista>, <Posizione riferimento> ]\n[ <Testo>, <Testo>, <Posizione riferimento> ]
Insert=Inserisci
Insert.Syntax=[ <Lista>, <Lista>, <Posizione> ]\n[ <Oggetto>, <Lista>, <Posizione> ]
Integral=Integrale
Integral.Syntax=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <x iniziale>, <x finale>, <Booleano Valutazione> ]
Integral.SyntaxCAS=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
IntegralBetween=IntegraleTra
IntegralBetween.Syntax=[ <Funzione>, <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Funzione>, <x iniziale>, <x finale>, <Booleano Valutazione> ]
IntegralBetween.SyntaxCAS=[ <Funzione>, <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Funzione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
IntegralSymbolic=IntegraleSimbolico
IntegralSymbolic.Syntax=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]
InteriorAngles=AngoliInterni
InteriorAngles.Syntax=[ <Poligono> ]
Intersect=Intersezione
Intersect.Syntax=[ <Oggetto>, <Oggetto> ]\n[ <Oggetto>, <Oggetto>, <Numero del punto di intersezione> ]\n[ <Oggetto>, <Oggetto>, <Punto iniziale> ]\n[ <Funzione>, <Funzione>, <x iniziale>, <x finale> ]\n[ <Curva1>, <Curva2>, <Parametro1>, <Parametro2> ]
Intersect.SyntaxCAS=[ <Funzione>, <Funzione> ]
IntersectConic=IntersezioneConica
IntersectConic.Syntax=[ <Piano>, <Quadrica> ]\n[ <Quadrica>, <Quadrica> ]
IntersectPath=IntersezioneCammini
IntersectPath.Syntax=[ <Retta>, <Poligono> ]\n[ <Poligono>, <Poligono> ]
IntersectPath.Syntax3D=[ <Retta>, <Poligono> ]\n[ <Poligono>, <Poligono> ]\n[ <Piano>, <Poligono> ]\n[ <Piano>, <Quadrica> ]
Intersection=Interseca
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBeta=BetaInversa
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Probabilità> ]
InverseBinomial=BinomialeInversa
InverseBinomial.Syntax=[ <Numero di prove>, <Probabilità di successo>, <Probabilità cumulata> ]
InverseBinomialMinimumTrials=BinomialeInversaMinProve
InverseBinomialMinimumTrials.Syntax=[ <Probabilità cumulata>, <Probabilità di successo>, <Numero successi> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Probabilità cumulata>, <Probabilità di successo>, <Numero successi> ]
InverseCauchy=CauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Scala>, <Probabilità> ]
InverseChiSquared=ChiQuadroInversa
InverseChiSquared.Syntax=[ <Gradi di libertà>, <Probabilità> ]
InverseExponential=EsponenzialeInversa
InverseExponential.Syntax=[ <Lambda>, <Probabilità> ]
InverseFDistribution=DistribuzioneFInversa
InverseFDistribution.Syntax=[ <Gradi di libertà numeratore>, <Gradi di libertà denominatore>, <Probabilità> ]
InverseGamma=GammaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilità> ]
InverseHyperGeometric=IperGeometricaInversa
InverseHyperGeometric.Syntax=[ <Dimensione popolazione>, <Numero successi>, <Dimensione campione>, <Probabilità> ]
InverseLaplace=LaplaceInversa
InverseLaplace.Syntax=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]\n[ <Funzione>, <Variabile>, <Variabile> ]
InverseLogNormal=LogNormaleInversa
InverseLogNormal.Syntax=[ <Media>, <Deviazione standard>, <Probabilità> ]
InverseLogistic=LogisticaInversa
InverseLogistic.Syntax=[ <Media>, <Scala>, <Probabilità> ]
InverseNormal=NormaleInversa
InverseNormal.Syntax=[ <Media>, <Deviazione standard>, <Probabilità cumulata> ]
InversePascal=PascalInversa
InversePascal.Syntax=[ <n>, <p>, <Probabilità> ]
InversePoisson=PoissonInversa
InversePoisson.Syntax=[ <Media>, <Probabilità> ]
InverseTDistribution=DistribuzioneTInversa
InverseTDistribution.Syntax=[ <Gradi di libertà>, <Probabilità> ]
InverseWeibull=WeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Scala>, <Probabilità> ]
InverseZipf=ZipfInversa
InverseZipf.Syntax=[ <Numero di elementi>, <Esponente>, <Probabilità> ]
Invert=Inversa
Invert.Syntax=[ <Matrice> ]\n[ <Funzione> ]
IsFactored=TestFattorizzato
IsFactored.Syntax=[ <Polinomio> ]
IsInRegion=TestRegione
IsInRegion.Syntax=[ <Punto>, <Regione> ]
IsInteger=TestIntero
IsInteger.Syntax=[ <Numero> ]
IsPrime=TestPrimo
IsPrime.Syntax=[ <Numero> ]
IsTangent=TestTangenza
IsTangent.Syntax=[ <Retta>, <Conica> ]
IsVertexForm=TestFormaVertice
IsVertexForm.Syntax=[ <Funzione> ]
Iteration=Iterazione
Iteration.Syntax=[ <Funzione>, <Valore iniziale>, <Numero di iterazioni> ]\n[ <Espressione>, <Variabili>, <Valori iniziali>, <Conteggio> ]
IterationList=IterazioneLista
IterationList.Syntax=[ <Funzione>, <Valore iniziale>, <Numero di iterazioni> ]\n[ <Espressione>, <Variabili>, <Valori iniziali>, <Conteggio> ]
IterationList.SyntaxCAS=[ <Funzione>, <Valore iniziale>, <Numero di iterazioni> ]
Join=Unisci
Join.Syntax=[ <Lista di liste> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=DiagonalizzazioneJordan
JordanDiagonalization.SyntaxCAS=[ <Matrice> ]
KeepIf=TieniSe
KeepIf.Syntax=[ <Condizione>, <Lista> ]\n[ <Condizione>, <Variabile>, <Lista> ]
LCM=MCM
LCM.Syntax=[ <Lista di numeri> ]\n[ <Numero>, <Numero> ]
LCM.SyntaxCAS=[ <Lista di numeri> ]\n[ <Lista di polinomi> ]\n[ <Numero>, <Numero> ]\n[ <Polinomio>, <Polinomio> ]
LUDecomposition=DecomposizioneLU
LUDecomposition.Syntax=[ <Matrice> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Oggetto> ]\n[ <Oggetto>, <Booleano per la sostituzione delle variabili> ]\n[ <Oggetto>, <Booleano per la sostituzione delle variabili>, <Booleano Mostra nome> ]
Laplace.Syntax=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]\n[ <Funzione>, <Variabile>, <Variabile> ]
Last=Ultimo
Last.Syntax=[ <Lista> ]\n[ <Testo> ]\n[ <Lista>, <Numero di elementi> ]\n[ <Testo>, <Numero di elementi> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Numero di elementi> ]
LeftSide=PrimoMembro
LeftSide.Syntax=[ <Equazione> ]
LeftSide.SyntaxCAS=[ <Equazione> ]\n[ <Lista di equazioni> ]\n[ <Lista di equazioni>, <Indice> ]
LeftSum=SommaSinistra
LeftSum.Syntax=[ <Funzione>, <x iniziale>, <x finale>, <Numero di rettangoli> ]
Length=Lunghezza
Length.Syntax=[ <Oggetto> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Punto iniziale>, <Punto finale> ]\n[ <Curva>, <Valore t iniziale>, <Valore t finale> ]\n[ <Curva>, <Punto iniziale>, <Punto finale> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Variabile>, <x iniziale>, <x finale> ]
LetterToUnicode=LetteraInUnicode
LetterToUnicode.Syntax=[ <Lettera> ]
Limit=Limite
Limit.Syntax=[ <Funzione>, <Valore> ]
Limit.SyntaxCAS=[ <Espressione>, <Valore> ]\n[ <Espressione>, <Variabile>, <Valore> ]
LimitAbove=LimiteDestro
LimitAbove.Syntax=[ <Funzione>, <Valore> ]
LimitAbove.SyntaxCAS=[ <Espressione>, <Valore> ]\n[ <Espressione>, <Variabile>, <Valore> ]
LimitBelow=LimiteSinistro
LimitBelow.Syntax=[ <Funzione>, <Valore> ]
LimitBelow.SyntaxCAS=[ <Espressione>, <Valore> ]\n[ <Espressione>, <Variabile>, <Valore> ]
Line=Retta
Line.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Retta parallela> ]\n[ <Punto>, <Vettore direzione> ]
LineBisector=AsseSegmento
LineBisector.Syntax=[ <Segmento> ]\n[ <Punto>, <Punto> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
LineGraph=DiagrammaCartesiano
LineGraph.Syntax=[ <Lista di ascisse>, <Lista di ordinate> ]
Locus=Luogo
Locus.Syntax=[ <Punto che genera il luogo>, <Punto> ]\n[ <Punto che genera il luogo>, <Slider> ]\n[ <Campo direzioni>, <Punto> ]\n[ <f(x, y)>, <Punto> ]
LocusEquation=EquazioneLuogo
LocusEquation.Syntax=[ <Luogo> ]\n[ <Punto luogo>, <Punto in movimento> ]\n[ <Espressione booleana>, <Punto in movimento> ]
LogNormal=LogNormale
LogNormal.Syntax=[ <Media>, <Deviazione standard>, <Valore variabile> ]\n[ <Media>, <Deviazione standard>, <Valore variabile>, <Booleano Cumulata>  ]\n[ <Media>, <Deviazione standard>, x, <Booleano Cumulata> ]
Logistic=Logistica
Logistic.Syntax=[ <Media>, <Scala>, <Valore variabile> ]\n[ <Media>, <Scala>, <Valore variabile>, <Booleano Cumulata>  ]\n[ <Media>, <Scala>, x, <Booleano Cumulata> ]
LowerSum=SommaInferiore
LowerSum.Syntax=[ <Funzione>, <x iniziale>, <x finale>, <Numero di rettangoli> ]
MAD=SMA
MatrixPlot=GraficoMatrice
MatrixRank=RangoMatrice
MatrixRank.Syntax=[ <Matrice> ]
Max.Syntax=[ <Intervallo> ]\n[ <Numero>, <Numero> ]\n[ <Lista> ]\n[ <Lista dati>, <Lista frequenze> ]\n[ <Funzione>, <x iniziale>, <x finale> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Intervallo> ]\n[ <Numero>, <Numero> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Lista dati>, <Lista frequenze> ]
Maximize=Massimizza
Maximize.Syntax=[ <Numero dipendente>, <Numero libero> ]\n[ <Numero dipendente>, <Punto su cammino> ]
Mean=Media
Mean.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
MeanX=MediaX
MeanX.Syntax=[ <Lista di punti> ]
MeanY=MediaY
MeanY.Syntax=[ <Lista di punti> ]
Median=Mediana
Median.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
Median.SyntaxCAS=[ <Lista di numeri> ]
Midpoint=PuntoMedio
Midpoint.Syntax=[ <Segmento> ]\n[ <Conica> ]\n[ <Intervallo> ]\n[ <Punto>, <Punto> ]
Min.Syntax=[ <Intervallo> ]\n[ <Numero>, <Numero> ]\n[ <Lista> ]\n[ <Lista dati>, <Lista frequenze> ]\n[ <Funzione>, <x iniziale>, <x finale> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Intervallo> ]\n[ <Numero>, <Numero> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Lista dati>, <Lista frequenze> ]
MinimalPolynomial=PolinomioMinimo
MinimalPolynomial.Syntax=[ <Matrice> ]
Minimize=Minimizza
Minimize.Syntax=[ <Numero dipendente>, <Numero libero> ]\n[ <Numero dipendente>, <Punto su cammino> ]
MinimumSpanningTree=MinimoAlberoRicoprente
MinimumSpanningTree.Syntax=[ <Lista di punti> ]
Mirror=Simmetrico
Mirror.Syntax=[ <Oggetto>, <Punto> ]\n[ <Oggetto>, <Retta> ]\n[ <Oggetto>, <Circonferenza> ]
Mirror.Syntax3D=[ <Oggetto>, <Punto> ]\n[ <Oggetto>, <Retta> ]\n[ <Oggetto>, <Piano> ]\n[ <Oggetto>, <Circonferenza> ]
MixedNumber=NumeroMisto
MixedNumber.SyntaxCAS=[ <Numero> ]
Mod=Resto
Mod.Syntax=[ <Numero dividendo>, <Numero divisore> ]\n[ <Polinomio dividendo>, <Polinomio divisore> ]
Mode=Moda
Mode.Syntax=[ <Lista di numeri> ]
ModularExponent=PotenzaModulare
ModularExponent.Syntax=[ <Numero>, <Numero>, <Numero> ]
NDerivative=DerivataN
NDerivative.Syntax=[ <Funzione> ]\n[ <Funzione>, <Ordine> ]
NIntegral=IntegraleN
NIntegral.Syntax=[ <Funzione> ]\n[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <x iniziale>, <Start y-Value>, <x finale> ]
NIntegral.SyntaxCAS=[ <Funzione>, <x iniziale>, <x finale> ]\n[ <Funzione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
NInvert=NInversa
NInvert.Syntax=[ <Funzione> ]
NSolutions=SoluzioniN
NSolutions.Syntax=[ <Equazione> ]
NSolutions.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Variabile> ]\n[ <Equazione>, <Variabile=valore iniziale> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]
NSolve=RisolviN
NSolve.Syntax=[ <Equazione> ]
NSolve.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Variabile> ]\n[ <Equazione>, <Variabile=valore iniziale> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]
NSolveODE=RisolviNEDO
NSolveODE.Syntax=[ <Lista derivate>, <x iniziale>, <Lista y iniziali>, <x finale> ]
Name=Nome
Name.Syntax=[ <Oggetto> ]
Net=SviluppoPiano
Net.Syntax=[ <Poliedro>, <Numero> ]\n[ <Poliedro>, <Numero>, <Faccia>, <Spigolo>, <Spigolo>, ... ]
NextPrime=PrimoSucc
NextPrime.Syntax=[ <Numero> ]
Normal=Normale
Normal.Syntax=[ <Media>, <Deviazione standard>, <Valore variabile> ]\n[ <Media>, <Deviazione standard>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Media>, <Deviazione standard>, x, <Booleano Cumulata> ]
NormalQuantilePlot=GraficoQuantileNormale
NormalQuantilePlot.Syntax=[ <Lista dati grezzi> ]
Normalize=Normalizza
Normalize.Syntax=[ <Lista di numeri> ]\n[ <Lista di punti> ]
Numerator=Numeratore
Numerator.Syntax=[ <Numero> ]\n[ <Funzione> ]
Numerator.SyntaxCAS=[ <Espressione> ]
Numeric=Numerico
Numeric.SyntaxCAS=[ <Espressione> ]\n[ <Espressione>, <Cifre significative> ]
Object=Oggetto
Object.Syntax=[ <Nome dell'oggetto come testo> ]
Octahedron=Ottaedro
Octahedron.Syntax=[ <Triangolo equilatero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
Ordinal=Ordinale
Ordinal.Syntax=[ <Intero> ]
OrdinalRank=Posizione
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Perpendicolare
OrthogonalLine.Syntax=[ <Punto>, <Retta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vettore> ]
OrthogonalLine.Syntax3D=[ <Punto>, <Retta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vettore> ]\n[ <Punto>, <Piano> ]\n[ <Retta>, <Retta> ]\n[ <Punto>, <Direzione>, <Direzione> ]\n[ <Punto>, <Retta>, <Contesto> ]
OrthogonalPlane=PianoPerpendicolare
OrthogonalPlane.Syntax=[ <Punto>, <Retta> ]\n[ <Punto>, <Vettore> ]
OrthogonalVector=VettorePerpendicolare
OrthogonalVector.Syntax=[ <Retta> ]\n[ <Segmento> ]\n[ <Vettore> ]
OrthogonalVector.Syntax3D=[ <Retta> ]\n[ <Segmento> ]\n[ <Vettore> ]\n[ <Piano> ]
OrthogonalVector.SyntaxCAS=[ <Vettore> ]
OsculatingCircle=CerchioOsculatore
OsculatingCircle.Syntax=[ <Punto>, <Oggetto> ]
PMCC=CoeffCorrelazione
PMCC.Syntax=[ <Lista di punti> ]\n[ <Lista di ascisse>, <Lista di ordinate> ]
Pan=SpostaVista
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Punto>, <Retta> ]
Parameter=Parametro
Parameter.Syntax=[ <Parabola> ]
ParametricDerivative=DerivataParametrica
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=AnalizzaFunzione
ParseToFunction.Syntax=[ <Funzione>, <Testo> ]
ParseToNumber=AnalizzaNumero
ParseToNumber.Syntax=[ <Numero>, <Testo> ]
PartialFractions=FrazioniParziali
PartialFractions.Syntax=[ <Funzione> ]
PartialFractions.SyntaxCAS=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Booleano Cumulata> ]\n[ <n>, <p>, <Valore variabile>, <Booleano Cumulata> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valore variabile>, <Booleano Cumulata> ]
PathParameter=ParametroCammino
PathParameter.Syntax=[ <Punto su cammino> ]
Payment=Rata
Payment.Syntax=[ <Tasso>, <Numero periodi>, <Valore attuale>, <Valore futuro (facoltativo)>, <Tipo (facoltativo)> ]
PenStroke.Syntax=[ <Punto>, ..., <Punto> ]
Percentile.Syntax=[ <Lista di numeri>, <Percentuale> ]
Perimeter=Perimetro
Perimeter.Syntax=[ <Poligono> ]\n[ <Conica> ]\n[ <Luogo> ]
Periods=NumeroRate
Periods.Syntax=[ <Tasso>, <Pagamento>, <Valore attuale>, <Valore futuro (facoltativo)>, <Tipo (facoltativo)> ]
PieChart=DiagrammaTorta
PieChart.Syntax=[ <Lista frequenze> ]\n[ <Lista frequenze>, <Centro>, <Raggio> ]
Plane=Piano
Plane.Syntax=[ <Poligono> ]\n[ <Conica> ]\n[ <Punto>, <Piano> ]\n[ <Punto>, <Retta> ]\n[ <Retta>, <Retta> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Vettore>, <Vettore> ]
PlaneBisector=PianoBisettore
PlaneBisector.Syntax=[ <Segmento> ]\n[ <Punto>, <Punto> ]
PlaySound=Suono
PlaySound.Syntax=[ <URL> ]\n[ <Booleano Esegui> ]\n[ <Funzione>, <Valore min>, <Valore max> ]\n[ <Funzione>, <Valore min>, <Valore max>, <Frequenza campionamento>, <Profondità> ]
PlotSolve=RisolviGrafico
PlotSolve.Syntax=[ <Equazione in x> ]
Point=Punto
Point.Syntax=[ <Oggetto> ]\n[ <Oggetto>, <Parametro> ]\n[ <Punto>, <Vettore> ]\n[ <Lista> ]
PointIn=PuntoIn
PointIn.Syntax=[ <Regione> ]
PointList=ListaPunti
PointList.Syntax=[ <Lista> ]
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Booleano Cumulata> ]\n[ <Media>, <Valore variabile>, <Booleano Cumulata> ]
Poisson.SyntaxCAS=[ <Media>, <Valore variabile>, <Booleano Cumulata> ]
Polar=Polare
Polar.Syntax=[ <Punto>, <Conica> ]\n[ <Retta>, <Conica> ]
PolyLine=Spezzata
PolyLine.Syntax=[ <Lista di punti> ]\n[ <Punto>, ..., <Punto> ]
Polygon=Poligono
Polygon.Syntax=[ <Lista di punti> ]\n[ <Punto>, ..., <Punto> ]\n[ <Punto>, <Punto>, <Numero di vertici> ]
Polygon.Syntax3D=[ <Lista di punti> ]\n[ <Punto>, ..., <Punto> ]\n[ <Punto>, <Punto>, <Numero di vertici> ]\n[ <Punto>, <Punto>, <Numero di vertici>, <Direzione> ]
Polynomial=Polinomio
Polynomial.Syntax=[ <Funzione> ]\n[ <Lista di punti> ]
Polynomial.SyntaxCAS=[ <Funzione> ]\n[ <Funzione>, <Variabile> ]
PresentValue=ValoreAttuale
PresentValue.Syntax=[ <Tasso>, <Numero periodi>, <Pagamento>, <Valore futuro (facoltativo)>, <Tipo (facoltativo)> ]
PreviousPrime=PrimoPrec
PreviousPrime.Syntax=[ <Numero> ]
PrimeFactors=FattoriPrimi
PrimeFactors.Syntax=[ <Numero> ]
Prism=Prisma
Prism.Syntax=[ <Poligono>, <Punto> ]\n[ <Poligono>, <Altezza> ]\n[ <Punto>, <Punto>, ... ]
Product=Prodotto
Product.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Numero di elementi> ]\n[ <Lista di numeri>, <Lista frequenze> ]\n[ <Espressione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
Product.SyntaxCAS=[ <Lista di espressioni> ]\n[ <Espressione>, <Variabile>, <Posizione riferimento>, <Indice finale> ]
Prove=Verifica
Prove.Syntax=[ <Espressione booleana> ]
ProveDetails=DettagliVerifica
ProveDetails.Syntax=[ <Espressione booleana> ]
Pyramid=Piramide
Pyramid.Syntax=[ <Poligono>, <Punto> ]\n[ <Poligono>, <Altezza> ]\n[ <Punto>, <Punto>, <Punto>, <Punto>, ... ]
Q1.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
Q3.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
QRDecomposition=DecomposizioneQR
QRDecomposition.Syntax=[ <Matrice> ]
QuadricSide=SuperficieLaterale
QuadricSide.Syntax=[ <Quadrica> ]
RSquare=CoeffDeterminazione
RSquare.Syntax=[ <Lista di punti>, <Funzione> ]
Radius=Raggio
Radius.Syntax=[ <Conica> ]
Random=CasualeTra
Random.Syntax=[ <Minimo intero>, <Massimo intero> ]\n[ <Minimo intero>, <Massimo intero>, <Numero di campioni> ]\n[ <Minimo intero>, <Massimo intero>, <Booleano Fissato> ]
Random.SyntaxCAS=[ <Minimo intero>, <Massimo intero> ]\n[ <Minimo intero>, <Massimo intero>, <Numero di campioni> ]
RandomBinomial=CasualeBinomiale
RandomBinomial.Syntax=[ <Numero di prove>, <Probabilità> ]
RandomDiscrete=CasualeDiscreto
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=ElementoCasuale
RandomElement.Syntax=[ <Lista> ]
RandomNormal=CasualeNormale
RandomNormal.Syntax=[ <Media>, <Deviazione standard> ]
RandomPointIn=PuntoCasualeIn
RandomPointIn.Syntax=[ <Regione> ]\n[ <Lista di punti> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=CasualePoisson
RandomPoisson.Syntax=[ <Media> ]
RandomPolynomial=PolinomioCasuale
RandomPolynomial.Syntax=[ <Grado>, <Minimo coefficienti>, <Massimo coefficienti> ]
RandomPolynomial.SyntaxCAS=[ <Grado>, <Minimo coefficienti>, <Massimo coefficienti> ]\n[ <Variabile>, <Grado>, <Minimo coefficienti>, <Massimo coefficienti> ]
RandomUniform=CasualeUniforme
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Numero di campioni> ]
Rate=Tasso
Rate.Syntax=[ <Numero periodi>, <Pagamento>, <Valore attuale>, <Valore futuro (facoltativo)>, <Tipo (facoltativo)>, <Ipotesi (facoltativo)> ]
Rationalize=Razionalizza
Rationalize.SyntaxCAS=[ <Numero> ]
Ray=Semiretta
Ray.Syntax=[ <Punto iniziale>, <Punto> ]\n[ <Punto iniziale>, <Vettore direzione> ]
ReadText=LeggiTesto
ReadText.Syntax=[ <Testo> ]
RectangleSum=SommaRettangoli
RectangleSum.Syntax=[ <Funzione>, <x iniziale>, <x finale>, <Numero di rettangoli>, <Posizione del primo rettangolo> ]
ReducedRowEchelonForm=MatriceRigheRidotte
ReducedRowEchelonForm.Syntax=[ <Matrice> ]
Relation=Relazione
Relation.Syntax=[ <Lista> ]\n[ <Oggetto>, <Oggetto> ]
RemovableDiscontinuity=DiscontinuitàEliminabile
RemovableDiscontinuity.Syntax=[ <Funzione> ]
Remove=Rimuovi
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=EliminaNonDefiniti
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Rinomina
Rename.Syntax=[ <Oggetto>, <Nome> ]
Repeat=Ripeti
Repeat.Syntax=[ <Numero>, <Comando scripting>, <Comando scripting>, ... ]
ReplaceAll=SostituisciTutto
ReplaceAll.Syntax=[ <Testo>, <Testo da sostituire>, <Nuovo testo> ]
ResidualPlot=GraficoResidui
ResidualPlot.Syntax=[ <Lista di punti>, <Funzione> ]
Reverse=Inverti
Reverse.Syntax=[ <Lista> ]
RightSide=SecondoMembro
RightSide.Syntax=[ <Equazione> ]
RightSide.SyntaxCAS=[ <Equazione> ]\n[ <Lista di equazioni> ]\n[ <Lista di equazioni>, <Indice> ]
RigidPolygon=PoligonoRigido
RigidPolygon.Syntax=[ <Poligono> ]\n[ <Poligono>, <Spostamento x>, <Spostamento y> ]\n[ <Punto libero>, ..., <Punto libero> ]
Root=Radice
Root.Syntax=[ <Polinomio> ]\n[ <Funzione>, <x iniziale> ]\n[ <Funzione>, <x iniziale>, <x finale> ]
Root.SyntaxCAS=[ <Polinomio> ]
RootList=ListaZeri
RootList.Syntax=[ <Lista> ]
RootMeanSquare=MediaQuadratica
RootMeanSquare.Syntax=[ <Lista di numeri> ]
Roots=Radici
Roots.Syntax=[ <Funzione>, <x iniziale>, <x finale> ]
Rotate=Ruota
Rotate.Syntax=[ <Oggetto>, <Angolo> ]\n[ <Oggetto>, <Angolo>, <Punto> ]
Rotate.Syntax3D=[ <Oggetto>, <Angolo> ]\n[ <Oggetto>, <Angolo>, <Punto> ]\n[ <Oggetto>, <Angolo>, <Asse di rotazione> ]\n[ <Oggetto>, <Angolo>, <Punto su asse>, <Direzione di asse o piano> ]
RotateText=RuotaTesto
RotateText.Syntax=[ <Testo>, <Angolo> ]
Row=Riga
Row.Syntax=[ <Cella del foglio di calcolo> ]
RunClickScript=EseguiScriptClic
RunClickScript.Syntax=[ <Oggetto> ]
RunUpdateScript=EseguiScriptAgg
RunUpdateScript.Syntax=[ <Oggetto> ]
SD=DS
SDX=DSX
SDX.Syntax=[ <Lista di punti> ]
SDY=DSY
SDY.Syntax=[ <Lista di punti> ]
SVD.Syntax=[ <Matrice> ]
SXX=SXX
SXX.Syntax=[ <Lista di numeri> ]\n[ <Lista di punti> ]
SXY=SXY
SXY.Syntax=[ <Lista di punti> ]\n[ <Lista di numeri>, <Lista di numeri> ]
SYY=SYY
SYY.Syntax=[ <Lista di punti> ]
Sample=Campione
Sample.Syntax=[ <Lista>, <Dimensione> ]\n[ <Lista>, <Dimensione>, <Booleano Sostituzione> ]
SampleSD=DSCampione
SampleSD.SyntaxCAS=[ <Lista di numeri> ]
SampleSDX=DSXCampione
SampleSDX.Syntax=[ <Lista di punti> ]
SampleSDY=DSYCampione
SampleSDY.Syntax=[ <Lista di punti> ]
SampleVariance=VarianzaCampione
SampleVariance.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
SampleVariance.SyntaxCAS=[ <Lista di numeri> ]
ScientificText=NotazioneScientifica
ScientificText.Syntax=[ <Numero> ]\n[ <Numero>, <Precisione> ]
SecondAxis=AsseMinore
SecondAxis.Syntax=[ <Conica> ]
SecondAxisLength=LunghezzaSemiAsseMin
SecondAxisLength.Syntax=[ <Conica> ]
Sector=Settore
Sector.Syntax=[ <Conica>, <Punto>, <Punto> ]\n[ <Conica>, <Valore parametro>, <Valore parametro> ]
Segment=Segmento
Segment.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Lunghezza> ]
SelectObjects=SelezionaOggetti
SelectObjects.Syntax=[ ]\n[ <Oggetto>, <Oggetto>, ... ]
SelectedElement=ElementoSelezionato
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=IndiceSelezionato
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicirconferenza
Semicircle.Syntax=[ <Punto>, <Punto> ]
Sequence=Successione
Sequence.Syntax=[ <Valore finale> ]\n[ <Valore iniziale>, <Valore finale> ]\n[ <Valore iniziale>, <Valore finale>, <Incremento> ]\n[ <Espressione>, <Variabile>, <Valore iniziale>, <Valore finale> ]\n[ <Espressione>, <Variabile>, <Valore iniziale>, <Valore finale>, <Incremento> ]
SetActiveView=ImpVistaAttiva
SetActiveView.Syntax=[ <Vista> ]\n[ <Piano> ]
SetAxesRatio=ImpRapportoAssi
SetAxesRatio.Syntax=[ <Numero>, <Numero> ]
SetAxesRatio.Syntax3D=[ <Numero>, <Numero> ]\n[ <Numero>, <Numero>, <Numero> ]
SetBackgroundColor=ImpColoreSfondo
SetBackgroundColor.Syntax=[ <Colore> ]\n[ <Oggetto>, <Colore> ]\n[ <Rosso>, <Verde>, <Blu> ]\n[ <Oggetto>, <Rosso>, <Verde>, <Blu> ]
SetCaption=ImpLegenda
SetCaption.Syntax=[ <Oggetto>, <Testo> ]
SetColor=ImpColore
SetColor.Syntax=[ <Oggetto>, <Colore> ]\n[ <Oggetto>, <Rosso>, <Verde>, <Blu> ]
SetConditionToShowObject=ImpCondizioneMostraOggetto
SetConditionToShowObject.Syntax=[ <Oggetto>, <Condizione> ]
SetConstructionStep=ImpPassoCostruzione
SetConstructionStep.Syntax=[ <Numero> ]
SetCoords=ImpCoordinate
SetCoords.Syntax=[ <Oggetto>, <x>, <y> ]\n[ <Oggetto>, <x>, <y>, <z> ]
SetDecoration=ImpDecorazione
SetDecoration.Syntax=[ <Oggetto>, <Numero> ]\n[ <Segmento>, <Numero>, <Numero>]
SetDynamicColor=ImpColoreDinamico
SetDynamicColor.Syntax=[ <Oggetto>, <Rosso>, <Verde>, <Blu> ]\n[ <Oggetto>, <Rosso>, <Verde>, <Blu>, <Opacità> ]
SetFilling=ImpRiempimento
SetFilling.Syntax=[ <Oggetto>, <Numero> ]
SetFixed=ImpFisso
SetFixed.Syntax=[ <Oggetto>, <true | false> ]\n[ <Oggetto>, <true | false>, <true | false> ]
SetImage=ImpImmagine
SetImage.Syntax=[ <Oggetto>, <Immagine> ]\n[ <Oggetto>, <Testo> ]
SetLabelMode=ImpModoEtichetta
SetLabelMode.Syntax=[ <Oggetto>, <Numero> ]
SetLayer=ImpLivello
SetLayer.Syntax=[ <Oggetto>, <Livello> ]
SetLevelOfDetail=ImpLivelloDettaglio
SetLevelOfDetail.Syntax=[ <Superficie>, <Livello di dettaglio> ]
SetLineStyle=ImpStileLinea
SetLineStyle.Syntax=[ <Oggetto>, <Numero> ]
SetLineThickness=ImpSpessoreLinea
SetLineThickness.Syntax=[ <Oggetto>, <Numero> ]
SetPerspective=ImpInterfaccia
SetPerspective.Syntax=[ <Testo> ]
SetPointSize=ImpDimensionePunto
SetPointSize.Syntax=[ <Oggetto>, <Numero> ]
SetPointStyle=ImpStilePunto
SetPointStyle.Syntax=[ <Punto>, <Numero> ]
SetSeed=ImpSeme
SetSeed.Syntax=[ <Intero> ]
SetSpinSpeed=ImpVelocitàRotazione
SetSpinSpeed.Syntax=[ <Numero> ]
SetTooltipMode=ImpModoTooltip
SetTooltipMode.Syntax=[ <Oggetto>, <Numero> ]
SetTrace=ImpTraccia
SetTrace.Syntax=[ <Oggetto>, <true | false> ]
SetValue=ImpValore
SetValue.Syntax=[ <Booleano>, <0|1> ]\n[ <Oggetto>, <Oggetto> ]\n[ <Lista>, <Numero>, <Oggetto> ]
SetViewDirection=ImpDirezioneVista
SetViewDirection.Syntax=[ ]\n[ <Direzione> ]\n[ <Direzione>, <Booleano Animazione> ]
SetVisibleInView=ImpVisibileInVista
SetVisibleInView.Syntax=[ <Oggetto>, <Numero Vista 1|2>, <Booleano> ]
Shear=Scorri
Shear.Syntax=[ <Oggetto>, <Retta>, <Rapporto> ]
ShortestDistance=DistanzaMinima
ShortestDistance.Syntax=[ <Lista di segmenti>, <Punto iniziale>, <Punto finale>, <Booleano Pesato> ]
ShowAxes=MostraAssi
ShowAxes.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowGrid=MostraGriglia
ShowGrid.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowLabel=MostraEtichetta
ShowLabel.Syntax=[ <Oggetto>, <Booleano> ]
ShowLayer=MostraLivello
ShowLayer.Syntax=[ <Numero> ]
ShowProof=MostraDimostrazione
ShowProof.Syntax=[ <Espressione booleana> ]
Shuffle=Mischia
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista di punti> ]\n[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
SigmaXY.Syntax=[ <Lista di punti> ]\n[ <Lista di ascisse>, <Lista di ordinate> ]
SigmaYY.Syntax=[ <Lista di punti> ]
Simplify=Semplifica
Simplify.Syntax=[ <Funzione> ]\n[ <Testo> ]
Simplify.SyntaxCAS=[ <Funzione> ]
Slider.Syntax=[ <Min>, <Max>, <Incremento>, <Velocità>, <Larghezza>, <Angolo>, <Orizzontale>, <Animazione>, <Casuale> ]
Slope=Pendenza
Slope.Syntax=[ <Retta> ]
SlopeField=CampoDirezioni
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Numero n> ]\n[ <f(x, y)>, <Numero n>, <Moltiplicatore lunghezza a> ]\n[ <f(x, y)>, <Numero n>, <Moltiplicatore lunghezza a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=GraficoLento
SlowPlot.Syntax=[ <Funzione> ]\n[ <Funzione>, <Booleano Ripeti> ]
Solutions=Soluzioni
Solutions.Syntax=[ <Equazione> ]
Solutions.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Variabile> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]
Solve=Risolvi
Solve.Syntax=[ <Equazione> ]
Solve.SyntaxCAS=[ <Equazione in x> ]\n[ <Equazione>, <Variabile> ]\n[ <Lista di equazioni>, <Lista di Variabili> ]\n[ <Lista di equazioni parametriche>, <Lista di Variabili> ]\n[ <Equazione>, <Variabile>, <Lista di condizioni> ]
SolveCubic=RisolviCubica
SolveCubic.SyntaxCAS=[ <Polinomio cubico> ]
SolveODE=RisolviEDO
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto di f> ]\n[ <f'(x, y)>, <x iniziale>, <y iniziale>, <x finale>, <Passo> ]\n[ <y'>, <x'>, <x iniziale>, <y iniziale>, <t finale>, <Passo> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x iniziale>, <y iniziale>, <y' iniziale>, <x finale>, <Passo> ]
SolveODE.SyntaxCAS=[ <Equazione> ]\n[ <Equazione>, <Punto/i su f> ]\n[ <Equazione>, <Punto/i su f>, <Punto/i su f'> ]\n[ <Equazione>, <Variabile dipendente>, <Variabile indipendente>, <Punto/i su f> ] \n[ <Equazione>, <Variabile dipendente>, <Variabile indipendente>, <Punto/i su f>, <Punto/i su f'> ]
SolveQuartic=RisolviQuartica
SolveQuartic.SyntaxCAS=[ <Polinomio quartico> ]
Sort=Ordina
Sort.Syntax=[ <Lista> ]\n[ <Valori>, <Chiavi> ]
Spearman.Syntax=[ <Lista di punti> ]\n[ <Lista di numeri>, <Lista di numeri> ]
Sphere=Sfera
Sphere.Syntax=[ <Punto>, <Raggio> ]\n[ <Punto>, <Punto> ]
Spline.Syntax=[ <Lista di punti> ]\n[ <Lista di punti>, <Ordine ≥ 3> ]\n[ <Lista di punti>, <Ordine ≥ 3>, <Funzione peso> ]
Split=Suddividi
Split.Syntax=[ <Testo>, <Lista di testi per la suddivisione> ]
StartAnimation=AvviaAnimazione
StartAnimation.Syntax=[ ]\n[ <Booleano> ]\n[ <Slider o punto>, <Slider o punto>, ... ]\n[ <Slider o punto>, <Slider o punto>, ..., <Booleano> ]
StartRecord=AvviaRegistrazione
StartRecord.Syntax=[ ]\n[ <Booleano> ]
StemPlot=DiagrammaRamoFoglia
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Regolazione -1|0|1> ]
StepGraph=DiagrammaGradini
StepGraph.Syntax=[ <Lista di punti> ]\n[ <Lista di punti>, <Booleano Unisci> ]\n[ <Lista di ascisse>, <Lista di ordinate> ]\n[ <Lista di punti>, <Booleano Unisci>, <Stile punto> ]\n[ <Lista di ascisse>, <Lista di ordinate>, <Booleano Unisci> ]\n[ <Lista di ascisse>, <Lista di ordinate>, <Booleano Unisci>, <Stile punto> ]
StickGraph=DiagrammaAste
StickGraph.Syntax=[ <Lista di punti> ]\n[ <Lista di punti>, <Booleano Orizzontale> ]\n[ <Lista di ascisse>, <Lista di ordinate> ]\n[ <Lista di ascisse>, <Lista di ordinate>, <Booleano Orizzontale> ]
Stretch=Dilata
Stretch.Syntax=[ <Oggetto>, <Vettore> ]\n[ <Oggetto>, <Retta>, <Rapporto> ]
Substitute=Sostituisci
Substitute.SyntaxCAS=[ <Espressione>, <Lista di sostituzioni> ]\n[ <Espressione>, <Termine>, <Sostituto> ]
Sum=Somma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Numero di elementi> ]\n[ <Lista>, <Lista frequenze> ]\n[ <Espressione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Espressione>, <Variabile>, <Valore iniziale>, <Valore finale> ]
SumSquaredErrors=SommaQuadratiErrori
SumSquaredErrors.Syntax=[ <Lista di punti>, <Funzione> ]
SurdText=IrrazionaleInTesto
SurdText.Syntax=[ <Punto> ]\n[ <Numero> ]\n[ <Numero>, <Lista> ]
Surface=Superficie
Surface.Syntax=[ <Funzione>, <Angolo> ]\n[ <Curva>, <Angolo>, <Retta> ]\n[ <Espressione>, <Espressione>, <Espressione>, <Parametro variabile 1>, <Valore iniziale>, <Valore finale>, <Parametro variabile 2>, <Valore iniziale>, <Valore finale> ]
TDistribution=DistribuzioneT
TDistribution.Syntax=[ <Gradi di libertà>, <Valore variabile> ]\n[ <Gradi di libertà>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Gradi di libertà>, x, <Booleano Cumulata> ]
TDistribution.SyntaxCAS=[ <Gradi di libertà>, <Valore variabile> ]
TMean2Estimate=StimaTMedia2
TMean2Estimate.Syntax=[ <Lista dati campione 1>, <Lista dati campione 2>, <Livello di confidenza>, <Booleano Combinata> ]\n[ <Media campione 1>, <Deviazione standard campione 1>, <Dimensione campione 1>, <Media campione 2>, <Deviazione standard campione 2>, <Dimensione campione 2>, <Livello di confidenza>, <Booleano Combinata> ]
TMeanEstimate=StimaTMedia
TMeanEstimate.Syntax=[ <Lista dati campione>, <Livello di confidenza> ]\n[ <Media campione>, <Deviazione standard campione>, <Dimensione campione>, <Livello di confidenza> ]
TTest=TestT
TTest.Syntax=[ <Lista dati campione>, <Media ipotizzata>, <Coda> ]\n[ <Media campione>, <Deviazione standard campione>, <Dimensione campione>, <Media ipotizzata>, <Coda> ]
TTest2=TestT2
TTest2.Syntax=[ <Lista dati campione 1>, <Lista dati campione 2>, <Coda>, <Booleano Combinata> ]\n[ <Media campione 1>, <Deviazione standard campione 1>, <Dimensione campione 1>, <Media campione 2>, <Deviazione standard campione 2>, <Dimensione campione 2>, <Coda>, <Booleano Combinata> ]
TTestPaired=TestTAppaiate
TTestPaired.Syntax=[ <Lista dati campione 1>, <Lista dati campione 2>, <Coda> ]
TableText=TabellaTesto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Allineamento del testo> ]\n[ <Lista>, <Lista>, ..., <Allineamento del testo>, <Larghezza minima celle> ]\n[ <Lista>, <Lista>, ..., <Allineamento del testo>, <Larghezza minima celle>, <Altezza minima celle> ]
Take=Estrai
Take.Syntax=[ <Lista>, <Posizione iniziale>, <Posizione finale> ]\n[ <Lista>, <Posizione iniziale> ]\n[ <Testo>, <Posizione iniziale>, <Posizione finale> ]\n[ <Testo>, <Posizione iniziale> ]
Take.SyntaxCAS=[ <Lista>, <Posizione iniziale> ]\n[ <Lista>, <Posizione iniziale>, <Posizione finale> ]\n[ <Testo>, <Posizione iniziale>, <Posizione finale> ]\n[ <Testo>, <Posizione iniziale> ]
Tangent=Tangenti
Tangent.Syntax=[ <Punto>, <Conica> ]\n[ <Punto>, <Funzione> ]\n[ <Punto su una curva>, <Curva> ]\n[ <Valore x>, <Funzione> ]\n[ <Retta>, <Conica> ]\n[ <Conica>, <Conica> ]
Tangent.SyntaxCAS=[ <Numero>, <Funzione> ]\n[ <Punto>, <Oggetto> ]
TaylorSeries=PolinomioTaylor
TaylorSeries.Syntax=[ <Funzione>, <Valore x>, <Numero ordine> ]
TaylorSeries.SyntaxCAS=[ <Espressione>, <Valore x>, <Numero ordine> ]\n[ <Espressione>, <Variabile>, <Valore variabile>, <Numero ordine> ]
Tetrahedron=Tetraedro
Tetrahedron.Syntax=[ <Triangolo equilatero> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Punto>, <Direzione> ]
Text=Testo
Text.Syntax=[ <Oggetto> ]\n[ <Oggetto>, <Booleano per la sostituzione delle variabili> ]\n[ <Oggetto>, <Punto> ]\n[ <Oggetto>, <Punto>, <Booleano per la sostituzione delle variabili> ]\n[ <Oggetto>, <Punto>, <Booleano per la sostituzione delle variabili>, <Booleano per formula LaTeX> ]\n[ <Oggetto>, <Punto>, <Booleano per la sostituzione delle variabili>, <Booleano per formula LaTeX>, <Allineamento orizzontale -1|0|1> ]\n[ <Oggetto>, <Punto>, <Booleano per la sostituzione delle variabili>, <Booleano per formula LaTeX>, <Allineamento orizzontale -1|0|1>, <Allineamento verticale -1|0|1> ]
TextToUnicode=TestoInUnicode
TextToUnicode.Syntax=[ <Testo> ]
Textfield=CampoInserimento
Textfield.Syntax=[ <Oggetto collegato> ]
TiedRank=PosizioneMedia
TiedRank.Syntax=[ <Lista> ]
ToBase=InBase
ToBase.Syntax=[ <Numero>, <Base> ]
ToComplex=InComplesso
ToComplex.Syntax=[ <Vettore> ]
ToExponential=InEsponenziale
ToExponential.SyntaxCAS=[ <Numero complesso> ]
ToPoint=InPunto
ToPoint.Syntax=[ <Numero complesso> ]
ToPolar=InPolare
ToPolar.Syntax=[ <Numero complesso> ]\n[ <Vettore> ]
ToolImage=ImmagineStrumento
ToolImage.Syntax=[ <Numero> ]\n[ <Numero>, <Punto> ]\n[ <Numero>, <Punto>, <Punto> ]
Top=BaseSup
Top.Syntax=[ <Quadrica> ]
Translate=Trasla
Translate.Syntax=[ <Oggetto>, <Vettore> ]\n[ <Vettore>, <Punto iniziale> ]
Transpose=Trasposta
Transpose.Syntax=[ <Matrice> ]
TrapezoidalSum=SommaTrapezi
TrapezoidalSum.Syntax=[ <Funzione>, <x iniziale>, <x finale>, <Numero trapezoidi> ]
TravelingSalesman=CommessoViaggiatore
TravelingSalesman.Syntax=[ <Lista di punti> ]
TriangleCenter=CentroTriangolo
TriangleCenter.Syntax=[ <Punto>, <Punto>, <Punto>, <Numero> ]
TriangleCurve=CurvaTriangolo
TriangleCurve.Syntax=[ <Punto>, <Punto>, <Punto>, <Equazione> ]
Triangular=Triangolare
Triangular.Syntax=[ <Limite inferiore>, <Limite superiore>, <Moda>, <Valore variabile> ]\n[ <Limite inferiore>, <Limite superiore>, <Moda>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Limite inferiore>, <Limite superiore>, <Moda>, x, <Booleano Cumulata> ]
TrigCombine=TrigCombina
TrigCombine.Syntax=[ <Espressione> ]\n[ <Espressione>, <Funzione obiettivo> ]
TrigExpand=TrigSviluppa
TrigExpand.Syntax=[ <Espressione> ]\n[ <Espressione>, <Funzione obiettivo> ]
TrigExpand.SyntaxCAS=[ <Espressione> ]\n[ <Espressione>, <Funzione obiettivo> ]\n[ <Espressione>, <Funzione obiettivo>, <Variabile obiettivo> ]\n[ <Espressione>, <Funzione obiettivo>, <Variabile obiettivo>, <Variabile obiettivo> ]
TrigSimplify=TrigSemplifica
TrigSimplify.Syntax=[ <Espressione> ]
Trilinear=Trilineari
Trilinear.Syntax=[ <Punto>, <Punto>, <Punto>, <Numero>, <Numero>, <Numero> ]
TurningPoint=Flesso
TurningPoint.Syntax=[ <Polinomio> ]
TurningPoint.SyntaxCAS=[ <Funzione> ]
Turtle=Tartaruga
Turtle.Syntax=[]
TurtleBack=TartarugaIndietro
TurtleBack.Syntax=[ <Tartaruga>, <Distanza> ]
TurtleDown=TartarugaGiù
TurtleDown.Syntax=[ <Tartaruga> ]
TurtleForward=TartarugaAvanti
TurtleForward.Syntax=[ <Tartaruga>, <Distanza> ]
TurtleLeft=TartarugaSinistra
TurtleLeft.Syntax=[ <Tartaruga>, <Angolo> ]
TurtleRight=TartarugaDestra
TurtleRight.Syntax=[ <Tartaruga>, <Angolo> ]
TurtleUp=TartarugaSu
TurtleUp.Syntax=[ <Tartaruga> ]
Type=Tipo
Type.Syntax=[ <Oggetto> ]
UnicodeToLetter=UnicodeInLettera
UnicodeToLetter.Syntax=[ <Intero> ]
UnicodeToText=UnicodeInTesto
UnicodeToText.Syntax=[ <Lista di interi> ]
Uniform=Uniforme
Uniform.Syntax=[ <Limite inferiore>, <Limite superiore>, <Valore variabile> ]\n[ <Limite inferiore>, <Limite superiore>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Limite inferiore>, <Limite superiore>, x, <Booleano Cumulata> ]
Union=Unione
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Poligono>, <Poligono> ]
Unique=Unico
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VersorePerpendicolare
UnitOrthogonalVector.Syntax=[ <Retta> ]\n[ <Segmento> ]\n[ <Vettore> ]
UnitOrthogonalVector.Syntax3D=[ <Retta> ]\n[ <Segmento> ]\n[ <Vettore> ]\n[ <Piano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vettore> ]
UnitVector=Versore
UnitVector.Syntax=[ <Oggetto> ]
UnitVector.SyntaxCAS=[ <Vettore> ]
UpdateConstruction=AggiornaCostruzione
UpdateConstruction.Syntax=[ ]\n[ <Numero di volte> ]
UpperSum=SommaSuperiore
UpperSum.Syntax=[ <Funzione>, <x iniziale>, <x finale>, <Numero di rettangoli> ]
Variance=Varianza
Variance.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
Vector=Vettore
Vector.Syntax=[ <Punto> ]\n[ <Punto iniziale>, <Punto finale> ]
Vertex=Vertice
Vertex.Syntax=[ <Conica> ]\n[ <Disequazione> ]\n[ <Poligono> ]\n[ <Poligono>, <Indice> ]\n[ <Segmento>, <Indice> ]
VerticalText=TestoVerticale
VerticalText.Syntax=[ <Testo> ]\n[ <Testo>, <Punto> ]
Volume.Syntax=[ <Solido> ]
Voronoi.Syntax=[ <Lista di punti> ]
Weibull.Syntax=[ <Forma>, <Scala>, <Valore variabile> ]\n[ <Forma>, <Scala>, <Valore variabile>, <Booleano Cumulata> ]\n[ <Forma>, <Scala>, x, <Booleano Cumulata> ]
Weibull.SyntaxCAS=[ <Forma>, <Scala>, <Valore variabile> ]
ZMean2Estimate=StimaZMedia2
ZMean2Estimate.Syntax=[ <Lista dati campione 1>, <Lista dati campione 2>, <σ1>, <σ2>, <Livello di confidenza> ]\n[ <Media campione 1>, <σ1>, <Dimensione campione 1>, <Media campione 2>, <σ2>, <Dimensione campione 2>, <Livello di confidenza> ]
ZMean2Test=TestZMedia2
ZMean2Test.Syntax=[ <Lista dati campione 1>, <σ1>, <Lista dati campione 2>, <σ2>, <Coda> ]\n[ <Media campione 1>, <σ1>, <Dimensione campione 1>, <Media campione 2>, <σ2>, <Dimensione campione 2>, <Coda> ]
ZMeanEstimate=StimaZMedia
ZMeanEstimate.Syntax=[ <Lista dati campione>, <σ>, <Livello di confidenza> ]\n[ <Media campione>, <σ>, <Dimensione campione>, <Livello di confidenza> ]
ZMeanTest=TestZMedia
ZMeanTest.Syntax=[ <Lista dati campione>, <σ>, <Media ipotizzata>, <Coda> ]\n[ <Media campione>, <σ>, <Dimensione campione>, <Media ipotizzata>, <Coda> ]
ZProportion2Estimate=StimaZProporzione2
ZProportion2Estimate.Syntax=[ <Proporzione campione 1>, <Dimensione campione 1>, <Proporzione campione 2>, <Dimensione campione 2>, <Livello di confidenza> ]
ZProportion2Test=TestZProporzione2
ZProportion2Test.Syntax=[ <Proporzione campione 1>, <Dimensione campione 1>, <Proporzione campione 2>, <Dimensione campione 2>, <Coda> ]
ZProportionEstimate=StimaZProporzione
ZProportionEstimate.Syntax=[ <Proporzione campione>, <Dimensione campione>, <Livello di confidenza> ]
ZProportionTest=TestZProporzione
ZProportionTest.Syntax=[ <Proporzione campione>, <Dimensione campione>, <Proporzione ipotizzata>, <Coda> ]
Zip=Compatta
Zip.Syntax=[ <Espressione>, <Var1>, <Lista1>, <Var2>, <Lista2>, ... ]
Zipf.Syntax=[ <Numero di elementi>, <Esponente> ]\n[ <Numero di elementi>, <Esponente>, <Booleano Cumulata> ]\n[ <Numero di elementi>, <Esponente>, <Valore variabile>, <Booleano Cumulata> ]
Zipf.SyntaxCAS=[ <Numero di elementi>, <Esponente>, <Valore variabile>, <Booleano Cumulata> ]
ZoomIn=ZoomAvanti
ZoomIn.Syntax=[ ]\n[ <Fattore di scala> ]\n[ <Fattore di scala>, <Punto> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=ZoomIndietro
ZoomOut.Syntax=[ <Fattore di scala> ]\n[ <Fattore di scala>, <Punto> ]
mad=sma
mad.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
mean=media
mean.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
nCr.Syntax=[ <Numero n>, <Numero k> ]
stdev=devstc
stdev.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]
stdevp=devstp
stdevp.Syntax=[ <Lista dati grezzi> ]\n[ <Lista di numeri>, <Lista frequenze> ]