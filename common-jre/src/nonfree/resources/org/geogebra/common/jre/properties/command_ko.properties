# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=아노바
ANOVA.Syntax=[ <리스트>, <리스트>, ... ]
AffineRatio=아핀비
AffineRatio.Syntax=[ <점>, <점>, <점> ]
Angle=각
Angle.Syntax=[ <대상> ]\n[ <벡터>, <벡터> ]\n[ <직선>, <직선> ]\n[ <점>, <꼭짓점>, <점> ]\n[ <점>, <꼭짓점>, <각> ]
Angle.Syntax3D=[ <대상> ]\n[ <벡터>, <벡터> ]\n[ <직선>, <직선> ]\n[ <직선>, <평면> ]\n[ <평면>, <평면> ]\n[ <점>, <꼭짓점>, <점> ]\n[ <점>, <꼭짓점>, <각> ]\n[ <점>, <점>, <점>, <방향> ]
AngularBisector=각의이등분선
AngularBisector.Syntax=[ <직선>, <직선> ]\n[ <점>, <점>, <점> ]
Append=추가
Append.Syntax=[ <리스트>, <대상> ]\n[ <대상>, <리스트> ]
ApplyMatrix=행렬적용
ApplyMatrix.Syntax=[ <행렬>, <대상> ]
Arc=호
Arc.Syntax=[ <원>, <점>, <점> ]\n[ <원뿔곡선(이차곡선)>, <점>, <점> ]\n[ <원>, <변수 값>, <변수 값> ]\n[ <원뿔곡선(이차곡선)>, <변수 값>, <변수 값> ]
AreCollinear=공선여부
AreCollinear.Syntax=[ <점>, <점>, <점> ]
AreConcurrent=공점여부
AreConcurrent.Syntax=[ <직선>, <직선>, <직선> ]
AreConcyclic=동일원여부
AreConcyclic.Syntax=[ <점>, <점>, <점>, <점> ]
AreCongruent=합동여부
AreCongruent.Syntax=[ <대상>, <대상> ]
AreEqual=일치여부
AreEqual.Syntax=[ <대상>, <대상> ]
AreParallel=평행여부
AreParallel.Syntax=[ <직선>, <직선> ]
ArePerpendicular=수직여부
ArePerpendicular.Syntax=[ <직선>, <직선> ]
Area=넓이
Area.Syntax=[ <원뿔곡선(이차곡선)> ]\n[ <다각형> ]\n[ <점>, ..., <점> ]
Assume=가정
Assume.SyntaxCAS=[ <조건>, <표현식> ]
Asymptote=점근선
Asymptote.Syntax=[ <대상> ]
AttachCopyToView=복사
AttachCopyToView.Syntax=[ <대상>, <보이기 설정 0|1|2> ]\n[ <대상>, <보이기 설정 0|1|2>, <점 1>, <점 2>, <화면 좌표(픽셀) 1>, <화면 좌표(픽셀) 2> ]
Axes=축
Axes.Syntax=[ <원뿔곡선(이차곡선)> ]
Axes.Syntax3D=[ <원뿔곡선(이차곡선)> ]\n[ <2차식> ]
AxisStepX=x축단위
AxisStepX.Syntax=[ ]
AxisStepY=y축단위
AxisStepY.Syntax=[ ]
BarChart=막대그래프
BarChart.Syntax=[ <데이터의 리스트>, <빈도의 리스트> ]\n[ <원본 데이터의 리스트>, <막대의 폭>, <수직 계급폭(선택사항)> ]\n[ <데이터의 리스트>, <빈도의 리스트>, <막대의 폭> ]\n[ <시작값>, <끝값>, <높이의 리스트> ]\n[ <시작값>, <끝값>, <표현식>, <변량>, <높이의 시작값>, <높이의 끝값> ]\n[ <시작값>, <끝값>, <표현식>, <변량>, <높이의 시작값>, <높이의 끝값>, <폭> ]
Barycenter=가중치무게중심
Barycenter.Syntax=[ <점의 리스트>, <가중치의 리스트> ]
Bernoulli=베르누이분포
Bernoulli.Syntax=[ <확률>, <진릿값 누적> ]
BetaDist=Beta분포
BetaDist.Syntax=[ <알파>, <베타>, <변수 값> ]\n[ <알파>, <베타>, <변수 값>, <진릿값 누적>  ]\n[ <알파>, <베타>, x, <진릿값 누적> ]
Binomial=이항계수
Binomial.Syntax=[ <수 n>, <수 r> ]
BinomialDist=이항분포
BinomialDist.Syntax=[ <시행횟수>, <성공 확률> ]\n[ <시행횟수>, <성공 확률>, <진릿값 누적> ]\n[ <시행횟수>, <성공 확률>, <값의 리스트> ]\n[ <시행횟수>, <성공 확률>, <변수 값>, <진릿값 누적> ]
BinomialDist.SyntaxCAS=[ <시행횟수>, <성공 확률>, <변수 값>, <진릿값 누적> ]\n[ <시행횟수>, <성공 확률>, <값의 리스트> ]
Bottom=밑면
Bottom.Syntax=[ <2차식> ]
BoxPlot=상자그림
BoxPlot.Syntax=[ <y 옵셋>, <y 계급폭>, <원본 데이터의 리스트> ]\n[ <y 옵셋>, <y 계급폭>, <원본 데이터의 리스트>, <극단치 허용 true|false> ]\n[ <y 옵셋>, <y 계급폭>, <데이터의 리스트>, <빈도의 리스트>, <극단치 허용 true|false> ]\n[ <y 옵셋>, <y 계급폭>, <시작값>, <Q1>, <중앙값>, <Q3>, <끝값> ]
Button=버튼
Button.Syntax=[ ]\n[ <캡션> ]
CASLoaded.Syntax=[]
CFactor=복소인수분해
CFactor.SyntaxCAS=[ <표현식> ]\n[ <표현식>, <변량> ]
CIFactor=복소무리수인수분해
CIFactor.SyntaxCAS=[ <표현식> ]\n[ <표현식>, <변량> ]
CSolutions=복소해
CSolutions.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식의 리스트>, <변수의 리스트> ]
CSolve=복소풀기
CSolve.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식의 리스트>, <변수의 리스트> ]
Cauchy=코시분포
Cauchy.Syntax=[ <중앙값>, <계급폭>, <변수 값> ]\n[ <중앙값>, <계급폭>, <변수 값>, <진릿값 누적>  ]\n[ <중앙값>, <계급폭>, x, <진릿값 누적> ]
Cauchy.SyntaxCAS=[ <중앙값>, <계급폭>, <변수 값> ]
Cell=셀
Cell.Syntax=[ <열>, <행> ]
CellRange=셀범위
CellRange.Syntax=[ <처음셀>, <마지막셀> ]
Center=중심
Center.Syntax=[ <원뿔곡선(이차곡선)> ]
Center.Syntax3D=[ <원뿔곡선(이차곡선)> ]\n[ <2차식> ]
CenterView=중심보기
CenterView.Syntax=[ <중심점> ]
Centroid=무게중심
Centroid.Syntax=[ <다각형> ]
CharacteristicPolynomial=특성다항식
CharacteristicPolynomial.Syntax=[ <행렬> ]
Checkbox=체크상자
Checkbox.Syntax=[ ]\n[ <캡션> ]\n[ <리스트> ]\n[ <캡션>, <리스트> ]
ChiSquared=카이제곱분포
ChiSquared.Syntax=[ <자유도>, <변수 값> ]\n[ <자유도>, <변수 값>, <진릿값 누적> ]\n[ <자유도>, x, <진릿값 누적> ]
ChiSquared.SyntaxCAS=[ <자유도>, <변량> ]
ChiSquaredTest=카이제곱검정
ChiSquaredTest.Syntax=[ <행렬> ]\n[ <리스트>, <리스트> ]\n[ <행렬>, <행렬> ]\n[ <리스트>, <리스트>, <자유도> ]
Circle=원
Circle.Syntax=[ <점>, <반지름 길이> ]\n[ <점>, <선분> ]\n[ <점>, <점> ]\n[ <점>, <점>, <점> ]
Circle.Syntax3D=[ <점>, <반지름 길이> ]\n[ <점>, <선분> ]\n[ <점>, <점> ]\n[ <점>, <점>, <점> ]\n[ <직선>, <점> ]\n[ <점>, <반지름>, <방향> ]\n[ <점>, <점>, <방향> ]
CircleArc=원호
CircleArc.Syntax=[ <중점>, <점>, <점> ]
CircleSector=원형부채꼴
CircleSector.Syntax=[ <중점>, <점>, <점> ]
CircumcircleArc=외접호
CircumcircleArc.Syntax=[ <점>, <점>, <점> ]
CircumcircleSector=외접부채꼴
CircumcircleSector.Syntax=[ <점>, <점>, <점> ]
Circumference=곡선둘레
Circumference.Syntax=[ <원뿔곡선(이차곡선)> ]
Classes=계급
Classes.Syntax=[ <데이터의 리스트>, <계급의 수> ]\n[ <데이터의 리스트>, <시작>, <계급의 폭> ]
ClosestPoint=가장가까운점
ClosestPoint.Syntax=[ <경로>, <점> ]\n[ <직선>, <직선> ]
ClosestPointRegion=영역가장가까운점
ClosestPointRegion.Syntax=[ <영역>, <점> ]
Coefficients=계수
Coefficients.Syntax=[ <다항식> ]\n[ <원뿔곡선(이차곡선)> ]
Coefficients.SyntaxCAS=[ <다항식> ]\n[ <다항식>, <변량> ]
Column=열
Column.Syntax=[ <스프레드시트 셀> ]
ColumnName=열이름
ColumnName.Syntax=[ <스프레드시트 셀> ]
Command=명령
CommonDenominator=공통분모
CommonDenominator.Syntax=[ <표현식>, <표현식> ]
CompleteSquare=완전제곱
CompleteSquare.Syntax=[ <이차함수> ]
ComplexRoot=복소근
ComplexRoot.Syntax=[ <다항식> ]
Cone=원뿔
Cone.Syntax=[ <원>, <높이> ]\n[ <점>, <점>, <반지름> ]\n[ <점>, <벡터>, <각> ]
ConeInfinite=무한원뿔
ConeInfinite.Syntax=[ <점>, <벡터>, <각> ]\n[ <점>, <점>, <각> ]\n[ <점>, <직선>, <각> ]
Conic=원뿔곡선
Conic.Syntax=[ <리스트> ]\n[ <점>, <점>, <점>, <점>, <점> ]\n[ <수>, <수>, <수>, <수>, <수>, <수> ]
ConstructionStep=구성단계
ConstructionStep.Syntax=[ ]\n[ <대상> ]
ContingencyTable=분할표
ContingencyTable.Syntax=[ <텍스트의 리스트>, <텍스트의 리스트> ]\n[ <텍스트의 리스트>, <텍스트의 리스트>, <선택사항> ]\n[ <원자료값의 리스트>, <열의 값 리스트>, <도수분포표> ]\n[ <원자료값의 리스트>, <열의 값 리스트>, <도수분포표> , <선택사항> ]
ContinuedFraction=연분수
ContinuedFraction.Syntax=[ <수> ]\n[ <수>, <단계> ]\n[ <수>, <단계>, <진릿값 간단히쓰기> ]
ConvexHull=최소볼록집합
ConvexHull.Syntax=[ <점의 리스트> ]
CopyFreeObject=자유대상복사
CopyFreeObject.Syntax=[ <대상> ]
Corner=꼭짓점
Corner.Syntax=[ <꼭짓점의 번호> ]\n[ <그림>, <꼭짓점의 번호> ]\n[ <텍스트>, <꼭짓점의 번호> ]\n[ <기하창>, <꼭짓점의 번호> ]
CountIf=세기조건
CountIf.Syntax=[ <조건>, <리스트> ]\n[ <조건>, <변량>, <리스트> ]
Covariance=공분산
Covariance.Syntax=[ <점의 리스트> ]\n[ <수의 리스트>, <수의 리스트> ]
Cross=외적
Cross.Syntax=[ <벡터>, <벡터> ]
CrossRatio=교차비
CrossRatio.Syntax=[ <점>, <점>, <점>, <점> ]
Cube=정6면체
Cube.Syntax=[ <정육면체> ]\n[ <점>, <점>, <점> ]\n[ <점>, <점>, <방향> ]
Cubic=삼각삼차식
Cubic.Syntax=[ <점>, <점>, <점>, <수> ]
Curvature=곡률
Curvature.Syntax=[ <점>, <대상> ]
CurvatureVector=곡률벡터
CurvatureVector.Syntax=[ <점>, <대상> ]
CurveCartesian=곡선
CurveCartesian.Syntax=[ <표현식>, <표현식>, <변수>, <시작값>, <끝값> ]
CurveCartesian.Syntax3D=[ <표현식>, <표현식>, <변수>, <시작값>, <끝값> ]\n[ <표현식>, <표현식>, <표현식>, <변수>, <시작값>, <끝값> ]
Cylinder=원기둥
Cylinder.Syntax=[ <원>, <높이> ]\n[ <점>, <점>, <반지름> ]
CylinderInfinite=무한원기둥
CylinderInfinite.Syntax=[ <직선>, <반지름> ]\n[ <점>, <벡터>, <반지름> ]\n[ <점>, <점>, <반지름> ]
DataFunction=데이터함수
DataFunction.Syntax=[ <수의 리스트>, <수의 리스트> ]
Defined=정의여부
Defined.Syntax=[ <대상> ]
Degree=차수
Degree.Syntax=[ <다항식> ]
Degree.SyntaxCAS=[ <다항식> ]\n[ <다항식>, <변량> ]
DelauneyTriangulation=들로네삼각분할
DelauneyTriangulation.Syntax=[ <점의 리스트> ]
Delete=삭제
Delete.Syntax=[ <대상> ]
Denominator=분모
Denominator.Syntax=[ <수> ]\n[ <함수> ]
Denominator.SyntaxCAS=[ <표현식> ]
DensityPlot=밀도그리기
Derivative=미분
Derivative.Syntax=[ <함수> ]\n[ <곡선> ]\n[ <함수>, <수> ]\n[ <함수>, <변량> ]\n[ <곡선>, <수> ]\n[ <함수>, <변량>, <수> ]
Derivative.SyntaxCAS=[ <표현식> ]\n[ <표현식>, <변량> ]\n[ <표현식>, <변량>, <수> ]
Determinant=행렬식
Determinant.Syntax=[ <행렬> ]
Diameter=켤레지름
Diameter.Syntax=[ <벡터>, <원뿔곡선(이차곡선)> ]\n[ <직선>, <원뿔곡선(이차곡선)> ]
Difference=안겹치는부분
Difference.Syntax=[ <다각형>, <다각형> ]
Dilate=확대
Dilate.Syntax=[ <대상>, <확대 비율> ]\n[ <대상>, <확대 비율>, <확대 중심점> ]
Dimension=차원
Dimension.Syntax=[ <대상> ]
Direction=방향
Direction.Syntax=[ <직선> ]
Directrix=준선
Directrix.Syntax=[ <원뿔곡선(이차곡선)> ]
Distance=거리
Distance.Syntax=[ <점>, <대상> ]\n[ <직선>, <직선> ]\n[ <평면>, <평면> ]
Div=몫
Div.Syntax=[ <나누어지는 수>, <나누는 수> ]\n[ <나누어지는 다항식>, <나누는 다항식> ]
Division=나눗셈
Division.Syntax=[ <나누어지는 수>, <나누는 수> ]\n[ <나누어지는 다항식>, <나누는 다항식> ]
Divisors=약수개수
Divisors.Syntax=[ <수> ]
DivisorsList=약수리스트
DivisorsList.Syntax=[ <수> ]
DivisorsSum=약수합
DivisorsSum.Syntax=[ <수> ]
Dodecahedron=정12면체
Dodecahedron.Syntax=[ <정오각형> ]\n[ <점>, <점>, <점> ]\n[ <점>, <점>, <방향> ]
Dot=내적
Dot.Syntax=[ <벡터>, <벡터> ]
DotPlot=점그림
DotPlot.Syntax=[ <원본 데이터의 리스트>, <인접한 점 표시 true|false(선택사항)>, <계급폭(선택사항)>]
DynamicCoordinates=동적좌표
DynamicCoordinates.Syntax=[ <점>, <x-좌표>, <y-좌표> ]\n[ <점>, <x-좌표>, <y-좌표>, <z-좌표> ]
Eccentricity=이심률
Eccentricity.Syntax=[ <원뿔곡선(이차곡선)> ]
Eigenvalues=고윳값
Eigenvalues.SyntaxCAS=[ <행렬> ]
Eigenvectors=고유벡터
Eigenvectors.SyntaxCAS=[ <행렬> ]
Element=원소
Element.Syntax=[ <리스트>, <원소의 위치> ]\n[ <행렬>, <행>, <열> ]\n[ <리스트>, <인덱스1>, <인덱스2>, ... ]
Element.SyntaxCAS=[ <리스트>, <원소의 위치> ]\n[ <행렬>, <행>, <열> ]
Eliminate=소거
Eliminate.Syntax=[ <다항식의 리스트>, <변수의 리스트> ]
Ellipse=타원
Ellipse.Syntax=[ <초점>, <초점>, <주축의 반지름> ]\n[ <초점>, <초점>, <선분> ]\n[ <초점>, <초점>, <점> ]
Ends=양끝
Ends.Syntax=[ <2차식> ]
Envelope=포락선
Envelope.Syntax=[ <경로>, <점> ]
Erlang=어랑분포
Erlang.Syntax=[ <Shape>, <이율>, <변수 값> ]\n[ <Shape>, <이율>, <변수 값>, <진릿값 누적> ]\n[ <Shape>, <이율>, x, <진릿값 누적> ]
Evaluate=계산
Excentricity=선형이심률
Excentricity.Syntax=[ <원뿔곡선(이차곡선)> ]
Execute=실행
Execute.Syntax=[ <텍스트의 리스트> ]\n[ <텍스트의 리스트>, <변수>, <변수>, ... ]
Expand=전개
Expand.Syntax=[ <표현식> ]
Exponential=지수분포
Exponential.Syntax=[ <람다>, <변수 값> ]\n[ <람다>, <변수 값>, <진릿값 누적> ]\n[ <람다>, x, <진릿값 누적> ]
Exponential.SyntaxCAS=[ <람다>, <변수 값> ]
ExportImage=이미지내보내기
ExportImage.Syntax=[ <속성>, <값>, <속성>, <값>, ... ]
ExtendedGCD=확장된GCD
ExtendedGCD.Syntax=[ <정수>, <정수>]\n[ <다항식>, <다항식>]
Extremum=극값
Extremum.Syntax=[ <다항식> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]
Extremum.SyntaxCAS=[ <함수> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]
FDistribution=F분포
FDistribution.Syntax=[ <자유도 분자 차수>, <자유도 분모 차수>, <변수 값> ]\n[ <자유도 분자 차수>, <자유도 분모 차수>, <변수 값>, <진릿값 누적> ]\n[ <자유도 분자 차수>, <자유도 분모 차수>, x, <진릿값 누적> ]
FDistribution.SyntaxCAS=[ <자유도 분자 차수>, <자유도 분모 차수>, <변수 값> ]
Factor=인수분해
Factor.Syntax=[ <다항식> ]
Factor.SyntaxCAS=[ <수> ]\n[ <다항식> ]\n[ <표현식>, <변량> ]
Factors=인수리스트
Factors.Syntax=[ <다항식> ]\n[ <수> ]
FillCells=셀채우기
FillCells.Syntax=[ <셀범위>, <대상> ]\n[ <셀>, <리스트> ]\n[ <셀>, <행렬> ]
FillColumn=열채우기
FillColumn.Syntax=[ <열>, <리스트> ]
FillRow=행채우기
FillRow.Syntax=[ <행>, <리스트> ]
First=첫항
First.Syntax=[ <리스트> ]\n[ <텍스트> ]\n[ <리스트>, <원소의 수> ]\n[ <텍스트>, <원소의 수> ]\n[ <자취>, <원소의 수> ]
First.SyntaxCAS=[ <리스트> ]\n[ <리스트>, <원소의 수> ]
FirstAxis=첫째축
FirstAxis.Syntax=[ <원뿔곡선(이차곡선)> ]
FirstAxisLength=첫째축길이
FirstAxisLength.Syntax=[ <원뿔곡선(이차곡선)> ]
Fit=적합선
Fit.Syntax=[ <점의 리스트>, <함수의 리스트> ]\n[ <점의 리스트>, <함수> ]
FitExp=지수적합선
FitExp.Syntax=[ <점의 리스트> ]
FitGrowth=성장적합선
FitGrowth.Syntax=[ <점의 리스트> ]
FitImplicit=음함수적합선
FitImplicit.Syntax=[ <점의 리스트>, <차수> ]
FitLineX=적합직선X
FitLineX.Syntax=[ <점의 리스트> ]
FitLineY=적합직선
FitLineY.Syntax=[ <점의 리스트> ]
FitLog=로그적합선
FitLog.Syntax=[ <점의 리스트> ]
FitLogistic=로지스틱적합선
FitLogistic.Syntax=[ <점의 리스트> ]
FitPoly=다항적합선
FitPoly.Syntax=[ <점의 리스트>, <다항식의 차수> ]\n[ <프리핸드 함수>, <다항식의 차수> ]
FitPow=거듭제곱적합선
FitPow.Syntax=[ <점의 리스트> ]
FitSin=사인적합선
FitSin.Syntax=[ <점의 리스트> ]
Flatten=리스트단일화
Flatten.Syntax=[ <리스트> ]
Focus=초점
Focus.Syntax=[ <원뿔곡선(이차곡선)> ]
FractionText=분수화
FractionText.Syntax=[ <수> ]\n[ <점> ]\n[ <수>, <진릿값인 단일 분수> ]
Frequency=도수
Frequency.Syntax=[ <원본 데이터의 리스트> ]\n[ <진릿값 누적>, <원본 데이터의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트> ]\n[ <텍스트의 리스트>, <텍스트의 리스트> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]
FrequencyPolygon=도수분포다각형
FrequencyPolygon.Syntax=[ <계급 경계의 리스트>, <높이의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 ture|false>, <밀도 계급폭 (선택사항)> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 ture|false>, <밀도 계급폭 (선택사항)> ]
FrequencyTable=도수분포표
FrequencyTable.Syntax=[ <원본 데이터의 리스트>, <계급폭(선택사항)> ]\n[ <진릿값 누적>, <원본 데이터의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]
FromBase=십진법화
FromBase.Syntax=[ <기존 진법에서의 수>, <기존 진법(수)> ]
Function=함수
Function.Syntax=[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <수의 리스트> ]
Function.Syntax3D=[ <수의 리스트> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <표현식>, <매개변수 1>, <시작값>, <끝값>, <매개변수 2>, <시작값>, <끝값> ]
Function.SyntaxCAS=[ <함수>, <시작 x값>, <마지막 x값> ]
FutureValue=미래가치
FutureValue.Syntax=[ <이율>, <총 납입 기간>, <정기적으로 적립하는 금액>, <현재 가치(선택사항)>, <납입 시점 유형 0|1 (선택사항)> ]
GCD=최대공약수
GCD.Syntax=[ <수의 리스트> ]\n[ <수>, <수> ]
GCD.SyntaxCAS=[ <수의 리스트> ]\n[ <다항식의 리스트> ]\n[ <수>, <수> ]\n[ <다항식>, <다항식> ]
Gamma=감마분포
Gamma.Syntax=[ <알파>, <베타>, <변수 값> ]\n[ <알파>, <베타>, <변수 값>, <진릿값 누적>  ]\n[ <알파>, <베타>, x, <진릿값 누적> ]
Gamma.SyntaxCAS=[ <알파>, <베타>, <변수 값> ]
GeometricMean=기하평균
GeometricMean.Syntax=[ <수의 리스트> ]
GetTime=시간
GetTime.Syntax=[]\n[ <형식> ]
GroebnerDegRevLex=차수사전역순정렬그뢰브너기저
GroebnerDegRevLex.Syntax=[ <다항식의 리스트> ]\n[ <다항식의 리스트>, <변수의 리스트> ]
GroebnerLex=사전정렬그뢰브너기저
GroebnerLex.Syntax=[ <다항식의 리스트> ]\n[ <다항식의 리스트>, <변수의 리스트> ]
GroebnerLexDeg=사전차수정렬그뢰브너기저
GroebnerLexDeg.Syntax=[ <다항식의 리스트> ]\n[ <다항식의 리스트>, <변수의 리스트> ]
HarmonicMean=조화평균
HarmonicMean.Syntax=[ <수의 리스트> ]
Height=높이
Height.Syntax=[ <입체> ]
HideLayer=레이어숨기기
HideLayer.Syntax=[ <수> ]
Histogram=히스토그램
Histogram.Syntax=[ <계급 경계의 리스트>, <높이의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]
HistogramRight=오른쪽히스토그램
HistogramRight.Syntax=[ <계급 경계의 리스트>, <높이의 리스트> ]\n[ <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)>  ]\n[ <진릿값 누적>, <계급 경계의 리스트>, <원본 데이터의 리스트>, <밀도 true|false>, <밀도 계급폭 (선택사항)> ]
HyperGeometric=초기하분포
HyperGeometric.Syntax=[ <모집단 크기>, <성공횟수>, <표본 크기> ]\n[ <모집단 크기>, <성공횟수>, <표본 크기>, <진릿값 누적> ]\n[ <모집단 크기>, <성공횟수>, <표본 크기>, <변수 값>, <진릿값 누적> ]
HyperGeometric.SyntaxCAS=[ <모집단 크기>, <성공횟수>, <표본 크기>, <변수 값>, <진릿값 누적> ]
Hyperbola=쌍곡선
Hyperbola.Syntax=[ <초점>, <초점>, <주축의 반지름> ]\n[ <초점>, <초점>, <선분> ]\n[ <초점>, <초점>, <점> ]
IFactor=무리수인수분해
IFactor.Syntax=[ <다항식> ]
IFactor.SyntaxCAS=[ <표현식> ]
Icosahedron=정20면체
Icosahedron.Syntax=[ <정삼각형> ]\n[ <점>, <점>, <점> ]\n[ <점>, <점>, <방향> ]
Identity=항등행렬
Identity.Syntax=[ <수> ]
If=조건
If.Syntax=[ <조건>, <조건이 성립될 때 만들 대상> ]\n[ <조건>, <조건이 성립될 때 만들 대상>, <성립되지 않을 때 만들 대상> ]
ImplicitCurve=음함수곡선
ImplicitCurve.Syntax=[ <점의 리스트> ]\n[ <f(x, y)> ]
ImplicitDerivative=음함수미분
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <표현식>, <종속적인 변수>, <독립적인 변수> ]
Incircle=내접원
Incircle.Syntax=[ <점>, <점>, <점> ]
IndexOf=인덱스
IndexOf.Syntax=[ <대상>, <리스트> ]\n[ <텍스트>, <텍스트> ]\n[ <대상>, <리스트>, <시작 인덱스> ]\n[ <텍스트>, <텍스트>, <시작 인덱스> ]
Insert=삽입
Insert.Syntax=[ <리스트>, <리스트>, <위치> ]\n[ <대상>, <리스트>, <위치> ]
Integral=적분
Integral.Syntax=[ <함수> ]\n[ <함수>, <변량> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <시작 x값>, <마지막 x값>, <계산실행 true|false> ]
Integral.SyntaxCAS=[ <함수> ]\n[ <함수>, <변량> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <변량>, <시작값>, <끝값> ]
IntegralBetween=적분차
IntegralBetween.Syntax=[ <함수>, <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <함수>, <시작 x값>, <마지막 x값>, <계산실행 true|false> ]
IntegralBetween.SyntaxCAS=[ <함수>, <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <함수>, <변량>, <시작값>, <끝값> ]
IntegralSymbolic=부정적분
IntegralSymbolic.Syntax=[ <함수> ]\n[ <함수>, <변량> ]
InteriorAngles=내각
InteriorAngles.Syntax=[ <다각형> ]
Intersect=교점
Intersect.Syntax=[ <대상>, <대상> ]\n[ <대상>, <대상>, <교점의 인덱스> ]\n[ <대상>, <대상>, <시작점> ]\n[ <함수>, <함수>, <시작 x값>, <마지막 x값> ]\n[ <곡선>, <곡선>, <변수 1>, <변수 2> ]
Intersect.SyntaxCAS=[ <함수>, <함수> ]
IntersectConic=교차이차곡선
IntersectConic.Syntax=[ <평면>, <2차식> ]\n[ <2차식>, <2차식> ]
IntersectPath=교선
IntersectPath.Syntax=[ <직선>, <다각형> ]\n[ <다각형>, <다각형> ]
IntersectPath.Syntax3D=[ <직선>, <다각형> ]\n[ <다각형>, <다각형> ]\n[ <평면>, <다각형> ]\n[ <평면>, <2차식> ]
Intersection=교집합
Intersection.Syntax=[ <리스트>, <리스트> ]
InverseBeta=역Beta
InverseBeta.Syntax=[ <알파>, <베타>, <확률> ]
InverseBinomial=역베르누이분포
InverseBinomial.Syntax=[ <시행횟수>, <성공 확률>, <누적 확률> ]
InverseBinomialMinimumTrials=역이항최소시행
InverseBinomialMinimumTrials.Syntax=[ <누적 확률>, <성공 확률>, <성공횟수> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <누적 확률>, <성공 확률>, <성공횟수> ]
InverseCauchy=역코시분포
InverseCauchy.Syntax=[ <중앙값>, <계급폭>, <확률> ]
InverseChiSquared=역카이제곱분포
InverseChiSquared.Syntax=[ <자유도>, <확률> ]
InverseExponential=역지수분포
InverseExponential.Syntax=[ <람다>, <확률> ]
InverseFDistribution=역F분포
InverseFDistribution.Syntax=[ <자유도 분자 차수>, <자유도 분모 차수>, <확률> ]
InverseGamma=역감마분포
InverseGamma.Syntax=[ <알파>, <베타>, <확률> ]
InverseHyperGeometric=역초기하분포
InverseHyperGeometric.Syntax=[ <모집단 크기>, <성공횟수>, <표본 크기>, <확률> ]
InverseLaplace=역라플라스
InverseLaplace.Syntax=[ <함수> ]\n[ <함수>, <변량> ]\n[ <함수>, <변량>, <변량> ]
InverseLogNormal=역로그정규분포
InverseLogNormal.Syntax=[ <평균>, <표준편차>, <확률> ]
InverseLogistic=역로지스틱분포
InverseLogistic.Syntax=[ <평균>, <계급폭>, <확률> ]
InverseNormal=역정규분포
InverseNormal.Syntax=[ <평균>, <표준편차>, <누적 확률> ]
InversePascal=역파스칼분포
InversePascal.Syntax=[ <n>, <p>, <확률> ]
InversePoisson=역푸아송분포
InversePoisson.Syntax=[ <평균>, <확률> ]
InverseTDistribution=역T분포
InverseTDistribution.Syntax=[ <자유도>, <확률> ]
InverseWeibull=역와이블분포
InverseWeibull.Syntax=[ <Shape>, <계급폭>, <확률> ]
InverseZipf=역Zipf분포
InverseZipf.Syntax=[ <원소의 수>, <지수>, <확률> ]
Invert=역연산
Invert.Syntax=[ <행렬> ]\n[ <함수> ]
IsFactored=인수분해완료여부
IsFactored.Syntax=[ <다항식> ]
IsInRegion=영역포함여부
IsInRegion.Syntax=[ <점>, <영역> ]
IsInteger=정수여부
IsInteger.Syntax=[ <수> ]
IsPrime=소수여부
IsPrime.Syntax=[ <수> ]
IsTangent=접선수직여부
IsTangent.Syntax=[ <직선>, <원뿔곡선(이차곡선)> ]
IsVertexForm=표준형여부
IsVertexForm.Syntax=[ <함수> ]
Iteration=반복법
Iteration.Syntax=[ <함수>, <시작값>, <반복 횟수> ]\n[ <표현식>, <변수>, <시작값>, <세기> ]
IterationList=반복리스트
IterationList.Syntax=[ <함수>, <시작값>, <반복 횟수> ]\n[ <표현식>, <변수>, <시작값>, <세기> ]
IterationList.SyntaxCAS=[ <함수>, <시작값>, <반복 횟수> ]
Join=연결
Join.Syntax=[ <리스트들의 리스트> ]\n[ <리스트>, <리스트>, ... ]
JordanDiagonalization=조르단대각화
JordanDiagonalization.SyntaxCAS=[ <행렬> ]
KeepIf=유지조건
KeepIf.Syntax=[ <조건>, <리스트> ]\n[ <조건>, <변량>, <리스트> ]
LCM=최소공배수
LCM.Syntax=[ <수의 리스트> ]\n[ <수>, <수> ]
LCM.SyntaxCAS=[ <수의 리스트> ]\n[ <다항식의 리스트> ]\n[ <수>, <수> ]\n[ <다항식>, <다항식> ]
LUDecomposition=LU분해
LUDecomposition.Syntax=[ <행렬> ]
LaTeX=수식
LaTeX.Syntax=[ <대상> ]\n[ <대상>, <변수 대치 true|false> ]\n[ <대상>, <변수 대치 true|false>, <이름 보이기 true|false> ]
Laplace=라플라스
Laplace.Syntax=[ <함수> ]\n[ <함수>, <변량> ]\n[ <함수>, <변량>, <변량> ]
Last=마지막항
Last.Syntax=[ <리스트> ]\n[ <텍스트> ]\n[ <리스트>, <원소의 수> ]\n[ <텍스트>, <원소의 수> ]
Last.SyntaxCAS=[ <리스트> ]\n[ <리스트>, <원소의 수> ]
LeftSide=좌변
LeftSide.Syntax=[ <방정식> ]
LeftSide.SyntaxCAS=[ <방정식> ]\n[ <방정식의 리스트> ]\n[ <방정식의 리스트>, <인덱스> ]
LeftSum=왼쪽합
LeftSum.Syntax=[ <함수>, <시작 x값>, <마지막 x값>, <사각형의 수> ]
Length=길이
Length.Syntax=[ <대상> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <시작점>, <끝점> ]\n[ <곡선>, <처음 t-값>, <마지막 t-값> ]\n[ <곡선>, <시작점>, <끝점> ]
Length.SyntaxCAS=[ <리스트> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <변량>, <시작 x값>, <마지막 x값> ]
LetterToUnicode=글자유니코드화
LetterToUnicode.Syntax=[ <글자> ]
Limit=극한
Limit.Syntax=[ <함수>, <값> ]
Limit.SyntaxCAS=[ <표현식>, <값> ]\n[ <표현식>, <변량>, <값> ]
LimitAbove=우극한
LimitAbove.Syntax=[ <함수>, <값> ]
LimitAbove.SyntaxCAS=[ <표현식>, <값> ]\n[ <표현식>, <변량>, <값> ]
LimitBelow=좌극한
LimitBelow.Syntax=[ <함수>, <값> ]
LimitBelow.SyntaxCAS=[ <표현식>, <값> ]\n[ <표현식>, <변량>, <값> ]
Line=직선
Line.Syntax=[ <점>, <점> ]\n[ <점>, <평행한 직선> ]\n[ <점>, <방향 벡터> ]
LineBisector=수직이등분선
LineBisector.Syntax=[ <선분> ]\n[ <점>, <점> ]
LineBisector.Syntax3D=[ <선분> ]\n[ <점>, <점> ]\n[ <점>, <점>, <방향> ]
LineGraph=선그래프
LineGraph.Syntax=[ <x좌표의 리스트>, <y좌표의 리스트> ]
Locus=자취그리기
Locus.Syntax=[ <자취선을 만드는 점>, <점> ]\n[ <자취선을 만드는 점>, <슬라이더> ]\n[ <벡터장(2변수함수)>, <점> ]\n[ <f(x, y)>, <점> ]
LocusEquation=자취방정식
LocusEquation.Syntax=[ <자취> ]\n[ <자취를 그릴 점>, <대상 위의 점> ]\n[ <논리식>, <대상 위의 점> ]
LogNormal=로그정규분포
LogNormal.Syntax=[ <평균>, <표준편차>, <변수 값> ]\n[ <평균>, <표준편차>, <변수 값>, <진릿값 누적>  ]\n[ <평균>, <표준편차>, x, <진릿값 누적> ]
Logistic=로지스틱분포
Logistic.Syntax=[ <평균>, <계급폭>, <변수 값> ]\n[ <평균>, <계급폭>, <변수 값>, <진릿값 누적>  ]\n[ <평균>, <계급폭>, x, <진릿값 누적> ]
LowerSum=하합
LowerSum.Syntax=[ <함수>, <시작 x값>, <마지막 x값>, <사각형의 수> ]
MAD=절대평균편차
MatrixPlot=행렬그리기
MatrixRank=행렬계수
MatrixRank.Syntax=[ <행렬> ]
Max=최댓값
Max.Syntax=[ <구간> ]\n[ <수>, <수> ]\n[ <리스트> ]\n[ <데이터의 리스트>, <빈도의 리스트> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]
Max.SyntaxCAS=[ <리스트> ]\n[ <구간> ]\n[ <수>, <수> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <데이터의 리스트>, <빈도의 리스트> ]
Maximize=최대화
Maximize.Syntax=[ <종속 변수>, <독립 변수> ]\n[ <종속 변수>, <경로 위의 점> ]
Mean=평균
Mean.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
MeanX=X평균
MeanX.Syntax=[ <점의 리스트> ]
MeanY=Y평균
MeanY.Syntax=[ <점의 리스트> ]
Median=중앙값
Median.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
Median.SyntaxCAS=[ <수의 리스트> ]
Midpoint=중점
Midpoint.Syntax=[ <선분> ]\n[ <원뿔곡선(이차곡선)> ]\n[ <구간> ]\n[ <점>, <점> ]
Min=최솟값
Min.Syntax=[ <구간> ]\n[ <수>, <수> ]\n[ <리스트> ]\n[ <데이터의 리스트>, <빈도의 리스트> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]
Min.SyntaxCAS=[ <리스트> ]\n[ <구간> ]\n[ <수>, <수> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <데이터의 리스트>, <빈도의 리스트> ]
MinimalPolynomial=최소다항식
MinimalPolynomial.Syntax=[ <행렬> ]
Minimize=최소화
Minimize.Syntax=[ <종속 변수>, <독립 변수> ]\n[ <종속 변수>, <경로 위의 점> ]
MinimumSpanningTree=최소스패닝트리
MinimumSpanningTree.Syntax=[ <점의 리스트> ]
Mirror=대칭
Mirror.Syntax=[ <대상>, <점> ]\n[ <대상>, <직선> ]\n[ <대상>, <원> ]
Mirror.Syntax3D=[ <대상>, <점> ]\n[ <대상>, <직선> ]\n[ <대상>, <평면> ]\n[ <대상>, <원> ]
MixedNumber=대분수화
MixedNumber.SyntaxCAS=[ <수> ]
Mod=나머지
Mod.Syntax=[ <나누어지는 수>, <나누는 수> ]\n[ <나누어지는 다항식>, <나누는 다항식> ]
Mode=최빈값
Mode.Syntax=[ <수의 리스트> ]
ModularExponent=모듈지수
ModularExponent.Syntax=[ <수>, <수>, <수> ]
NDerivative=수치미분
NDerivative.Syntax=[ <함수> ]\n[ <함수>, <차수> ]
NIntegral=수치적분
NIntegral.Syntax=[ <함수> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <시작 x값>, <시작 y값>, <마지막 x값> ]
NIntegral.SyntaxCAS=[ <함수>, <시작 x값>, <마지막 x값> ]\n[ <함수>, <변량>, <시작값>, <끝값> ]
NInvert=수치역연산
NInvert.Syntax=[ <함수> ]
NSolutions=수치해석해
NSolutions.Syntax=[ <방정식> ]
NSolutions.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식>, <변수 = 시작값> ]\n[ <방정식의 리스트>, <변수의 리스트> ]
NSolve=수치해석풀기
NSolve.Syntax=[ <방정식> ]
NSolve.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식>, <변수 = 시작값> ]\n[ <방정식의 리스트>, <변수의 리스트> ]
NSolveODE=미분방정식수치풀기
NSolveODE.Syntax=[ <도함수의 리스트>, <초기 x좌표>, <초기 y좌표의 리스트>, <끝 x좌표> ]
Name=이름
Name.Syntax=[ <대상> ]
Net=전개도
Net.Syntax=[ <다면체>, <수> ]\n[ <다면체>, <수>, <면>, <변>, <변>, ... ]
NextPrime=다음번소수
NextPrime.Syntax=[ <수> ]
Normal=정규분포
Normal.Syntax=[ <평균>, <표준편차>, <변수 값> ]\n[ <평균>, <표준편차>, <변수 값>, <진릿값 누적> ]\n[ <평균>, <표준편차>, x, <진릿값 누적> ]\n[ <평균>, <표준편차>, <변숫값 u> , <변숫값 v> ]
NormalQuantilePlot=정규4분위수그림
NormalQuantilePlot.Syntax=[ <원본 데이터의 리스트> ]
Normalize=정규화
Normalize.Syntax=[ <수의 리스트> ]\n[ <점의 리스트> ]
Numerator=분자
Numerator.Syntax=[ <수> ]\n[ <함수> ]
Numerator.SyntaxCAS=[ <표현식> ]
Numeric=수치해석
Numeric.SyntaxCAS=[ <표현식> ]\n[ <표현식>, <초깃값> ]
Object=대상
Object.Syntax=[ <대상 이름> ]
Octahedron=정8면체
Octahedron.Syntax=[ <정삼각형> ]\n[ <점>, <점>, <점> ]\n[ <점>, <점>, <방향> ]
Ordinal=서수
Ordinal.Syntax=[ <정수> ]
OrdinalRank=서수순서
OrdinalRank.Syntax=[ <리스트> ]
OrthogonalLine=수직선
OrthogonalLine.Syntax=[ <점>, <직선> ]\n[ <점>, <선분> ]\n[ <점>, <벡터> ]
OrthogonalLine.Syntax3D=[ <점>, <직선> ]\n[ <점>, <선분> ]\n[ <점>, <벡터> ]\n[ <점>, <평면> ]\n[ <직선>, <직선> ]\n[ <점>, <방향>, <방향> ]\n[ <점>, <직선>, <맥락> ]
OrthogonalPlane=수직평면
OrthogonalPlane.Syntax=[ <점>, <직선> ]\n[ <점>, <벡터> ]
OrthogonalVector=수직벡터
OrthogonalVector.Syntax=[ <직선> ]\n[ <선분> ]\n[ <벡터> ]
OrthogonalVector.Syntax3D=[ <직선> ]\n[ <선분> ]\n[ <벡터> ]\n[ <평면> ]
OrthogonalVector.SyntaxCAS=[ <벡터> ]
OsculatingCircle=접촉원
OsculatingCircle.Syntax=[ <점>, <대상> ]
PMCC=상관계수
PMCC.Syntax=[ <점의 리스트> ]\n[ <x좌표의 리스트>, <y좌표의 리스트> ]
Pan=화면이동
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=포물선
Parabola.Syntax=[ <점>, <직선> ]
Parameter=초점준선거리
Parameter.Syntax=[ <원뿔곡선(이차곡선)> ]
ParametricDerivative=매개변수미분
ParametricDerivative.Syntax=[ <곡선> ]
ParseToFunction=함수화
ParseToFunction.Syntax=[ <텍스트> ]\n[ <함수>, <텍스트> ]
ParseToNumber=숫자화
ParseToNumber.Syntax=[ <텍스트> ]\n[ <수>, <텍스트> ]
PartialFractions=부분분수
PartialFractions.Syntax=[ <함수> ]
PartialFractions.SyntaxCAS=[ <함수> ]\n[ <함수>, <변량> ]
Pascal=파스칼분포
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <진릿값 누적> ]\n[ <n>, <p>, <변수 값>, <진릿값 누적> ]
Pascal.SyntaxCAS=[ <n>, <p>, <변수 값>, <진릿값 누적> ]
PathParameter=경로매개변수
PathParameter.Syntax=[ <경로위의 점> ]
Payment=납입금
Payment.Syntax=[ <이율>, <총 납입 기간>, <현재 가치>, <미래 가치(선택사항)>, <납입 시점 유형 0|1 (선택사항)> ]
PenStroke.Syntax=[ <점>, ..., <점> ]
Percentile=백분위수
Percentile.Syntax=[ <수의 리스트>, <퍼센트> ]
Perimeter=둘레
Perimeter.Syntax=[ <다각형> ]\n[ <원뿔곡선(이차곡선)> ]\n[ <자취> ]
Periods=기간
Periods.Syntax=[ <이율>, <정기적으로 적립하는 금액>, <현재 가치>, <미래 가치(선택사항)>, <납입 시점 유형 0|1 (선택사항)> ]
PieChart=원그래프
PieChart.Syntax=[ <빈도의 리스트> ]\n[ <빈도의 리스트>, <중심>, <반지름> ]
Plane=평면
Plane.Syntax=[ <다각형> ]\n[ <원뿔곡선(이차곡선)> ]\n[ <점>, <평면> ]\n[ <점>, <직선> ]\n[ <직선>, <직선> ]\n[ <점>, <점>, <점> ]\n[ <점>, <벡터>, <벡터> ]
Plane.SyntaxCAS=[ <점>, <점>, <점> ]
PlaneBisector=이등분평면
PlaneBisector.Syntax=[ <선분> ]\n[ <점>, <점> ]
PlaySound=음악연주
PlaySound.Syntax=[ <URL> ]\n[ <연주 여부 true|false> ]\n[ <함수>, <최솟값>, <최댓값> ]\n[ <함수>, <최솟값>, <최댓값>, <표본 비율>, <표본 깊이> ]
PlotSolve=풀고표시하기
PlotSolve.Syntax=[ <x로 이루어진 방정식> ]
Point=점
Point.Syntax=[ <대상> ]\n[ <대상>, <변수> ]\n[ <점>, <벡터> ]\n[ <리스트> ]
PointIn=영역안의점
PointIn.Syntax=[ <영역> ]
PointList=점리스트
PointList.Syntax=[ <리스트> ]
Poisson=푸아송분포
Poisson.Syntax=[ <평균> ]\n[ <평균>, <진릿값 누적> ]\n[ <평균>, <변수 값>, <진릿값 누적> ]
Poisson.SyntaxCAS=[ <평균>, <변수 값>, <진릿값 누적> ]
Polar=극선
Polar.Syntax=[ <점>, <원뿔곡선(이차곡선)> ]\n[ <직선>, <원뿔곡선(이차곡선)> ]
PolyLine=다각선
PolyLine.Syntax=[ <점의 리스트> ]\n[ <점>, ..., <점> ]
Polygon=다각형
Polygon.Syntax=[ <점의 리스트> ]\n[ <점>, ..., <점> ]\n[ <점>, <점>, <꼭짓점의 개수> ]
Polygon.Syntax3D=[ <점의 리스트> ]\n[ <점>, ..., <점> ]\n[ <점>, <점>, <꼭짓점의 개수> ]\n[ <점>, <점>, <꼭짓점의 개수>, <방향> ]
Polynomial=다항식
Polynomial.Syntax=[ <함수> ]\n[ <점의 리스트> ]
Polynomial.SyntaxCAS=[ <함수> ]\n[ <함수>, <변량> ]
PresentValue=현재가치
PresentValue.Syntax=[ <이율>, <총 납입 기간>, <정기적으로 적립하는 금액>, <미래 가치(선택사항)>, <납입 시점 유형 0|1 (선택사항)> ]
PreviousPrime=이전소수
PreviousPrime.Syntax=[ <수> ]
PrimeFactors=소인수분해
PrimeFactors.Syntax=[ <수> ]
Prism=각기둥
Prism.Syntax=[ <다각형>, <점> ]\n[ <다각형>, <높이> ]\n[ <점>, <점>, ... ]
Product=곱
Product.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <원소의 수> ]\n[ <수의 리스트>, <빈도의 리스트> ]\n[ <표현식>, <변량>, <시작값>, <끝값> ]
Product.SyntaxCAS=[ <식의 리스트> ]\n[ <표현식>, <변량>, <시작 인덱스>, <마지막 인덱스> ]
Prove=증명
Prove.Syntax=[ <논리식> ]
ProveDetails=증명세부사항
ProveDetails.Syntax=[ <논리식> ]
Pyramid=다각뿔
Pyramid.Syntax=[ <다각형>, <점> ]\n[ <다각형>, <높이> ]\n[ <점>, <점>, <점>, <점>, ... ]
Q1=제1사분위수
Q1.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
Q3=제3사분위수
Q3.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
QRDecomposition=QR분해
QRDecomposition.Syntax=[ <행렬> ]
QuadricSide=옆면
QuadricSide.Syntax=[ <2차식> ]
RSquare=결정계수
RSquare.Syntax=[ <점의 리스트>, <함수> ]
Radius=반지름
Radius.Syntax=[ <원뿔곡선(이차곡선)> ]
Random=랜덤
Random.Syntax=[ <최소 정수>, <최대 정수> ]\n[ <최소 정수>, <최대 정수>, <표본의 수> ]\n[ <최소 정수>, <최대 정수>, <값 고정 true|false> ]
Random.SyntaxCAS=[ <최소 정수>, <최대 정수> ]\n[ <최소 정수>, <최대 정수>, <표본의 수> ]
RandomBinomial=랜덤이항분포
RandomBinomial.Syntax=[ <시행횟수>, <확률> ]
RandomDiscrete=랜덤이산분포
RandomDiscrete.Syntax=[ <리스트>, <리스트> ]
RandomElement=랜덤원소
RandomElement.Syntax=[ <리스트> ]
RandomNormal=랜덤정규분포
RandomNormal.Syntax=[ <평균>, <표준편차> ]
RandomPointIn=영역내임의점
RandomPointIn.Syntax=[ <영역> ]\n[ <점의 리스트> ]\n[ <x 최솟값>, <x 최댓값>, <y 최솟값>, <y 최댓값> ]
RandomPoisson=랜덤푸아송분포
RandomPoisson.Syntax=[ <평균> ]
RandomPolynomial=랜덤다항식
RandomPolynomial.Syntax=[ <차수>, <계수의 최솟값>, <계수의 최댓값> ]
RandomPolynomial.SyntaxCAS=[ <차수>, <계수의 최솟값>, <계수의 최댓값> ]\n[ <변량>, <차수>, <계수의 최솟값>, <계수의 최댓값> ]
RandomUniform=랜덤균등분포
RandomUniform.Syntax=[ <최솟값>, <최댓값> ]\n[ <최솟값>, <최댓값>, <표본의 수> ]
Rate=이율
Rate.Syntax=[ <총 납입 기간>, <정기적으로 적립하는 금액>, <현재 가치>, <미래 가치(선택사항)>, <납입 시점 유형 0|1 (선택사항)>, <이자율의 추정값(선택사항)> ]
Rationalize=유리수화
Rationalize.SyntaxCAS=[ <수> ]
Ray=반직선
Ray.Syntax=[ <시작점>, <점> ]\n[ <시작점>, <방향 벡터> ]
ReadText=텍스트읽기
ReadText.Syntax=[ <텍스트> ]
RectangleSum=직사각형합
RectangleSum.Syntax=[ <함수>, <시작 x값>, <마지막 x값>, <사각형의 수>, <사각형의 시작 위치> ]
ReducedRowEchelonForm=에쉴론폼
ReducedRowEchelonForm.Syntax=[ <행렬> ]
Relation=관계
Relation.Syntax=[ <리스트> ]\n[ <대상>, <대상> ]
RemovableDiscontinuity=제거가능불연속
RemovableDiscontinuity.Syntax=[ <함수> ]
Remove=제거
Remove.Syntax=[ <리스트>, <리스트> ]
RemoveUndefined=미정의삭제
RemoveUndefined.Syntax=[ <리스트> ]
Rename=이름다시붙이기
Rename.Syntax=[ <대상>, <이름> ]
Repeat=반복
Repeat.Syntax=[ <수>, <스크립트 명령>, <스크립트 명령>, ... ]
ReplaceAll=모두바꾸기
ReplaceAll.Syntax=[ <텍스트>, <찾을 텍스트>, <바꿀 텍스트> ]
ResidualPlot=잔차그림
ResidualPlot.Syntax=[ <점의 리스트>, <함수> ]
Reverse=역순
Reverse.Syntax=[ <리스트> ]
RightSide=우변
RightSide.Syntax=[ <방정식> ]
RightSide.SyntaxCAS=[ <방정식> ]\n[ <방정식의 리스트> ]\n[ <방정식의 리스트>, <인덱스> ]
RigidPolygon=고정된다각형
RigidPolygon.Syntax=[ <다각형> ]\n[ <다각형>, <x방향 이동거리>, <y방향 이동거리> ]\n[ <점(자유로운 대상)>, ..., <점(자유로운 대상)> ]
Root=근
Root.Syntax=[ <다항식> ]\n[ <함수>, <처음 x-값> ]\n[ <함수>, <시작 x값>, <마지막 x값> ]
Root.SyntaxCAS=[ <다항식> ]
RootList=근리스트
RootList.Syntax=[ <리스트> ]
RootMeanSquare=제곱평균제곱근
RootMeanSquare.Syntax=[ <수의 리스트> ]
Roots=여러근
Roots.Syntax=[ <함수>, <시작 x값>, <마지막 x값> ]
Rotate=회전
Rotate.Syntax=[ <대상>, <각> ]\n[ <대상>, <각>, <점> ]
Rotate.Syntax3D=[ <대상>, <각> ]\n[ <대상>, <각>, <점> ]\n[ <대상>, <각>, <회전축> ]\n[ <대상>, <각>, <축 위의 점>, <방향축 또는 평면> ]
RotateText=텍스트회전
RotateText.Syntax=[ <텍스트>, <각> ]
Row=행
Row.Syntax=[ <스프레드시트 셀> ]
RunClickScript=마우스클릭실행스크립트
RunClickScript.Syntax=[ <대상> ]
RunUpdateScript=새로고침실행스크립트
RunUpdateScript.Syntax=[ <대상> ]
SD=표준편차
SDX=X표준편차
SDX.Syntax=[ <점의 리스트> ]
SDY=Y표준편차
SDY.Syntax=[ <점의 리스트> ]
SVD=특이값분해
SVD.Syntax=[ <행렬> ]
SXX.Syntax=[ <수의 리스트> ]\n[ <점의 리스트> ]
SXY.Syntax=[ <점의 리스트> ]\n[ <수의 리스트>, <수의 리스트> ]
SYY.Syntax=[ <점의 리스트> ]
Sample=표본
Sample.Syntax=[ <리스트>, <크기> ]\n[ <리스트>, <크기>, <with replacement> ]
SampleSD=표본표준편차
SampleSD.SyntaxCAS=[ <수의 리스트> ]
SampleSDX=X표본표준편차
SampleSDX.Syntax=[ <점의 리스트> ]
SampleSDY=Y표본표준편차
SampleSDY.Syntax=[ <점의 리스트> ]
SampleVariance=표본분산
SampleVariance.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
SampleVariance.SyntaxCAS=[ <수의 리스트> ]
ScientificText=과학용텍스트
ScientificText.Syntax=[ <수> ]\n[ <수>, <정확도> ]
SecondAxis=둘째축
SecondAxis.Syntax=[ <원뿔곡선(이차곡선)> ]
SecondAxisLength=둘째축길이
SecondAxisLength.Syntax=[ <원뿔곡선(이차곡선)> ]
Sector=부채꼴
Sector.Syntax=[ <원뿔곡선(이차곡선)>, <점>, <점> ]\n[ <원뿔곡선(이차곡선)>, <변수 값>, <변수 값> ]
Segment=선분
Segment.Syntax=[ <점>, <점> ]\n[ <점>, <길이> ]
SelectObjects=대상선택
SelectObjects.Syntax=[ ]\n[ <대상>, <대상>, ... ]
SelectedElement=선택된원소
SelectedElement.Syntax=[ <리스트> ]
SelectedIndex=선택된인덱스
SelectedIndex.Syntax=[ <리스트> ]
Semicircle=반원
Semicircle.Syntax=[ <점>, <점> ]
Sequence=수열
Sequence.Syntax=[ <끝값> ]\n[ <시작값>, <끝값> ]\n[ <시작값>, <끝값>, <증가> ]\n[ <표현식>, <변량>, <시작값>, <끝값> ]\n[ <표현식>, <변량>, <시작값>, <끝값>, <증가> ]
SetActiveView=활성화창설정
SetActiveView.Syntax=[ <창이름> ]\n[ <평면> ]
SetAxesRatio=축비율설정
SetAxesRatio.Syntax=[ <수>, <수> ]
SetAxesRatio.Syntax3D=[ <수>, <수> ]\n[ <수>, <수>, <수> ]
SetBackgroundColor=배경색설정
SetBackgroundColor.Syntax=[ <색상> ]\n[ <대상>, <색상> ]\n[ <R>, <G>, <B> ]\n[ <대상>, <R>, <G>, <B> ]
SetCaption=캡션설정
SetCaption.Syntax=[ <대상>, <텍스트> ]
SetColor=색상설정
SetColor.Syntax=[ <대상>, <색상> ]\n[ <대상>, <R>, <G>, <B> ]
SetConditionToShowObject=대상보이기조건설정
SetConditionToShowObject.Syntax=[ <대상>, <조건> ]
SetConstructionStep=구성단계설정
SetConstructionStep.Syntax=[ <수> ]
SetCoords=좌표설정
SetCoords.Syntax=[ <대상>, <x>, <y> ]\n[ <대상>, <x>, <y>, <z> ]
SetDecoration=장식설정
SetDecoration.Syntax=[ <대상>, <수> ]\n[ <선분>, <수>, <수>]
SetDynamicColor=동적색상설정
SetDynamicColor.Syntax=[ <대상>, <R>, <G>, <B> ]\n[ <대상>, <R>, <G>, <B>, <투명도> ]
SetFilling=채움설정
SetFilling.Syntax=[ <대상>, <수> ]
SetFixed=고정여부설정
SetFixed.Syntax=[ <대상>, <true | false> ]\n[ <대상>, <true | false>, <true | false> ]
SetImage=이미지설정
SetImage.Syntax=[ <대상>, <그림> ]\n[ <대상>, <텍스트> ]
SetLabelMode=레이블표시설정
SetLabelMode.Syntax=[ <대상>, <수> ]
SetLayer=레이어설정
SetLayer.Syntax=[ <대상>, <레이어> ]
SetLevelOfDetail=세부사항수준설정
SetLevelOfDetail.Syntax=[ <곡면>, <세부사항 수준> ]
SetLineStyle=선스타일설정
SetLineStyle.Syntax=[ <대상>, <수> ]
SetLineThickness=선굵기설정
SetLineThickness.Syntax=[ <대상>, <수> ]
SetPerspective=화면배치설정
SetPerspective.Syntax=[ <텍스트> ]
SetPointSize=점크기설정
SetPointSize.Syntax=[ <대상>, <수> ]
SetPointStyle=점스타일설정
SetPointStyle.Syntax=[ <점>, <수> ]
SetSeed=시드설정
SetSeed.Syntax=[ <정수> ]
SetSpinSpeed=회전속도설정
SetSpinSpeed.Syntax=[ <수> ]
SetTooltipMode=도구도움말모드설정
SetTooltipMode.Syntax=[ <대상>, <수> ]
SetTrace=자취설정
SetTrace.Syntax=[ <대상>, <true | false> ]
SetValue=값설정
SetValue.Syntax=[ <true|false>, <0|1> ]\n[ <대상>, <대상> ]\n[ <리스트>, <수>, <대상> ]
SetViewDirection=보는방향설정
SetViewDirection.Syntax=[ ]\n[ <방향> ]\n[ <방향>, <애니메이션 시작 true|false> ]
SetVisibleInView=보이기설정
SetVisibleInView.Syntax=[ <대상>, <기하창 1|2>, <true|false> ]
Shear=전단
Shear.Syntax=[ <대상>, <직선>, <비율> ]
ShortestDistance=최단거리
ShortestDistance.Syntax=[ <선분의 리스트>, <시작점>, <끝점>, <가중치 true|false> ]
ShowAxes=축보이기
ShowAxes.Syntax=[]\n[ <true|false> ]\n[ <창이름>, <true|false> ]
ShowGrid=격자보이기
ShowGrid.Syntax=[]\n[ <true|false> ]\n[ <창이름>, <true|false> ]
ShowLabel=레이블보이기
ShowLabel.Syntax=[ <대상>, <true|false> ]
ShowLayer=레이어보이기
ShowLayer.Syntax=[ <수> ]
Shuffle=섞기
Shuffle.Syntax=[ <리스트> ]
SigmaXX=시그마XX
SigmaXX.Syntax=[ <점의 리스트> ]\n[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
SigmaXY=시그마XY
SigmaXY.Syntax=[ <점의 리스트> ]\n[ <x좌표의 리스트>, <y좌표의 리스트> ]
SigmaYY=시그마YY
SigmaYY.Syntax=[ <점의 리스트> ]
Simplify=정리
Simplify.Syntax=[ <함수> ]\n[ <텍스트> ]
Simplify.SyntaxCAS=[ <함수> ]
Slider=슬라이더
Slider.Syntax=[ <최솟값>, <최댓값>, <증가>, <속도>, <폭>, <각 여부 true|false>, <수평 true|false>, <애니메이션 true|false>, <랜덤 true|false> ]
Slope=기울기
Slope.Syntax=[ <직선> ]
SlopeField=벡터장
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <수 n> ]\n[ <f(x, y)>, <수 n>, <길이승수 a> ]\n[ <f(x, y)>, <수 n>, <길이승수 a>, <최솟값 x>, <최솟값 y>, <최댓값 x>, <최댓값 y> ]
SlowPlot=천천히그리기
SlowPlot.Syntax=[ <함수> ]\n[ <함수>, <반복 true|false> ]
Solutions=해
Solutions.Syntax=[ <방정식> ]
Solutions.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식의 리스트>, <변수의 리스트> ]
Solve=풀기
Solve.Syntax=[ <방정식> ]
Solve.SyntaxCAS=[ <x로 이루어진 방정식> ]\n[ <방정식>, <변량> ]\n[ <방정식의 리스트>, <변수의 리스트> ]\n[ <​매개변수 방정식의 리스트>, <변수의 리스트> ]\n[ <방정식>, <변량>, <가정의 리스트> ]
SolveCubic=삼차식풀기
SolveCubic.SyntaxCAS=[ <3차 다항식> ]
SolveODE=미분방정식풀기
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <f 위의 점> ]\n[ <f'(x, y)>, <시작 x>, <시작 y>, <마지막 x>, <증가분> ]\n[ <y'>, <x'>, <시작 x>, <시작 y>, <마지막 t>, <증가분> ]\n[ <b(x)>, <c(x)>, <f(x)>, <시작 x>, <시작 y>, <시작 y'>, <마지막 x>, <증가분> ]
SolveODE.SyntaxCAS=[ <방정식> ]\n[ <방정식>, <f 위의 점(들)> ]\n[ <방정식>, <f 위의 점(들)>, <f' 위의 점(들)> ]\n[ <방정식>, <종속적인 변수>, <독립적인 변수>, <f 위의 점(들)> ] \n[ <방정식>, <종속적인 변수>, <독립적인 변수>, <f 위의 점(들)>, <f' 위의 점(들)> ]
SolveQuartic=이차식풀기
SolveQuartic.SyntaxCAS=[ <2차 다항식> ]
Sort=정렬
Sort.Syntax=[ <리스트> ]\n[ <값>, <정렬기준> ]
Spearman=스피어만
Spearman.Syntax=[ <점의 리스트> ]\n[ <수의 리스트>, <수의 리스트> ]
Sphere=구
Sphere.Syntax=[ <점>, <반지름> ]\n[ <점>, <점> ]
Spline=스플라인
Spline.Syntax=[ <점의 리스트> ]\n[ <점의 리스트>, <위수 ≥ 3> ]\n[ <점의 리스트>, <위수 ≥ 3>, <가중치 함수> ]
Split=텍스트나누기
Split.Syntax=[ <텍스트>, <나누는 기준인 텍스트의 리스트> ]
StartAnimation=애니메이션시작
StartAnimation.Syntax=[ ]\n[ <true|false> ]\n[ <슬라이더 또는 점>, <슬라이더 또는 점>, ... ]\n[ <슬라이더 또는 점>, <슬라이더 또는 점>, ..., <true|false> ]
StartRecord=스프레드시트기록시작
StartRecord.Syntax=[ ]\n[ <true|false> ]
StemPlot=줄기잎그림
StemPlot.Syntax=[ <리스트> ]\n[ <리스트>, <조정 1|0|1> ]
StepGraph=계단그래프
StepGraph.Syntax=[ <점의 리스트> ]\n[ <점의 리스트>, <결합 true|false> ]\n[ <x좌표의 리스트>, <y좌표의 리스트> ]\n[ <점의 리스트>, <결합 true|false>, <점 스타일 -2|-1|0|1|2> ]\n[ <x좌표의 리스트>, <y좌표의 리스트>, <결합 true|false> ]\n[ <x좌표의 리스트>, <y좌표의 리스트>, <결합 true|false>, <점 스타일 -2|-1|0|1|2> ]
StickGraph=스틱그래프
StickGraph.Syntax=[ <점의 리스트> ]\n[ <점의 리스트>, <수평 true|false> ]\n[ <x좌표의 리스트>, <y좌표의 리스트> ]\n[ <x좌표의 리스트>, <y좌표의 리스트>, <수평 true|false> ]
Stretch=늘이기
Stretch.Syntax=[ <대상>, <벡터> ]\n[ <대상>, <직선>, <비율> ]
Substitute=치환
Substitute.SyntaxCAS=[ <표현식>, <치환 리스트> ]\n[ <표현식>, <시작값>, <끝값> ]
Sum=합
Sum.Syntax=[ <리스트> ]\n[ <리스트>, <원소의 수> ]\n[ <리스트>, <빈도의 리스트> ]\n[ <표현식>, <변량>, <시작값>, <끝값> ]
Sum.SyntaxCAS=[ <리스트> ]\n[ <표현식>, <변량>, <시작값>, <끝값> ]
SumSquaredErrors=제곱오차의합
SumSquaredErrors.Syntax=[ <점의 리스트>, <함수> ]
SurdText=무리수화
SurdText.Syntax=[ <점> ]\n[ <수> ]\n[ <수>, <리스트> ]
Surface=곡면
Surface.Syntax=[ <함수>, <각> ]\n[ <곡선>, <각>, <직선> ]\n[ <표현식>, <표현식>, <표현식>, <매개변수 1>, <시작값>, <끝값>, <매개변수 2>, <시작값>, <끝값> ]
TDistribution=T분포
TDistribution.Syntax=[ <자유도>, <변수 값> ]\n[ <자유도>, <변수 값>, <진릿값 누적> ]\n[ <자유도>, x, <진릿값 누적> ]
TDistribution.SyntaxCAS=[ <자유도>, <변수 값> ]
TMean2Estimate=T평균추정2
TMean2Estimate.Syntax=[ <표본 데이터 리스트 1>, <표본 데이터 리스트 2>, <신뢰 수준>, <합동추정사용 true|false> ]\n[ <표본 평균 1>, <표본 표준편차 1>, <표본 크기 11>, <표본 평균2>, <표본 표준편차2>, <표본 크기2>, <신뢰 수준>, <합동추정사용 true|false> ]
TMeanEstimate=T평균추정
TMeanEstimate.Syntax=[ <표본 데이터의 리스트>, <신뢰 수준> ]\n[ <표본 평균>, <표본 표준편차>, <표본 크기>, <신뢰 수준> ]
TTest=T검정
TTest.Syntax=[ <표본 데이터의 리스트>, <가설 평균>, <꼬리> ]\n[ <표본 평균>, <표본 표준편차>, <표본 크기>, <가설 평균>, <꼬리> ]
TTest2=T검정2
TTest2.Syntax=[ <표본 데이터 리스트 1>, <표본 데이터 리스트 2>, <꼬리>, <합동추정사용 true|false> ]\n[ <표본 평균 1>, <표본 표준편차 1>, <표본 크기 11>, <표본 평균2>, <표본 표준편차2>, <표본 크기2>, <꼬리>, <합동추정사용 true|false> ]
TTestPaired=짝의T검정
TTestPaired.Syntax=[ <표본 데이터 리스트 1>, <표본 데이터 리스트 2>, <꼬리> ]
TableText=표
TableText.Syntax=[ <리스트>, <리스트>, ... ]\n[ <리스트>, <리스트>, ..., <텍스트의 배치> ]\n[ <리스트>, <리스트>, ..., <텍스트의 배치>, <셀 폭 최솟값> ]\n[ <리스트>, <리스트>, ..., <텍스트의 배치>, <셀 폭 최솟값>, <셀 높이 최솟값> ]
Take=추출
Take.Syntax=[ <리스트>, <시작점>, <끝점> ]\n[ <리스트>, <시작점> ]\n[ <텍스트>, <시작점>, <끝점> ]\n[ <텍스트>, <시작점> ]
Take.SyntaxCAS=[ <리스트>, <시작점> ]\n[ <리스트>, <시작점>, <끝점> ]\n[ <텍스트>, <시작점>, <끝점> ]\n[ <텍스트>, <시작점> ]
Tangent=접선
Tangent.Syntax=[ <점>, <원뿔곡선(이차곡선)> ]\n[ <점>, <함수> ]\n[ <점>, <곡선> ]\n[ <x-값>, <함수> ]\n[ <직선>, <원뿔곡선(이차곡선)> ]\n[ <원뿔곡선(이차곡선)>, <원뿔곡선(이차곡선)> ]
Tangent.SyntaxCAS=[ <수>, <함수> ]\n[ <점>, <대상> ]
TaylorSeries=테일러전개
TaylorSeries.Syntax=[ <함수>, <x-값>, <차수> ]
TaylorSeries.SyntaxCAS=[ <표현식>, <x-값>, <차수> ]\n[ <표현식>, <변량>, <변수 값>, <차수> ]
Tetrahedron=정4면체
Tetrahedron.Syntax=[ <정삼각형> ]\n[ <점>, <점>, <점> ]\n[ <점>, <점>, <방향> ]
Text=텍스트
Text.Syntax=[ <대상> ]\n[ <대상>, <변수 대치 true|false> ]\n[ <대상>, <점> ]\n[ <대상>, <점>, <변수 대치 true|false> ]\n[ <대상>, <점>, <변수 대치 true|false>, <LaTeX 수식을 위한 진리값> ]\n[ <대상>, <점>, <변수 대치 true|false>, <LaTeX 수식을 위한 진리값>, <가로 정렬 -1|0|1> ]\n[ <대상>, <점>, <변수 대치 true|false>, <LaTeX 수식을 위한 진리값>, <가로 정렬 -1|0|1>, <수직 정렬 -1|0|1> ]
TextToUnicode=텍스트유니코드화
TextToUnicode.Syntax=[ <텍스트> ]
Textfield=입력상자
Textfield.Syntax=[ <연결된 대상> ]
TiedRank=동순위
TiedRank.Syntax=[ <리스트> ]
ToBase=진법화
ToBase.Syntax=[ <수>, <기존 진법(수)> ]
ToComplex=복소수화
ToComplex.Syntax=[ <벡터> ]
ToExponential=지수화
ToExponential.SyntaxCAS=[ <복소수> ]
ToPoint=좌표화
ToPoint.Syntax=[ <복소수> ]
ToPolar=극좌표화
ToPolar.Syntax=[ <복소수> ]\n[ <벡터> ]
ToolImage=도구이미지
ToolImage.Syntax=[ <수> ]\n[ <수>, <점> ]\n[ <수>, <점>, <점> ]
Top=윗면
Top.Syntax=[ <2차식> ]
Translate=평행이동
Translate.Syntax=[ <대상>, <벡터> ]\n[ <벡터>, <시작점> ]
Transpose=전치행렬
Transpose.Syntax=[ <행렬> ]
TrapezoidalSum=사다리꼴합
TrapezoidalSum.Syntax=[ <함수>, <시작 x값>, <마지막 x값>, <사다리꼴의 수> ]
TravelingSalesman=순회판매원
TravelingSalesman.Syntax=[ <점의 리스트> ]
TriangleCenter=삼각형중심
TriangleCenter.Syntax=[ <점>, <점>, <점>, <수> ]
TriangleCurve=삼각형곡선
TriangleCurve.Syntax=[ <점>, <점>, <점>, <방정식> ]
Triangular=삼각분포
Triangular.Syntax=[ <하계>, <상계>, <모드>, <변수 값> ]\n[ <하계>, <상계>, <모드>, <변수 값>, <진릿값 누적> ]\n[ <하계>, <상계>, <모드>, x, <진릿값 누적> ]
TrigCombine=삼각함수합성
TrigCombine.Syntax=[ <표현식> ]\n[ <표현식>, <변환된 식에서 사용할 함수> ]
TrigExpand=삼각함수전개
TrigExpand.Syntax=[ <표현식> ]\n[ <표현식>, <변환된 식에서 사용할 함수> ]
TrigExpand.SyntaxCAS=[ <표현식> ]\n[ <표현식>, <변환된 식에서 사용할 함수> ]\n[ <표현식>, <변환된 식에서 사용할 함수>, <변환된 식에서 사용할 변수> ]\n[ <표현식>, <변환된 식에서 사용할 함수>, <변환된 식에서 사용할 변수>, <변환된 식에서 사용할 변수> ]
TrigSimplify=삼각함수정리
TrigSimplify.Syntax=[ <표현식> ]
Trilinear=삼선좌표
Trilinear.Syntax=[ <점>, <점>, <점>, <수>, <수>, <수> ]
TurningPoint=변곡점
TurningPoint.Syntax=[ <다항식> ]
TurningPoint.SyntaxCAS=[ <함수> ]
Turtle=거북이
Turtle.Syntax=[]
TurtleBack=거북이뒤로
TurtleBack.Syntax=[ <거북이 이름>, <거리> ]
TurtleDown=거북이놓기
TurtleDown.Syntax=[ <거북이 이름> ]
TurtleForward=거북이앞으로
TurtleForward.Syntax=[ <거북이 이름>, <거리> ]
TurtleLeft=거북이왼쪽
TurtleLeft.Syntax=[ <거북이 이름>, <각> ]
TurtleRight=거북이오른쪽
TurtleRight.Syntax=[ <거북이 이름>, <각> ]
TurtleUp=거북이들기
TurtleUp.Syntax=[ <거북이 이름> ]
Type=유형
Type.Syntax=[ <대상> ]
UnicodeToLetter=유니코드글자화
UnicodeToLetter.Syntax=[ <정수> ]
UnicodeToText=유니코드텍스트화
UnicodeToText.Syntax=[ <정수의 리스트> ]
Uniform=균등분포
Uniform.Syntax=[ <하계>, <상계>, <변수 값> ]\n[ <하계>, <상계>, <변수 값>, <진릿값 누적> ]\n[ <하계>, <상계>, x, <진릿값 누적> ]
Union=합집합
Union.Syntax=[ <리스트>, <리스트> ]\n[ <다각형>, <다각형> ]
Unique=반복원소제거
Unique.Syntax=[ <리스트> ]
UnitOrthogonalVector=단위수직벡터
UnitOrthogonalVector.Syntax=[ <직선> ]\n[ <선분> ]\n[ <벡터> ]
UnitOrthogonalVector.Syntax3D=[ <직선> ]\n[ <선분> ]\n[ <벡터> ]\n[ <평면> ]
UnitOrthogonalVector.SyntaxCAS=[ <벡터> ]
UnitVector=단위벡터
UnitVector.Syntax=[ <대상> ]
UnitVector.SyntaxCAS=[ <벡터> ]
UpdateConstruction=구성새로고침
UpdateConstruction.Syntax=[ ]\n[ <횟수> ]
UpperSum=상합
UpperSum.Syntax=[ <함수>, <시작 x값>, <마지막 x값>, <사각형의 수> ]
Variance=분산
Variance.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
Vector=벡터
Vector.Syntax=[ <점> ]\n[ <시작점>, <끝점> ]
Vertex=정점
Vertex.Syntax=[ <원뿔곡선(이차곡선)> ]\n[ <부등식> ]\n[ <다각형> ]\n[ <다각형>, <인덱스> ]\n[ <선분>, <인덱스> ]
VerticalText=세로텍스트
VerticalText.Syntax=[ <텍스트> ]\n[ <텍스트>, <점> ]
Volume=부피
Volume.Syntax=[ <입체> ]
Voronoi=보로노이
Voronoi.Syntax=[ <점의 리스트> ]
Weibull=와이블분포
Weibull.Syntax=[ <Shape>, <계급폭>, <변수 값> ]\n[ <Shape>, <계급폭>, <변수 값>, <진릿값 누적> ]\n[ <Shape>, <계급폭>, x, <진릿값 누적> ]
Weibull.SyntaxCAS=[ <Shape>, <계급폭>, <변수 값> ]
ZMean2Estimate=Z평균추정2
ZMean2Estimate.Syntax=[ <표본 데이터 리스트 1>, <표본 데이터 리스트 2>, <σ1>, <σ2>, <신뢰 수준> ]\n[ <표본 평균 1>, <σ1>, <표본 크기 11>, <표본 평균2>, <σ2>, <표본 크기2>, <신뢰 수준> ]
ZMean2Test=Z평균검정2
ZMean2Test.Syntax=[ <표본 데이터 리스트 1>, <σ1>, <표본 데이터 리스트 2>, <σ2>, <꼬리> ]\n[ <표본 평균 1>, <σ1>, <표본 크기 11>, <표본 평균2>, <σ2>, <표본 크기2>, <꼬리> ]
ZMeanEstimate=Z평균추정
ZMeanEstimate.Syntax=[ <표본 데이터의 리스트>, <σ>, <신뢰 수준> ]\n[ <표본 평균>, <σ>, <표본 크기>, <신뢰 수준> ]
ZMeanTest=Z평균검정
ZMeanTest.Syntax=[ <표본 데이터의 리스트>, <σ>, <가설 평균>, <꼬리> ]\n[ <표본 평균>, <σ>, <표본 크기>, <가설 평균>, <꼬리> ]
ZProportion2Estimate=Z비율추정2
ZProportion2Estimate.Syntax=[ <표본 비율 1>, <표본 크기 11>, <표본 비율 2>, <표본 크기2>, <신뢰 수준> ]
ZProportion2Test=Z비율검정2
ZProportion2Test.Syntax=[ <표본 비율 1>, <표본 크기 11>, <표본 비율 2>, <표본 크기2>, <꼬리> ]
ZProportionEstimate=Z비율추정
ZProportionEstimate.Syntax=[ <표본 비율>, <표본 크기>, <신뢰 수준> ]
ZProportionTest=Z비율검정
ZProportionTest.Syntax=[ <표본 비율>, <표본 크기>, <가정된 비율>, <꼬리> ]
Zip=사상
Zip.Syntax=[ <표현식>, <변수 1>, <리스트 1>, <변수 2>, <리스트 2>, ... ]
Zipf=Zipf분포
Zipf.Syntax=[ <원소의 수>, <지수> ]\n[ <원소의 수>, <지수>, <진릿값 누적> ]\n[ <원소의 수>, <지수>, <변수 값>, <진릿값 누적> ]
Zipf.SyntaxCAS=[ <원소의 수>, <지수>, <변수 값>, <진릿값 누적> ]
ZoomIn=크게보기
ZoomIn.Syntax=[ ]\n[ <단위> ]\n[ <단위>, <중심점> ]\n[ <최솟값 x>, <최솟값 y>, <최댓값 x>, <최댓값 y> ]\n[ <최솟값 x>, <최솟값 y>, <최솟값 z>, <최댓값 x>, <최댓값 y>, <최댓값 z> ]
ZoomOut=작게보기
ZoomOut.Syntax=[ <단위> ]\n[ <단위>, <중심점> ]
mad.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
mean.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
stdev.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]
stdevp.Syntax=[ <원본 데이터의 리스트> ]\n[ <수의 리스트>, <빈도의 리스트> ]