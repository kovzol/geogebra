# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Listă>, <Listă>, ... ]
AffineRatio=RaportAfin
AffineRatio.Syntax=[ <Punct>, <Punct>, <Punct> ]
Angle=Unghi
Angle.Syntax=[ <Obiect> ]\n[ <Vector>, <Vector> ]\n[ <Dreaptă>, <Dreaptă> ]\n[ <Punct>, <Vârf>, <Punct> ]\n[ <Punct>, <Vârf>, <Unghi> ]
Angle.Syntax3D=[ <Obiect> ]\n[ <Vector>, <Vector> ]\n[ <Dreaptă>, <Dreaptă> ]\n[ <Dreaptă>, <Plan> ]\n[ <Plan>, <Plan> ]\n[ <Punct>, <Vârf>, <Punct> ]\n[ <Punct>, <Vârf>, <Unghi> ]\n[ <Punct>, <Punct>, <Punct>, <Direcție> ]
AngularBisector=Bisectoare
AngularBisector.Syntax=[ <Dreaptă>, <Dreaptă> ]\n[ <Punct>, <Punct>, <Punct> ]
Append=Adaugă
Append.Syntax=[ <Listă>, <Obiect> ]\n[ <Obiect>, <Listă> ]
ApplyMatrix=AplicăMatrice
ApplyMatrix.Syntax=[ <Matrice>, <Obiect> ]
Arc.Syntax=[ <Cerc>, <Punct>, <Punct> ]\n[ <Elipsă>, <Punct>, <Punct> ]\n[ <Cerc>, <Valoare parametru>, <Valoare parametru> ]\n[ <Elipsă>, <Valoare parametru>, <Valoare parametru> ]
AreCollinear=SuntColiniare
AreCollinear.Syntax=[ <Punct>, <Punct>, <Punct> ]
AreConcurrent=SuntConcurente
AreConcurrent.Syntax=[ <Dreaptă>, <Dreaptă>, <Dreaptă> ]
AreConcyclic=SuntConciclice
AreConcyclic.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct> ]
AreCongruent.Syntax=[ <Obiect>, <Obiect> ]
AreEqual=SuntEgale
AreEqual.Syntax=[ <Obiect>, <Obiect> ]
AreParallel=SuntParalele
AreParallel.Syntax=[ <Dreaptă>, <Dreaptă> ]
ArePerpendicular=SuntPerpendiculare
ArePerpendicular.Syntax=[ <Dreaptă>, <Dreaptă> ]
Area=Arie
Area.Syntax=[ <Conică> ]\n[ <Poligon> ]\n[ <Punct>, ..., <Punct> ]
Assume.SyntaxCAS=[ <Condiţie>, <expresie> ]
Asymptote=Asimptotă
Asymptote.Syntax=[ <Obiect> ]
AttachCopyToView=AtașareCopieSpreVizualizare
AttachCopyToView.Syntax=[ <Obiect>, <Vizualizare 0|1|2> ]\n[ <Obiect>, <Vizualizare 0|1|2>, <Punct 1>, <Punct 2>, <Punct de ecran 1>, <Punct de ecran 2> ]
Axes=Axe
Axes.Syntax=[ <Conică> ]
Axes.Syntax3D=[ <Conică> ]\n[ <Quadric> ]
AxisStepX=PasAxaX
AxisStepX.Syntax=[ ]
AxisStepY=PasAxaY
AxisStepY.Syntax=[ ]
BarChart=DiagramăBare
BarChart.Syntax=[ <Lista de date>, <Listă de frecvențe> ]\n[ <Listă de date raw>, <Latime de bare>, <Factor scară verticală (opțional)> ]\n[ <Lista de date>, <Listă de frecvențe>, <Latime de bare> ]\n[ <Valuare iniţială>, <Valuare finală>, <Lista înalţime> ]\n[ <Valuare iniţială>, <Valuare finală>, <expresie>, <variabilă>, <de la numărul>, <La numărul> ]\n[ <Valuare iniţială>, <Valuare finală>, <expresie>, <variabilă>, <de la numărul>, <La numărul>, <Laţime Pas> ]
Barycenter=Baricentru
Barycenter.Syntax=[ <Listă de puncte>, <Listă de ponderi> ]
Bernoulli.Syntax=[ <Probabilitate>, <Boolean Cumulat> ]
BetaDist.Syntax=[ <Alpha>, <Beta>, <Valoare variabilă> ]\n[ <Alpha>, <Beta>, <Valoare variabilă>, <Boolean Cumulat>  ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulat> ]
Binomial=CoeficientBinomial
Binomial.Syntax=[ <Număr n>, <Număr r> ]
BinomialDist.Syntax=[ <Număr de încercări>, <Probabilitatea de succes> ]\n[ <Număr de încercări>, <Probabilitatea de succes>, <Boolean Cumulat> ]\n[ <Număr de încercări>, <Probabilitatea de succes>, <List of Values> ]\n[ <Număr de încercări>, <Probabilitatea de succes>, <Valoare variabilă>, <Boolean Cumulat> ]
BinomialDist.SyntaxCAS=[ <Număr de încercări>, <Probabilitatea de succes>, <Valoare variabilă>, <Boolean Cumulat> ]
Bottom=BazaInferioară
Bottom.Syntax=[ <Quadric> ]
BoxPlot.Syntax=[ <yCompensație>, <yScală>, <Listă de date raw> ]\n[ <yCompensație>, <yScală>, <Listă de date raw>, <Aberante Booleane> ]\n[ <yCompensație>, <yScală>, <Lista de date>, <Listă de frecvențe>, <Aberante Booleane> ]\n[ <yCompensație>, <yScală>, <Valuare iniţială>, <Q1>, <Mediană>, <Q3>, <Valuare finală> ]
Button=Buton
Button.Syntax=[ ]\n[ <Legendă> ]
CASLoaded.Syntax=[]
CFactor=CFactorizare
CFactor.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabilă> ]
CIFactor.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabilă> ]
CSolutions=CSoluții
CSolutions.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Listă ecuaţii>, <Listă variabile> ]
CSolve=CRezolvă
CSolve.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Listă ecuaţii>, <Listă variabile> ]
Cauchy.Syntax=[ <Mediană>, <Scală>, <Valoare variabilă> ]\n[ <Mediană>, <Scală>, <Valoare variabilă>, <Boolean Cumulat>  ]\n[ <Mediană>, <Scală>, x, <Boolean Cumulat> ]
Cauchy.SyntaxCAS=[ <Mediană>, <Scală>, <Valoare variabilă> ]
Cell=Celulă
Cell.Syntax=[ <Coloană>, <Rând> ]
CellRange=ŞirCelule
CellRange.Syntax=[ <Celulă de început>, <Celulă de sfârşit> ]
Center=Centru
Center.Syntax=[ <Conică> ]
Center.Syntax3D=[ <Conică> ]\n[ <Quadric> ]
CenterView=VedereCentrală
CenterView.Syntax=[ <Centru> ]
Centroid=CentruPoligon
Centroid.Syntax=[ <Poligon> ]
CharacteristicPolynomial.Syntax=[ <Matrice> ]
Checkbox.Syntax=[ ]\n[ <Legendă> ]\n[ <Listă> ]\n[ <Legendă>, <Listă> ]
ChiSquared.Syntax=[ <Grad de libertate>, <Valoare variabilă> ]\n[ <Grad de libertate>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Grad de libertate>, x, <Boolean Cumulat> ]
ChiSquared.SyntaxCAS=[ <Grad de libertate>, <variabilă> ]
ChiSquaredTest=TestChiPătrat
ChiSquaredTest.Syntax=[ <Matrice> ]\n[ <Listă>, <Listă> ]\n[ <Matrice>, <Matrice> ]
Circle=Cerc
Circle.Syntax=[ <Punct>, <Rază> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Punct> ]
Circle.Syntax3D=[ <Punct>, <Rază> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Dreaptă>, <Punct> ]\n[ <Punct>, <Rază>, <Direcție> ]\n[ <Punct>, <Punct>, <Direcție> ]
CircleArc=ArcCircular
CircleArc.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircumcircleArc=ArcCircumcircular
CircumcircleArc.Syntax=[ <Punct>, <Punct>, <Punct> ]
CircumcircleSector=SectorCircumcircular
CircumcircleSector.Syntax=[ <Punct>, <Punct>, <Punct> ]
Circumference=Circumferinţă
Circumference.Syntax=[ <Conică> ]
Classes=Clase
Classes.Syntax=[ <Lista de date>, <Număr de clase> ]\n[ <Lista de date>, <Start>, <Lăţime de clase> ]
ClosestPoint=CelmaiapropiatPunct
ClosestPoint.Syntax=[ <Direcție>, <Punct> ]\n[ <Dreaptă>, <Dreaptă> ]
ClosestPointRegion=CelMaiApropiatPunctDeRegiune
ClosestPointRegion.Syntax=[ <Regiune>, <Punct> ]
Coefficients=Coeficienţi
Coefficients.Syntax=[ <Polinomial> ]\n[ <Conică> ]
Coefficients.SyntaxCAS=[ <Polinomial> ]\n[ <Polinomial>, <variabilă> ]
Column=Coloană
Column.Syntax=[ <Celulă din foaia de calcul> ]
ColumnName=NumeColoană
ColumnName.Syntax=[ <Celulă din foaia de calcul> ]
Command=Comandă
CommonDenominator=NumitorComun
CommonDenominator.Syntax=[ <expresie>, <expresie> ]
CompleteSquare=PătratComplet
CompleteSquare.Syntax=[ <Funcţie pătratică> ]
ComplexRoot=RădăcinăComplexă
ComplexRoot.Syntax=[ <Polinomial> ]
Cone=Con
Cone.Syntax=[ <Cerc>, <Înălţime> ]\n[ <Punct>, <Punct>, <Rază> ]\n[ <Punct>, <Vector>, <Unghi> ]
ConeInfinite=ConInfinit
ConeInfinite.Syntax=[ <Punct>, <Vector>, <Unghi> ]\n[ <Punct>, <Punct>, <Unghi> ]\n[ <Punct>, <Dreaptă>, <Unghi> ]
Conic=Conică
Conic.Syntax=[ <Listă> ]\n[ <Punct>, <Punct>, <Punct>, <Punct>, <Punct> ]\n[ <Număr>, <Număr>, <Număr>, <Număr>, <Număr>, <Număr> ]
ConstructionStep=PasDeConstrucţie
ConstructionStep.Syntax=[ ]\n[ <Obiect> ]
ContingencyTable=TabelContingență
ContingencyTable.Syntax=[ <Listă Texte>, <Listă Texte> ]\n[ <Listă Texte>, <Listă Texte>, <Opțiuni> ]\n[ <Listă Valori de Linie>, <Listă Valori de Coloană>, <Tabel Frecvențe> ]\n[ <Listă Valori de Linie>, <Listă Valori de Coloană>, <Tabel Frecvențe> , <Opțiuni> ]
ContinuedFraction=FracțieContinuă
ContinuedFraction.Syntax=[ <Număr> ]\n[ <Număr>, <Nivel> ]\n[ <Număr>, <Nivel>, <Conformitate adevărat|fals> ]
ConvexHull=ÎnvelitoareComplexă
ConvexHull.Syntax=[ <Listă de puncte> ]
CopyFreeObject=CopiaţiObiectLiber
CopyFreeObject.Syntax=[ <Obiect> ]
Corner=Colţ
Corner.Syntax=[ <Număr colţuri> ]\n[ <Imagine>, <Număr colţuri> ]\n[ <Text>, <Număr colţuri> ]\n[ <Fereastă grafică>, <Număr colţuri> ]
CountIf=ContorCondiţional
CountIf.Syntax=[ <Condiţie>, <Listă> ]\n[ <Condiţie>, <variabilă>, <Listă> ]
Covariance=Covarianţă
Covariance.Syntax=[ <Listă de puncte> ]\n[ <Listă de numere>, <Listă de numere> ]
Cross=Produs Vectorial
Cross.Syntax=[ <Vector>, <Vector> ]
CrossRatio=RaportAnarmonic
CrossRatio.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct> ]
Cube=Cub
Cube.Syntax=[ <Square> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
Cubic.Syntax=[ <Punct>, <Punct>, <Punct>, <Număr> ]
Curvature=Curbură
Curvature.Syntax=[ <Punct>, <Obiect> ]
CurvatureVector=VectorDeCurbură
CurvatureVector.Syntax=[ <Punct>, <Obiect> ]
CurveCartesian=Curbă
CurveCartesian.Syntax=[ <expresie>, <expresie>, <Variabilă Parametru>, <Valuare iniţială>, <Valuare finală> ]
CurveCartesian.Syntax3D=[ <expresie>, <expresie>, <Variabilă Parametru>, <Valuare iniţială>, <Valuare finală> ]\n[ <expresie>, <expresie>, <expresie>, <Variabilă Parametru>, <Valuare iniţială>, <Valuare finală> ]
Cylinder=Cilindru
Cylinder.Syntax=[ <Cerc>, <Înălţime> ]\n[ <Punct>, <Punct>, <Rază> ]
CylinderInfinite=CilindruInfinit
CylinderInfinite.Syntax=[ <Dreaptă>, <Rază> ]\n[ <Punct>, <Vector>, <Rază> ]\n[ <Punct>, <Punct>, <Rază> ]
DataFunction.Syntax=[ <Listă de numere>, <Listă de numere> ]
Defined=Defineşte
Defined.Syntax=[ <Obiect> ]
Degree=Grad
Degree.Syntax=[ <Polinomial> ]
Degree.SyntaxCAS=[ <Polinomial> ]\n[ <Polinomial>, <variabilă> ]
DelauneyTriangulation=TriangulareDelaunay
DelauneyTriangulation.Syntax=[ <Listă de puncte> ]
Delete=Şterge
Delete.Syntax=[ <Obiect> ]
Denominator=Numitor
Denominator.Syntax=[ <Număr> ]\n[ <Funcţie> ]
Denominator.SyntaxCAS=[ <expresie> ]
DensityPlot=Plotdensitate
Derivative=Derivata
Derivative.Syntax=[ <Funcţie> ]\n[ <Curbă> ]\n[ <Funcţie>, <Număr> ]\n[ <Funcţie>, <variabilă> ]\n[ <Curbă>, <Număr> ]\n[ <Funcţie>, <variabilă>, <Număr> ]
Derivative.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabilă> ]\n[ <expresie>, <variabilă>, <Număr> ]
Determinant.Syntax=[ <Matrice> ]
Diameter=DiametruConjugat
Diameter.Syntax=[ <Vector>, <Conică> ]\n[ <Dreaptă>, <Conică> ]
Difference.Syntax=[ <Poligon>, <Poligon> ]
Dilate=Dilatare
Dilate.Syntax=[ <Obiect>, <Factor de Dilatare> ]\n[ <Obiect>, <Factor de Dilatare>, <Punct Central al Dilatării> ]
Dimension=Dimensiune
Dimension.Syntax=[ <Obiect> ]
Direction=Direcţie
Direction.Syntax=[ <Dreaptă> ]
Directrix=Directoare
Directrix.Syntax=[ <Conică> ]
Distance=Distanţă
Distance.Syntax=[ <Punct>, <Obiect> ]\n[ <Dreaptă>, <Dreaptă> ]\n[ <Plan>, <Plan> ]
Distance.SyntaxCAS=[ <Punct>, <Obiect> ]
Div.Syntax=[ <Deîmpărțit>, <Divizor> ]\n[ <Deîmpărțit Polinomial>, <Divizor Polinomial> ]
Division=Împărţire
Division.Syntax=[ <Deîmpărțit>, <Divizor> ]\n[ <Deîmpărțit Polinomial>, <Divizor Polinomial> ]
Divisors=Divizori
Divisors.Syntax=[ <Număr> ]
DivisorsList=ListăDivizori
DivisorsList.Syntax=[ <Număr> ]
DivisorsSum=SumaDivizori
DivisorsSum.Syntax=[ <Număr> ]
Dodecahedron=Dodecaedru
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
Dot=Produs Scalar
Dot.Syntax=[ <Vector>, <Vector> ]
DotPlot.Syntax=[ <Listă de date raw>, <Stiva puncte adiacente (opţional)>, <Factor Scară (opţional)>]
DynamicCoordinates=CoordonateDinamice
DynamicCoordinates.Syntax=[ <Punct>, <x- abscisa>, <y-Coordinate> ]\n[ <Punct>, <x- abscisa>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity=Excentricitate
Eccentricity.Syntax=[ <Conică> ]
Eigenvalues.SyntaxCAS=[ <Matrice> ]
Eigenvectors.SyntaxCAS=[ <Matrice> ]
Element.Syntax=[ <Listă>, <Poziţia elementului> ]\n[ <Matrice>, <Rând>, <Coloană> ]\n[ <Listă>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Listă>, <Poziţia elementului> ]\n[ <Matrice>, <Rând>, <Coloană> ]
Eliminate=Elimină
Eliminate.Syntax=[ <Listă polinoame>, <Listă variabile> ]
Ellipse=Elipsă
Ellipse.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Focar>, <Focar>, <Punct> ]
Ends=Finaluri
Ends.Syntax=[ <Quadric> ]
Envelope=Plic
Envelope.Syntax=[ <Direcție>, <Punct> ]
Erlang.Syntax=[ <Formă>, <Rată>, <Valoare variabilă> ]\n[ <Formă>, <Rată>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Formă>, <Rată>, x, <Boolean Cumulat> ]
Evaluate=evalua
Excentricity=ExcentricitateLiniară
Excentricity.Syntax=[ <Conică> ]
Execute=Execută
Execute.Syntax=[ <Listă Texte> ]\n[ <Listă Texte>, <Parametru>, <Parametru>, ... ]
Expand=Dezvoltă
Expand.Syntax=[ <expresie> ]
Exponential=Exponenţial
Exponential.Syntax=[ <Lambda>, <Valoare variabilă> ]\n[ <Lambda>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Lambda>, x, <Boolean Cumulat> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valoare variabilă> ]
ExportImage.Syntax=[ <Property>, <Valoare>, <Property>, <Valoare>, ... ]
ExtendedGCD.Syntax=[ <Întreg>, <Întreg>]\n[ <Polinomial>, <Polinomial>]
Extremum=Extrem
Extremum.Syntax=[ <Polinomial> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
Extremum.SyntaxCAS=[ <Funcţie> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
FDistribution=DistribuireF
FDistribution.Syntax=[ <Număăator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabilă> ]\n[ <Număăator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Număăator Grade de Libertate>, <Numitor Grade de Libertate>, x, <Boolean Cumulat> ]
FDistribution.SyntaxCAS=[ <Număăator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabilă> ]
Factor=Factorizează
Factor.Syntax=[ <Polinomial> ]
Factor.SyntaxCAS=[ <Număr> ]\n[ <Polinomial> ]\n[ <expresie>, <variabilă> ]
Factors=Factori
Factors.Syntax=[ <Polinomial> ]\n[ <Număr> ]
FillCells=CompleteazăCelule
FillCells.Syntax=[ <GamăCelule>, <Obiect> ]\n[ <GamăCelule>, <Listă> ]\n[ <GamăCelule>, <Matrice> ]
FillColumn=CompleteazăColoană
FillColumn.Syntax=[ <Coloană>, <Listă> ]
FillRow=CompleteazăRând
FillRow.Syntax=[ <Rând>, <Listă> ]
First=PrimulElement
First.Syntax=[ <Listă> ]\n[ <Text> ]\n[ <Listă>, <Numărul elementelor> ]\n[ <Text>, <Numărul elementelor> ]\n[ <Locus>, <Numărul elementelor> ]
First.SyntaxCAS=[ <Listă> ]\n[ <Listă>, <Numărul elementelor> ]
FirstAxis=AxaMare
FirstAxis.Syntax=[ <Conică> ]
FirstAxisLength=LungimeSemiaxaMare
FirstAxisLength.Syntax=[ <Conică> ]
Fit=Potrivit
Fit.Syntax=[ <Listă de puncte>, <Listă de funcţii> ]\n[ <Listă de puncte>, <Funcţie> ]
FitExp=RegresieExponenţială
FitExp.Syntax=[ <Listă de puncte> ]
FitGrowth=AjustareCreștere
FitGrowth.Syntax=[ <Listă de puncte> ]
FitImplicit=PotrivireImplicită
FitImplicit.Syntax=[ <Listă de puncte>, <Ordinul> ]
FitLineX=XDreaptăRegresie
FitLineX.Syntax=[ <Listă de puncte> ]
FitLineY=YDreaptăRegresie
FitLineY.Syntax=[ <Listă de puncte> ]
FitLog=RegresieLogaritmică
FitLog.Syntax=[ <Listă de puncte> ]
FitLogistic=RegresieLogistică
FitLogistic.Syntax=[ <Listă de puncte> ]
FitPoly=RegresiePolinomială
FitPoly.Syntax=[ <Listă de puncte>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=RegresieSeriePuteri
FitPow.Syntax=[ <Listă de puncte> ]
FitSin=RegresieSinusoidală
FitSin.Syntax=[ <Listă de puncte> ]
Flatten=Aplatiza
Flatten.Syntax=[ <Listă> ]
Focus=Focar
Focus.Syntax=[ <Conică> ]
FractionText=TextFracţie
FractionText.Syntax=[ <Număr> ]\n[ <Punct> ]\n[ <Număr>, <Boolean Single fraction> ]
Frequency=Frecvenţă
Frequency.Syntax=[ <Listă de date raw> ]\n[ <Boolean Cumulat>, <Listă de date raw> ]\n[ <Listă Limite de Clase>, <Listă de date raw> ]\n[ <Listă Texte>, <Listă Texte> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw> ]\n[ <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]
FrequencyPolygon=PligonFrecveţă
FrequencyPolygon.Syntax=[ <Listă Limite de Clase>, <Lista înalţime> ]\n[ <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]
FrequencyTable=TabelFrecveţă
FrequencyTable.Syntax=[ <Listă de date raw>, <Factor Scară (opţional)> ]\n[ <Boolean Cumulat>, <Listă de date raw> ]\n[ <Listă Limite de Clase>, <Listă de date raw> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw> ]\n[ <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]
FromBase=DinBaza
FromBase.Syntax=[ <Număr ca text>, <Bază> ]
Function=Funcţie
Function.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Listă de numere> ]
Function.Syntax3D=[ <Listă de numere> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <expresie>, <variabila parametru 1>, <Valuare iniţială>, <Valuare finală>, <variabila parametru 2>, <Valuare iniţială>, <Valuare finală> ]
Function.SyntaxCAS=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
FutureValue=ValoareViitoare
FutureValue.Syntax=[ <Rată>, <Număr de puncte>, <Plată>, <Valuare prezentă (opţional)>, <Tip (opţional)> ]
GCD=CMMDC
GCD.Syntax=[ <Listă de numere> ]\n[ <Număr>, <Număr> ]
GCD.SyntaxCAS=[ <Listă de numere> ]\n[ <Listă polinoame> ]\n[ <Număr>, <Număr> ]\n[ <Polinomial>, <Polinomial> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Valoare variabilă> ]\n[ <Alpha>, <Beta>, <Valoare variabilă>, <Boolean Cumulat>  ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulat> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <Valoare variabilă> ]
GeometricMean=MedieGeometrică
GeometricMean.Syntax=[ <Listă de numere> ]
GetTime=CiteşteTimpul
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex.Syntax=[ <Listă polinoame> ]\n[ <Listă polinoame>, <Listă variabile> ]
GroebnerLex.Syntax=[ <Listă polinoame> ]\n[ <Listă polinoame>, <Listă variabile> ]
GroebnerLexDeg.Syntax=[ <Listă polinoame> ]\n[ <Listă polinoame>, <Listă variabile> ]
HarmonicMean=MedieArmonică
HarmonicMean.Syntax=[ <Listă de numere> ]
Height=înălțime
Height.Syntax=[ <Corp> ]
HideLayer=AscundeStrat
HideLayer.Syntax=[ <Număr> ]
Histogram=Histogramă
Histogram.Syntax=[ <Listă Limite de Clase>, <Lista înalţime> ]\n[ <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]
HistogramRight=HistogramăDreapta
HistogramRight.Syntax=[ <Listă Limite de Clase>, <Lista înalţime> ]\n[ <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)>  ]\n[ <Boolean Cumulat>, <Listă Limite de Clase>, <Listă de date raw>, <Densitate true|false>, <Scară Densitate (opțional)> ]
HyperGeometric=HiperGeometric
HyperGeometric.Syntax=[ <Dimensiune Populație>, <Număr Succese>, <Dimensiune Mostră> ]\n[ <Dimensiune Populație>, <Număr Succese>, <Dimensiune Mostră>, <Boolean Cumulat> ]\n[ <Dimensiune Populație>, <Număr Succese>, <Dimensiune Mostră>, <Valoare variabilă>, <Boolean Cumulat> ]
HyperGeometric.SyntaxCAS=[ <Dimensiune Populație>, <Număr Succese>, <Dimensiune Mostră>, <Valoare variabilă>, <Boolean Cumulat> ]
Hyperbola=Hiperbolă
Hyperbola.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Focar>, <Focar>, <Punct> ]
IFactor.Syntax=[ <Polinomial> ]
IFactor.SyntaxCAS=[ <expresie> ]
Icosahedron=Icosaedru
Icosahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
Identity=Identitate
Identity.Syntax=[ <Număr> ]
If=Dacă
If.Syntax=[ <Condiţie>, <Atunci> ]\n[ <Condiţie>, <Atunci>, <Altfel> ]
ImplicitCurve=CurbăImplicită
ImplicitCurve.Syntax=[ <Listă de puncte> ]\n[ <f(x y)> ]
ImplicitDerivative=DerivatăImplicită
ImplicitDerivative.Syntax=[ <f(x y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x y)> ]\n[ <expresie>, <Variabilă Dependentă>, <Variabilă Independentă> ]
Incircle=CercÎnscris
Incircle.Syntax=[ <Punct>, <Punct>, <Punct> ]
IndexOf=IndiceleLui
IndexOf.Syntax=[ <Obiect>, <Listă> ]\n[ <Text>, <Text> ]\n[ <Obiect>, <Listă>, <Indice de început> ]\n[ <Text>, <Text>, <Indice de început> ]
Insert=Inserare
Insert.Syntax=[ <Listă>, <Listă>, <Poziţie> ]\n[ <Obiect>, <Listă>, <Poziţie> ]
Integral=Integrală
Integral.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Boolean> ]
Integral.SyntaxCAS=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
IntegralBetween=IntegralăÎntre
IntegralBetween.Syntax=[ <Funcţie>, <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Boolean> ]
IntegralBetween.SyntaxCAS=[ <Funcţie>, <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <Funcţie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
IntegralSymbolic.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]
InteriorAngles.Syntax=[ <Poligon> ]
Intersect=Intersecţie
Intersect.Syntax=[ <Obiect>, <Obiect> ]\n[ <Obiect>, <Obiect>, <Numărul punctului de intersecţie> ]\n[ <Obiect>, <Obiect>, <Punct iniţial> ]\n[ <Funcţie>, <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Curba 1>, <Curba2>, <Parametru 1>, <Parametru 2> ]
Intersect.SyntaxCAS=[ <Funcţie>, <Funcţie> ]
IntersectConic=IntersecţieConice
IntersectConic.Syntax=[ <Plan>, <Quadric> ]\n[ <Quadric>, <Quadric> ]
IntersectPath=IntersecţieCurbe
IntersectPath.Syntax=[ <Dreaptă>, <Poligon> ]\n[ <Poligon>, <Poligon> ]
IntersectPath.Syntax3D=[ <Dreaptă>, <Poligon> ]\n[ <Poligon>, <Poligon> ]\n[ <Plan>, <Poligon> ]\n[ <Plan>, <Quadric> ]
Intersection=Intersecţie
Intersection.Syntax=[ <Listă>, <Listă> ]
InverseBeta.Syntax=[ <Alpha>, <Beta>, <Probabilitate> ]
InverseBinomial=BinomInvers
InverseBinomial.Syntax=[ <Număr de încercări>, <Probabilitatea de succes>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Probabilitatea de succes>, <Număr Succese> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Probabilitatea de succes>, <Număr Succese> ]
InverseCauchy=CauchyInverse
InverseCauchy.Syntax=[ <Mediană>, <Scală>, <Probabilitate> ]
InverseChiSquared=ChiPătratInvers
InverseChiSquared.Syntax=[ <Grad de libertate>, <Probabilitate> ]
InverseExponential=InversExponențial
InverseExponential.Syntax=[ <Lambda>, <Probabilitate> ]
InverseFDistribution=DistribuțieFInversă
InverseFDistribution.Syntax=[ <Număăator Grade de Libertate>, <Numitor Grade de Libertate>, <Probabilitate> ]
InverseGamma=GammaInvers
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Probabilitate> ]
InverseHyperGeometric=InversHiperGeometric
InverseHyperGeometric.Syntax=[ <Dimensiune Populație>, <Număr Succese>, <Dimensiune Mostră>, <Probabilitate> ]
InverseLaplace=LaplaceInvers
InverseLaplace.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]\n[ <Funcţie>, <variabilă>, <variabilă> ]
InverseLogNormal=InversLogNormal
InverseLogNormal.Syntax=[ <Medie>, <Deviația Standard>, <Probabilitate> ]
InverseLogistic=LogisticăInversă
InverseLogistic.Syntax=[ <Medie>, <Scală>, <Probabilitate> ]
InverseNormal=NormalaInversă
InverseNormal.Syntax=[ <Medie>, <Deviația Standard>, <Cumulative Probability> ]
InversePascal=PascalInvers
InversePascal.Syntax=[ <Număr de succese>, <Probabilitate de succes>, <Probabilitate> ]
InversePoisson=PoissonInvers
InversePoisson.Syntax=[ <Medie>, <Probabilitate> ]
InverseTDistribution=DistribuțieTInversă
InverseTDistribution.Syntax=[ <Grad de libertate>, <Probabilitate> ]
InverseWeibull=WeibullInvers
InverseWeibull.Syntax=[ <Formă>, <Scală>, <Probabilitate> ]
InverseZipf=ZipfInvers
InverseZipf.Syntax=[ <Numărul elementelor>, <Exponent>, <Probabilitate> ]
Invert=Inversă
Invert.Syntax=[ <Matrice> ]\n[ <Funcţie> ]
IsFactored.Syntax=[ <Polinomial> ]
IsInRegion=EsteÎnDomeniu
IsInRegion.Syntax=[ <Punct>, <Regiune> ]
IsInteger=EsteÎntreg
IsInteger.Syntax=[ <Număr> ]
IsPrime=EstePrim
IsPrime.Syntax=[ <Număr> ]
IsTangent.Syntax=[ <Dreaptă>, <Conică> ]
IsVertexForm.Syntax=[ <Funcţie> ]
Iteration=Iteraţie
Iteration.Syntax=[ <Funcţie>, <Valuare iniţială>, <Number of Iterations> ]\n[ <expresie>, <Variabile>, <Start Values>, <Count> ]
IterationList=ListăIteraţie
IterationList.Syntax=[ <Funcţie>, <Valuare iniţială>, <Number of Iterations> ]\n[ <expresie>, <Variabile>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <Funcţie>, <Valuare iniţială>, <Number of Iterations> ]
Join=Uneşte
Join.Syntax=[ <Listă de Liste> ]\n[ <Listă>, <Listă>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matrice> ]
KeepIf=MenţineCondiţie
KeepIf.Syntax=[ <Condiţie>, <Listă> ]\n[ <Condiţie>, <variabilă>, <Listă> ]
LCM=CMMMC
LCM.Syntax=[ <Listă de numere> ]\n[ <Număr>, <Număr> ]
LCM.SyntaxCAS=[ <Listă de numere> ]\n[ <Listă polinoame> ]\n[ <Număr>, <Număr> ]\n[ <Polinomial>, <Polinomial> ]
LUDecomposition.Syntax=[ <Matrice> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Obiect> ]\n[ <Obiect>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]\n[ <Funcţie>, <variabilă>, <variabilă> ]
Last=Ultimul
Last.Syntax=[ <Listă> ]\n[ <Text> ]\n[ <Listă>, <Numărul elementelor> ]\n[ <Text>, <Numărul elementelor> ]
Last.SyntaxCAS=[ <Listă> ]\n[ <Listă>, <Numărul elementelor> ]
LeftSide=MembruStânga
LeftSide.Syntax=[ <Ecuaţie> ]
LeftSide.SyntaxCAS=[ <Ecuaţie> ]\n[ <Listă ecuaţii> ]\n[ <Listă ecuaţii>, <Index> ]
LeftSum=SumăStânga
LeftSum.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Număr de dreptunghiuri> ]
Length=Lungime
Length.Syntax=[ <Obiect> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <Punct iniţial>, <Punct final> ]\n[ <Curbă>, <Valoare iniţială t>, <Valoare finală t> ]\n[ <Curbă>, <Punct iniţial>, <Punct final> ]
Length.SyntaxCAS=[ <Listă> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <variabilă>, <x-valuare iniţiala>, <x-valuare finală> ]
LetterToUnicode=LiterăUnicod
LetterToUnicode.Syntax=[ <Literă> ]
Limit=Limită
Limit.Syntax=[ <Funcţie>, <Valoare> ]
Limit.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabilă>, <Valoare> ]
LimitAbove=LimităSuperioară
LimitAbove.Syntax=[ <Funcţie>, <Valoare> ]
LimitAbove.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabilă>, <Valoare> ]
LimitBelow=LimităInferioară
LimitBelow.Syntax=[ <Funcţie>, <Valoare> ]
LimitBelow.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabilă>, <Valoare> ]
Line=Dreaptă
Line.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Dreaptă Paralelă> ]\n[ <Punct>, <Vector Direcţie> ]
LineBisector=Mediatoare
LineBisector.Syntax=[ <Segment> ]\n[ <Punct>, <Punct> ]
LineBisector.Syntax3D=[ <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
LineGraph.Syntax=[ <Listă coordonate-x>, <Listă coordonate-y> ]
Locus=LocGeometric
Locus.Syntax=[ <Punct Origine Curbă Locus>, <Punct> ]\n[ <Punct Origine Curbă Locus>, <Cursor> ]\n[ <Pantă>, <Punct> ]\n[ <f(x y)>, <Punct> ]
LocusEquation=EcuațieLocus
LocusEquation.Syntax=[ <Locus> ]\n[ <Locus Point>, <Punct mobil> ]\n[ <Expresie  booleană>, <Punct mobil> ]
LogNormal.Syntax=[ <Medie>, <Deviația Standard>, <Valoare variabilă> ]\n[ <Medie>, <Deviația Standard>, <Valoare variabilă>, <Boolean Cumulat>  ]\n[ <Medie>, <Deviația Standard>, x, <Boolean Cumulat> ]
Logistic.Syntax=[ <Medie>, <Scală>, <Valoare variabilă> ]\n[ <Medie>, <Scală>, <Valoare variabilă>, <Boolean Cumulat>  ]\n[ <Medie>, <Scală>, x, <Boolean Cumulat> ]
LowerSum=SumăInferioară
LowerSum.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Număr de dreptunghiuri> ]
MatrixPlot=MatricePlot
MatrixRank=RangMatrice
MatrixRank.Syntax=[ <Matrice> ]
Max.Syntax=[ <Interval> ]\n[ <Număr>, <Număr> ]\n[ <Listă> ]\n[ <Lista de date>, <Listă de frecvențe> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
Max.SyntaxCAS=[ <Listă> ]\n[ <Interval> ]\n[ <Număr>, <Număr> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Lista de date>, <Listă de frecvențe> ]
Maximize=GăseşteMaxim
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=Medie
Mean.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
MeanX=MedieX
MeanX.Syntax=[ <Listă de puncte> ]
MeanY=MedieY
MeanY.Syntax=[ <Listă de puncte> ]
Median=Mediană
Median.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
Median.SyntaxCAS=[ <Listă de numere> ]
Midpoint=Mijloc
Midpoint.Syntax=[ <Segment> ]\n[ <Conică> ]\n[ <Interval> ]\n[ <Punct>, <Punct> ]
Min.Syntax=[ <Interval> ]\n[ <Număr>, <Număr> ]\n[ <Listă> ]\n[ <Lista de date>, <Listă de frecvențe> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
Min.SyntaxCAS=[ <Listă> ]\n[ <Interval> ]\n[ <Număr>, <Număr> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Lista de date>, <Listă de frecvențe> ]
MinimalPolynomial.Syntax=[ <Matrice> ]
Minimize=GăseşteMinim
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree=SpanningTreeMinim
MinimumSpanningTree.Syntax=[ <Listă de puncte> ]
Mirror=Reflexie
Mirror.Syntax=[ <Obiect>, <Punct> ]\n[ <Obiect>, <Dreaptă> ]\n[ <Obiect>, <Cerc> ]
Mirror.Syntax3D=[ <Obiect>, <Punct> ]\n[ <Obiect>, <Dreaptă> ]\n[ <Obiect>, <Plan> ]\n[ <Obiect>, <Cerc> ]
MixedNumber=NumărFracționar
MixedNumber.SyntaxCAS=[ <Număr> ]
Mod=Rest
Mod.Syntax=[ <Deîmpărțit>, <Divizor> ]\n[ <Deîmpărțit Polinomial>, <Divizor Polinomial> ]
Mode=Modul
Mode.Syntax=[ <Listă de numere> ]
ModularExponent.Syntax=[ <Număr>, <Număr>, <Număr> ]
NDerivative.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <Ordinul> ]
NIntegral.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <x-valuare iniţiala>, <Start y-Value>, <x-valuare finală> ]
NIntegral.SyntaxCAS=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]\n[ <Funcţie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
NInvert.Syntax=[ <Funcţie> ]
NSolutions=NSoluții
NSolutions.Syntax=[ <Ecuaţie> ]
NSolutions.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Ecuaţie>, <Variabilă = valoare iniţială> ]\n[ <Listă ecuaţii>, <Listă variabile> ]
NSolve=NRezolvă
NSolve.Syntax=[ <Ecuaţie> ]
NSolve.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Ecuaţie>, <Variabilă = valoare iniţială> ]\n[ <Listă ecuaţii>, <Listă variabile> ]
NSolveODE=NRezolvareEcuațieDiferențialăOrdinară
NSolveODE.Syntax=[ <Listă de derivate>, <x iniţial>, <Listă de coordonate y iniţiale>, <x final> ]
Name=Nume
Name.Syntax=[ <Obiect> ]
Net.Syntax=[ <Poliedru>, <Număr> ]\n[ <Poliedru>, <Număr>, <Faţă>, <Latură>, <Latură>, ... ]
NextPrime=PrimUrmător
NextPrime.Syntax=[ <Număr> ]
Normal=Normală
Normal.Syntax=[ <Medie>, <Deviația Standard>, <Valoare variabilă> ]\n[ <Medie>, <Deviația Standard>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Medie>, <Deviația Standard>, x, <Boolean Cumulat> ]
NormalQuantilePlot=SchițăCuantilăNormal
NormalQuantilePlot.Syntax=[ <Listă de date raw> ]
Normalize=Normalizează
Normalize.Syntax=[ <Listă de numere> ]\n[ <Listă de puncte> ]
Numerator=Numărător
Numerator.Syntax=[ <Număr> ]\n[ <Funcţie> ]
Numerator.SyntaxCAS=[ <expresie> ]
Numeric.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <număr cifre> ]
Object=Obiect
Object.Syntax=[ <Nume de obiect ca text> ]
Octahedron=Octaedru
Octahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
Ordinal.Syntax=[ <Întreg> ]
OrdinalRank=RangOrdinal
OrdinalRank.Syntax=[ <Listă> ]
OrthogonalLine=Perpendiculară
OrthogonalLine.Syntax=[ <Punct>, <Dreaptă> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punct>, <Dreaptă> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Vector> ]\n[ <Punct>, <Plan> ]\n[ <Dreaptă>, <Dreaptă> ]\n[ <Punct>, <Direcție>, <Direcție> ]\n[ <Punct>, <Dreaptă>, <Context> ]
OrthogonalPlane=Planperpendicular
OrthogonalPlane.Syntax=[ <Punct>, <Dreaptă> ]\n[ <Punct>, <Vector> ]
OrthogonalVector=VectorPerpendicular
OrthogonalVector.Syntax=[ <Dreaptă> ]\n[ <Segment> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Dreaptă> ]\n[ <Segment> ]\n[ <Vector> ]\n[ <Plan> ]
OrthogonalVector.SyntaxCAS=[ <Vector> ]
OsculatingCircle=CercOsculator
OsculatingCircle.Syntax=[ <Punct>, <Obiect> ]
PMCC=CoeficientCorelaţie
PMCC.Syntax=[ <Listă de puncte> ]\n[ <Listă coordonate-x>, <Listă coordonate-y> ]
Pan=Mută
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=Parabolă
Parabola.Syntax=[ <Punct>, <Dreaptă> ]
Parameter=Parametru
Parameter.Syntax=[ <Parabolă> ]
ParametricDerivative=DerivataParametrică
ParametricDerivative.Syntax=[ <Curbă> ]
ParseToFunction=ConverteşteÎnFuncţie
ParseToFunction.Syntax=[ <Funcţie>, <String> ]
ParseToNumber=ConverteşteÎnNumăr
ParseToNumber.Syntax=[ <Număr>, <String> ]
PartialFractions=FracţiiParţiale
PartialFractions.Syntax=[ <Funcţie> ]
PartialFractions.SyntaxCAS=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]
Pascal.Syntax=[ <Număr de succese>, <Probabilitate de succes> ]\n[ <Număr de succese>, <Probabilitate de succes>, <Boolean Cumulat> ]\n[ <Număr de succese>, <Probabilitate de succes>, <Valoare variabilă>, <Boolean Cumulat> ]
Pascal.SyntaxCAS=[ <Număr de succese>, <Probabilitate de succes>, <Valoare variabilă>, <Boolean Cumulat> ]
PathParameter=ParametruCale
PathParameter.Syntax=[ <Punct pe cale> ]
Payment=Plată
Payment.Syntax=[ <Rată>, <Număr de puncte>, <Valuare prezentă>, <Viitoare valuare (opţional)>, <Tip (opţional)> ]
PenStroke.Syntax=[ <Punct>, ..., <Punct> ]
Percentile=FuncțieRepartiție
Percentile.Syntax=[ <Listă de numere>, <Procent> ]
Perimeter=Perimetru
Perimeter.Syntax=[ <Poligon> ]\n[ <Conică> ]\n[ <Locus> ]
Periods=Perioade
Periods.Syntax=[ <Rată>, <Plată>, <Valuare prezentă>, <Viitoare valuare (opţional)>, <Tip (opţional)> ]
PieChart.Syntax=[ <Listă de frecvențe> ]\n[ <Listă de frecvențe>, <Center>, <Rază> ]
Plane=Plan
Plane.Syntax=[ <Poligon> ]\n[ <Conică> ]\n[ <Punct>, <Plan> ]\n[ <Punct>, <Dreaptă> ]\n[ <Dreaptă>, <Dreaptă> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Vector>, <Vector> ]
PlaneBisector=PlanBisector
PlaneBisector.Syntax=[ <Segment> ]\n[ <Punct>, <Punct> ]
PlaySound=RedăSunetul
PlaySound.Syntax=[ <URL> ]\n[ <Boolean> ]\n[ <Funcţie>, <Valoare minimă>, <Valoare maximă> ]\n[ <Funcţie>, <Valoare minimă>, <Valoare maximă>, <Rată eşantionare>, <Adâncime eşantion> ]
PlotSolve.Syntax=[ <Ecuație în x> ]
Point=Punct
Point.Syntax=[ <Obiect> ]\n[ <Obiect>, <Parametru> ]\n[ <Punct>, <Vector> ]\n[ <Listă> ]
PointIn=PunctÎn
PointIn.Syntax=[ <Regiune> ]
PointList=ListăPuncte
PointList.Syntax=[ <Listă> ]
Poisson.Syntax=[ <Medie> ]\n[ <Medie>, <Boolean Cumulat> ]\n[ <Medie>, <Valoare variabilă>, <Boolean Cumulat> ]
Poisson.SyntaxCAS=[ <Medie>, <Valoare variabilă>, <Boolean Cumulat> ]
Polar=Polară
Polar.Syntax=[ <Punct>, <Conică> ]\n[ <Dreaptă>, <Conică> ]
PolyLine=Liniepoligonală
PolyLine.Syntax=[ <Listă de puncte> ]\n[ <Punct>, ..., <Punct> ]
Polygon=Poligon
Polygon.Syntax=[ <Listă de puncte> ]\n[ <Punct>, ..., <Punct> ]\n[ <Punct>, <Punct>, <Număr> ]
Polygon.Syntax3D=[ <Listă de puncte> ]\n[ <Punct>, ..., <Punct> ]\n[ <Punct>, <Punct>, <Număr> ]\n[ <Punct>, <Punct>, <Număr>, <Direcție> ]
Polynomial=Polinom
Polynomial.Syntax=[ <Funcţie> ]\n[ <Listă de puncte> ]
Polynomial.SyntaxCAS=[ <Funcţie> ]\n[ <Funcţie>, <variabilă> ]
PresentValue=ValuarePrezentă
PresentValue.Syntax=[ <Rată>, <Număr de puncte>, <Plată>, <Viitoare valuare (opţional)>, <Tip (opţional)> ]
PreviousPrime=PrimPrecedent
PreviousPrime.Syntax=[ <Număr> ]
PrimeFactors=FactoriPrimi
PrimeFactors.Syntax=[ <Număr> ]
Prism=Prismă
Prism.Syntax=[ <Poligon>, <Punct> ]\n[ <Poligon>, <Valoare înălţime> ]\n[ <Punct>, <Punct>, ... ]
Product=Produs
Product.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Numărul elementelor> ]\n[ <Listă de numere>, <Listă de frecvențe> ]\n[ <expresie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
Product.SyntaxCAS=[ <Listă Expresii> ]\n[ <expresie>, <variabilă>, <Indice de început>, <Index Final> ]
Prove=Demonstrează
Prove.Syntax=[ <Expresie  booleană> ]
ProveDetails=DetaliiDemonstraţie
ProveDetails.Syntax=[ <Expresie  booleană> ]
Pyramid=Piramidă
Pyramid.Syntax=[ <Poligon>, <Punct> ]\n[ <Poligon>, <Înălţime> ]\n[ <Punct>, <Punct>, <Punct>, <Punct>, ... ]
Q1=Q1
Q1.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
Q3=Q3
Q3.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
QRDecomposition.Syntax=[ <Matrice> ]
QuadricSide=Latură
QuadricSide.Syntax=[ <Quadric> ]
RSquare=RPătrat
RSquare.Syntax=[ <Listă de puncte>, <Funcţie> ]
Radius=Rază
Radius.Syntax=[ <Conică> ]
Random=Aleator
Random.Syntax=[ <Întreg Minim>, <Întreg Maxim> ]\n[ <Întreg Minim>, <Întreg Maxim>, <Număr eşantioane> ]\n[ <Întreg Minim>, <Întreg Maxim>, <Boolean Fix> ]
Random.SyntaxCAS=[ <Întreg Minim>, <Întreg Maxim> ]\n[ <Întreg Minim>, <Întreg Maxim>, <Număr eşantioane> ]
RandomBinomial=AleatorBinomial
RandomBinomial.Syntax=[ <Număr de încercări>, <Probabilitate> ]
RandomDiscrete.Syntax=[ <Listă>, <Listă> ]
RandomElement=ElementAleatoriu
RandomElement.Syntax=[ <Listă> ]
RandomNormal=AleatorNormal
RandomNormal.Syntax=[ <Medie>, <Deviația Standard> ]
RandomPointIn.Syntax=[ <Regiune> ]\n[ <Listă de puncte> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatorPoisson
RandomPoisson.Syntax=[ <Medie> ]
RandomPolynomial=PolinomAleator
RandomPolynomial.Syntax=[ <Grad>, <Minim pentru Coeficienți>, <Maxim pentru Coeficienți> ]
RandomPolynomial.SyntaxCAS=[ <Grad>, <Minim pentru Coeficienți>, <Maxim pentru Coeficienți> ]\n[ <variabilă>, <Grad>, <Minim pentru Coeficienți>, <Maxim pentru Coeficienți> ]
RandomUniform=AleatorUniform
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Număr eşantioane> ]
Rate=Rată
Rate.Syntax=[ <Număr de puncte>, <Plată>, <Valuare prezentă>, <Viitoare valuare (opţional)>, <Tip (opţional)>, <Presupunere (opţional)> ]
Rationalize=Raționalizare
Rationalize.SyntaxCAS=[ <Număr> ]
Ray=Semidreaptă
Ray.Syntax=[ <Punct iniţial>, <Punct> ]\n[ <Punct iniţial>, <Vector Direcţie> ]
ReadText.Syntax=[ <Text> ]
RectangleSum=SumăDreptunghi
RectangleSum.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Număr de dreptunghiuri>, <Poziție inițială dreptunghi> ]
ReducedRowEchelonForm=MatriceEșalonatăRedusă
ReducedRowEchelonForm.Syntax=[ <Matrice> ]
Relation=Relaţie
Relation.Syntax=[ <Listă> ]\n[ <Obiect>, <Obiect> ]
RemovableDiscontinuity.Syntax=[ <Funcţie> ]
Remove=Scoate
Remove.Syntax=[ <Listă>, <Listă> ]
RemoveUndefined=EliminăNedefinire
RemoveUndefined.Syntax=[ <Listă> ]
Rename=Redenumire
Rename.Syntax=[ <Obiect>, <Nume> ]
Repeat=Repeatare
Repeat.Syntax=[ <Număr>, <Comandă de scripting>, <Comandă de scripting>, ... ]
ReplaceAll.Syntax=[ <Text>, <Text to Match>, <Text to Replace> ]
ResidualPlot=PuncteReziduale
ResidualPlot.Syntax=[ <Listă de puncte>, <Funcţie> ]
Reverse=Inversare
Reverse.Syntax=[ <Listă> ]
RightSide=MembruDrept
RightSide.Syntax=[ <Ecuaţie> ]
RightSide.SyntaxCAS=[ <Ecuaţie> ]\n[ <Listă ecuaţii> ]\n[ <Listă ecuaţii>, <Index> ]
RigidPolygon=PoligonRigid
RigidPolygon.Syntax=[ <Poligon> ]\n[ <Poligon>, <Decalaj x>, <Decalaj y> ]\n[ <Punct Liber>, ..., <Punct Liber> ]
Root=Rădăcină
Root.Syntax=[ <Polinomial> ]\n[ <Funcţie>, <Valoare iniţială-x> ]\n[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
Root.SyntaxCAS=[ <Polinomial> ]
RootList=ListăRădăcini
RootList.Syntax=[ <Listă> ]
RootMeanSquare=MediePătratică
RootMeanSquare.Syntax=[ <Listă de numere> ]
Roots=Rădăcini
Roots.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală> ]
Rotate=Rotaţie
Rotate.Syntax=[ <Obiect>, <Unghi> ]\n[ <Obiect>, <Unghi>, <Punct> ]
Rotate.Syntax3D=[ <Obiect>, <Unghi> ]\n[ <Obiect>, <Unghi>, <Punct> ]\n[ <Obiect>, <Unghi>, <Axa de rotaţie> ]\n[ <Obiect>, <Unghi>, <Punct pe axă>, <Direcţia sau planul axei> ]
RotateText=RoteşteText
RotateText.Syntax=[ <Text>, <Unghi> ]
Row=Linie
Row.Syntax=[ <Celulă din foaia de calcul> ]
RunClickScript=ExecutaScriptClick
RunClickScript.Syntax=[ <Obiect> ]
RunUpdateScript=ExecutaScriptUpdate
RunUpdateScript.Syntax=[ <Obiect> ]
SDX.Syntax=[ <Listă de puncte> ]
SDY.Syntax=[ <Listă de puncte> ]
SVD.Syntax=[ <Matrice> ]
SXX.Syntax=[ <Listă de numere> ]\n[ <Listă de puncte> ]
SXY.Syntax=[ <Listă de puncte> ]\n[ <Listă de numere>, <Listă de numere> ]
SYY.Syntax=[ <Listă de puncte> ]
Sample=Eşantion
Sample.Syntax=[ <Listă>, <Mărime> ]\n[ <Listă>, <Mărime>, <Cu înlocuire> ]
SampleSD=MostrăDeviațieStandard
SampleSD.SyntaxCAS=[ <Listă de numere> ]
SampleSDX=MostrăDeviațieStandardX
SampleSDX.Syntax=[ <Listă de puncte> ]
SampleSDY=MostrăDeviațieStandardY
SampleSDY.Syntax=[ <Listă de puncte> ]
SampleVariance=MostrăVariație
SampleVariance.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
SampleVariance.SyntaxCAS=[ <Listă de numere> ]
ScientificText=NotațieȘtiințifică
ScientificText.Syntax=[ <Număr> ]\n[ <Număr>, <Precizie> ]
SecondAxis=AxaMică
SecondAxis.Syntax=[ <Conică> ]
SecondAxisLength=LungimeSemiaxaMică
SecondAxisLength.Syntax=[ <Conică> ]
Sector.Syntax=[ <Conică>, <Punct>, <Punct> ]\n[ <Conică>, <Valoare parametru>, <Valoare parametru> ]
Segment.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Lungime> ]
SelectObjects=AlegeObiect
SelectObjects.Syntax=[ ]\n[ <Obiect>, <Obiect>, ... ]
SelectedElement=ElementSelectat
SelectedElement.Syntax=[ <Listă> ]
SelectedIndex=IndiceSelectat
SelectedIndex.Syntax=[ <Listă> ]
Semicircle=Semicerc
Semicircle.Syntax=[ <Punct>, <Punct> ]
Sequence=Secvenţă
Sequence.Syntax=[ <Valuare finală> ]\n[ <Valuare iniţială>, <Valuare finală> ]\n[ <Valuare iniţială>, <Valuare finală>, <Increment> ]\n[ <expresie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]\n[ <expresie>, <variabilă>, <Valuare iniţială>, <Valuare finală>, <Increment> ]
SetActiveView=SeteazăFereastraActivă
SetActiveView.Syntax=[ <Vizualizare> ]\n[ <Plan> ]
SetAxesRatio=SeteazăRaportAxe
SetAxesRatio.Syntax=[ <Număr>, <Număr> ]
SetAxesRatio.Syntax3D=[ <Număr>, <Număr> ]\n[ <Număr>, <Număr>, <Număr> ]
SetBackgroundColor=SeteazăCuloareFundal
SetBackgroundColor.Syntax=[ <Culoare> ]\n[ <Obiect>, <Culoare> ]\n[ <Roşu>, <Verde>, <Albastru> ]\n[ <Obiect>, <Roşu>, <Verde>, <Albastru> ]
SetCaption=SeteazăLegendă
SetCaption.Syntax=[ <Obiect>, <Text> ]
SetColor=SeteazăCuloare
SetColor.Syntax=[ <Obiect>, <Culoare> ]\n[ <Obiect>, <Roşu>, <Verde>, <Albastru> ]
SetConditionToShowObject=SeteazăCondiţieArătareObiect
SetConditionToShowObject.Syntax=[ <Obiect>, <Condiţie> ]
SetConstructionStep.Syntax=[ <Număr> ]
SetCoords=SeteazăCoordonate
SetCoords.Syntax=[ <Obiect>, <x>, <y> ]\n[ <Obiect>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Obiect>, <Număr> ]\n[ <Segment>, <Număr>, <Număr>]
SetDynamicColor=SeteazăCuloareDinamică
SetDynamicColor.Syntax=[ <Obiect>, <Roşu>, <Verde>, <Albastru> ]\n[ <Obiect>, <Roşu>, <Verde>, <Albastru>, <Opacitate> ]
SetFilling=DefinireUmplere
SetFilling.Syntax=[ <Obiect>, <Număr> ]
SetFixed=SeteazăFixat
SetFixed.Syntax=[ <Obiect>, <true | false> ]\n[ <Obiect>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Obiect>, <Imagine> ]\n[ <Obiect>, <Text> ]
SetLabelMode=SeteazăStilEtichetă
SetLabelMode.Syntax=[ <Obiect>, <Număr> ]
SetLayer=SeteazăStrat
SetLayer.Syntax=[ <Obiect>, <Strat> ]
SetLevelOfDetail.Syntax=[ <Suprafață>, <Grad detaliere> ]
SetLineStyle=SeteazăStilDreaptă
SetLineStyle.Syntax=[ <Obiect>, <Număr> ]
SetLineThickness=SeteazăGrosimeDreaptă
SetLineThickness.Syntax=[ <Obiect>, <Număr> ]
SetPerspective=SetarePerspectivă
SetPerspective.Syntax=[ <Text> ]
SetPointSize=SeteazăMărimePunct
SetPointSize.Syntax=[ <Obiect>, <Număr> ]
SetPointStyle=SeteazăStilPunct
SetPointStyle.Syntax=[ <Punct>, <Număr> ]
SetSeed=DefinireÎnceputAleatoriu
SetSeed.Syntax=[ <Întreg> ]
SetSpinSpeed=SetareVitezăRotire
SetSpinSpeed.Syntax=[ <Număr> ]
SetTooltipMode=SeteazăModSugestii
SetTooltipMode.Syntax=[ <Obiect>, <Număr> ]
SetTrace=DefinireUrmă
SetTrace.Syntax=[ <Obiect>, <true | false> ]
SetValue=SeteazăValoare
SetValue.Syntax=[ <Boolean>, <0|1> ]\n[ <Obiect>, <Obiect> ]\n[ <Listă>, <Număr>, <Obiect> ]
SetViewDirection=SetareDirecţieVizualizare
SetViewDirection.Syntax=[ ]\n[ <Direcție> ]\n[ <Direcție>, <Boolean animate> ]
SetVisibleInView=SeteazăVizibilÎnFereastra
SetVisibleInView.Syntax=[ <Obiect>, <Fereastra numărul 1|2>, <Boolean> ]
Shear=Foarfece
Shear.Syntax=[ <Obiect>, <Dreaptă>, <Raţie> ]
ShortestDistance=DistanţaMinimă
ShortestDistance.Syntax=[ <Listă de segmente>, <Punct iniţial>, <Punct final>, <Boolean ponderată> ]
ShowAxes=AratăAxe
ShowAxes.Syntax=[]\n[ <Boolean> ]\n[ <Vizualizare>, <Boolean> ]
ShowGrid=AratăGrilă
ShowGrid.Syntax=[]\n[ <Boolean> ]\n[ <Vizualizare>, <Boolean> ]
ShowLabel=AratăEtichetă
ShowLabel.Syntax=[ <Obiect>, <Boolean> ]
ShowLayer=AratăStrat
ShowLayer.Syntax=[ <Număr> ]
Shuffle=Amestecă
Shuffle.Syntax=[ <Listă> ]
SigmaXX.Syntax=[ <Listă de puncte> ]\n[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
SigmaXY.Syntax=[ <Listă de puncte> ]\n[ <Listă coordonate-x>, <Listă coordonate-y> ]
SigmaYY.Syntax=[ <Listă de puncte> ]
Simplify=Simplificare
Simplify.Syntax=[ <Funcţie> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Funcţie> ]
Slider=Cursor
Slider.Syntax=[ <Min>, <Max>, <Increment>, <Viteză>, <Lăţime>, <Este unghi>, <Orizontal>, <Animaţie>, <Random> ]
Slope=Pantă
Slope.Syntax=[ <Dreaptă> ]
SlopeField=CâmpVectorial
SlopeField.Syntax=[ <f(x y)> ]\n[ <f(x y)>, <Număr n> ]\n[ <f(x y)>, <Număr n>, <Multiplicator Lungime a> ]\n[ <f(x y)>, <Număr n>, <Multiplicator Lungime a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=CreareGrafic
SlowPlot.Syntax=[ <Funcţie> ]\n[ <Funcţie>, <Boolean Repeat> ]
Solutions=Soluţie
Solutions.Syntax=[ <Ecuaţie> ]
Solutions.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Listă ecuaţii>, <Listă variabile> ]
Solve=Rezolvă
Solve.Syntax=[ <Ecuaţie> ]
Solve.SyntaxCAS=[ <Ecuație în x> ]\n[ <Ecuaţie>, <variabilă> ]\n[ <Listă ecuaţii>, <Listă variabile> ]\n[ <List of Parametric Equations>, <Listă variabile> ]\n[ <Ecuaţie>, <variabilă>, <List of assumptions> ]
SolveCubic=RezolvăGradulTrei
SolveCubic.SyntaxCAS=[ <Polinom de gradul trei> ]
SolveODE=RezolvareEcuațieDiferențialăOrdinară
SolveODE.Syntax=[ <f'(x y)> ]\n[ <f'(x y)>, <Punct pe f> ]\n[ <f'(x y)>, <x iniţial>, <y iniţial>, <x final>, <Pas> ]\n[ <y'>, <x'>, <x iniţial>, <y iniţial>, <t final>, <Pas> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x iniţial>, <y iniţial>, <y' iniţial>, <x final>, <Pas> ]
SolveODE.SyntaxCAS=[ <Ecuaţie> ]\n[ <Ecuaţie>, <Punct(e) pe f> ]\n[ <Ecuaţie>, <Punct(e) pe f>, <Punct(e) pe f'> ]\n[ <Ecuaţie>, <Variabilă Dependentă>, <Variabilă Independentă>, <Punct(e) pe f> ] \n[ <Ecuaţie>, <Variabilă Dependentă>, <Variabilă Independentă>, <Punct(e) pe f>, <Punct(e) pe f'> ]
SolveQuartic=RezolvăGradulPatru
SolveQuartic.SyntaxCAS=[ <Poinom de gradul patru> ]
Sort=Sortează
Sort.Syntax=[ <Listă> ]\n[ <Valori>, <Chei> ]
Spearman.Syntax=[ <Listă de puncte> ]\n[ <Listă de numere>, <Listă de numere> ]
Sphere=Sferă
Sphere.Syntax=[ <Punct>, <Rază> ]\n[ <Punct>, <Punct> ]
Spline.Syntax=[ <Listă de puncte> ]\n[ <Listă de puncte>, <Order ≥ 3> ]\n[ <Listă de puncte>, <Order ≥ 3>, <Weight Function> ]
Split.Syntax=[ <Text>, <List of Texts to split on> ]
StartAnimation=ÎncepeAnimaţie
StartAnimation.Syntax=[ ]\n[ <Boolean> ]\n[ <Cursor sau punct>, <Cursor sau punct>, ... ]\n[ <Cursor sau punct>, <Cursor sau punct>, ..., <Boolean> ]
StartRecord=StartMemorare
StartRecord.Syntax=[ ]\n[ <Boolean> ]
StemPlot=DiagramăStem
StemPlot.Syntax=[ <Listă> ]\n[ <Listă>, <Ajustare -1|0|1> ]
StepGraph=DiagramăFierăstrău
StepGraph.Syntax=[ <Listă de puncte> ]\n[ <Listă de puncte>, <Join Boolean> ]\n[ <Listă coordonate-x>, <Listă coordonate-y> ]\n[ <Listă de puncte>, <Join Boolean>, <Stil Puncte> ]\n[ <Listă coordonate-x>, <Listă coordonate-y>, <Join Boolean> ]\n[ <Listă coordonate-x>, <Listă coordonate-y>, <Join Boolean>, <Stil Puncte> ]
StickGraph=GraficBatoane
StickGraph.Syntax=[ <Listă de puncte> ]\n[ <Listă de puncte>, <Boolean orizontal> ]\n[ <Listă coordonate-x>, <Listă coordonate-y> ]\n[ <Listă coordonate-x>, <Listă coordonate-y>, <Boolean orizontal> ]
Stretch=Întinde
Stretch.Syntax=[ <Obiect>, <Vector> ]\n[ <Obiect>, <Dreaptă>, <Raţie> ]
Substitute=Substituie
Substitute.SyntaxCAS=[ <expresie>, <Listă substituţie> ]\n[ <expresie>, <de la>, <la> ]
Sum=Sumă
Sum.Syntax=[ <Listă> ]\n[ <Listă>, <Numărul elementelor> ]\n[ <Listă>, <Listă de frecvențe> ]\n[ <expresie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
Sum.SyntaxCAS=[ <Listă> ]\n[ <expresie>, <variabilă>, <Valuare iniţială>, <Valuare finală> ]
SumSquaredErrors=SumăEroriPătratice
SumSquaredErrors.Syntax=[ <Listă de puncte>, <Funcţie> ]
SurdText=TextMatematic
SurdText.Syntax=[ <Punct> ]\n[ <Număr> ]\n[ <Număr>, <Listă> ]
Surface=Suprafaţa
Surface.Syntax=[ <Funcţie>, <Unghi> ]\n[ <Curbă>, <Unghi>, <Dreaptă> ]\n[ <expresie>, <expresie>, <expresie>, <variabila parametru 1>, <Valuare iniţială>, <Valuare finală>, <variabila parametru 2>, <Valuare iniţială>, <Valuare finală> ]
TDistribution=TDistribuție
TDistribution.Syntax=[ <Grad de libertate>, <Valoare variabilă> ]\n[ <Grad de libertate>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Grad de libertate>, x, <Boolean Cumulat> ]
TDistribution.SyntaxCAS=[ <Grad de libertate>, <Valoare variabilă> ]
TMean2Estimate.Syntax=[ <Listă date mostră 1>, <Listă date mostră 2>, <Nivel de încredere>, <Agregat (true | false)> ]\n[ <Medie mostră 1>, <Deviație standard mostră 1>, <Dimensiune mostră 1>, <Medie mostră 2>, <Deviație standard mostră 2>, <Dimensiune mostră 2>, <Nivel de încredere>, <Agregat (true | false)> ]
TMeanEstimate=TMedieEstimat
TMeanEstimate.Syntax=[ <Listă date mostră>, <Nivel de încredere> ]\n[ <Medie mostră>, <Deviație standard mostră>, <Dimensiune Mostră>, <Nivel de încredere> ]
TTest.Syntax=[ <Listă date mostră>, <Medie ipotetizată>, <Coadă> ]\n[ <Medie mostră>, <Deviație standard mostră>, <Dimensiune Mostră>, <Medie ipotetizată>, <Coadă> ]
TTest2.Syntax=[ <Listă date mostră 1>, <Listă date mostră 2>, <Coadă>, <Agregat (true | false)> ]\n[ <Medie mostră 1>, <Deviație standard mostră 1>, <Dimensiune mostră 1>, <Medie mostră 2>, <Deviație standard mostră 2>, <Dimensiune mostră 2>, <Coadă>, <Agregat (true | false)> ]
TTestPaired=TTestÎmperecheat
TTestPaired.Syntax=[ <Listă date mostră 1>, <Listă date mostră 2>, <Coadă> ]
TableText=TextTabel
TableText.Syntax=[ <Listă>, <Listă>, ... ]\n[ <Listă>, <Listă>, ..., <Aliniere text> ]\n[ <Listă>, <Listă>, ..., <Aliniere text>, <Minimum Cell Width> ]\n[ <Listă>, <Listă>, ..., <Aliniere text>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Extrage
Take.Syntax=[ <Listă>, <Start Position>, <End Position> ]\n[ <Listă>, <Start Position> ]\n[ <Text>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position> ]
Take.SyntaxCAS=[ <Listă>, <Start Position> ]\n[ <Listă>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position> ]
Tangent=Tangentă
Tangent.Syntax=[ <Punct>, <Conică> ]\n[ <Punct>, <Funcţie> ]\n[ <Punct>, <Curbă> ]\n[ <Valoare-x>, <Funcţie> ]\n[ <Dreaptă>, <Conică> ]\n[ <Conică>, <Conică> ]
Tangent.SyntaxCAS=[ <Număr>, <Funcţie> ]\n[ <Punct>, <Obiect> ]
TaylorSeries=SerieTaylor
TaylorSeries.Syntax=[ <Funcţie>, <Valoare-x>, <Număr ordine> ]
TaylorSeries.SyntaxCAS=[ <expresie>, <Valoare-x>, <Număr ordine> ]\n[ <expresie>, <variabilă>, <Valoare variabilă>, <Număr ordine> ]
Tetrahedron=Tetraedru
Tetrahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direcție> ]
Text.Syntax=[ <Obiect> ]\n[ <Obiect>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Punct> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=TextÎnUnicod
TextToUnicode.Syntax=[ <Text> ]
Textfield=CăsuțăIntrare
Textfield.Syntax=[ <Obiect legat> ]
TiedRank=RangLegat
TiedRank.Syntax=[ <Listă> ]
ToBase=ÎnBaza
ToBase.Syntax=[ <Număr>, <Bază> ]
ToComplex=ÎnComplex
ToComplex.Syntax=[ <Vector> ]
ToExponential=ÎnExponențial
ToExponential.SyntaxCAS=[ <Număr complex> ]
ToPoint=ÎnPunct
ToPoint.Syntax=[ <Număr complex> ]
ToPolar=ÎnPolar
ToPolar.Syntax=[ <Număr complex> ]\n[ <Vector> ]
ToolImage=InstrumentImagine
ToolImage.Syntax=[ <Număr> ]\n[ <Număr>, <Punct> ]\n[ <Număr>, <Punct>, <Punct> ]
Top=BazaSuperioară
Top.Syntax=[ <Quadric> ]
Translate=Translaţie
Translate.Syntax=[ <Obiect>, <Vector> ]\n[ <Vector>, <Punct iniţial> ]
Transpose=Transpusă
Transpose.Syntax=[ <Matrice> ]
TrapezoidalSum=SumăTrapezoidală
TrapezoidalSum.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Număr trapeze> ]
TravelingSalesman=ComisVoiajor
TravelingSalesman.Syntax=[ <Listă de puncte> ]
TriangleCenter=CentruTriunghi
TriangleCenter.Syntax=[ <Punct>, <Punct>, <Punct>, <Număr> ]
TriangleCurve=CurbăTriunghi
TriangleCurve.Syntax=[ <Punct>, <Punct>, <Punct>, <Ecuaţie> ]
Triangular=Triunghiular
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Valoare variabilă> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Boolean Cumulat> ]
TrigCombine=CombinăTrigo
TrigCombine.Syntax=[ <expresie> ]\n[ <expresie>, <Funcție țintă> ]
TrigExpand=DezvoltăTrigo
TrigExpand.Syntax=[ <expresie> ]\n[ <expresie>, <Funcție țintă> ]
TrigExpand.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <Funcție țintă> ]\n[ <expresie>, <Funcție țintă>, <Variabilă țintă> ]\n[ <expresie>, <Funcție țintă>, <Variabilă țintă>, <Variabilă țintă> ]
TrigSimplify=SimplificăTrigo
TrigSimplify.Syntax=[ <expresie> ]
Trilinear=Triliniar
Trilinear.Syntax=[ <Punct>, <Punct>, <Punct>, <Număr>, <Număr>, <Număr> ]
TurningPoint=PunctInflexiune
TurningPoint.Syntax=[ <Polinomial> ]
TurningPoint.SyntaxCAS=[ <Funcţie> ]
Turtle=Ţestoasa
Turtle.Syntax=[]
TurtleBack=ŢestoasaÎnapoi
TurtleBack.Syntax=[ <Ţestoasa>, <Distanţa> ]
TurtleDown=ŢestoasăJos
TurtleDown.Syntax=[ <Ţestoasa> ]
TurtleForward=ŢestoasaÎnainte
TurtleForward.Syntax=[ <Ţestoasa>, <Distanţa> ]
TurtleLeft=ŢestoasaStânga
TurtleLeft.Syntax=[ <Ţestoasa>, <Unghi> ]
TurtleRight=ŢestoasaDreapta
TurtleRight.Syntax=[ <Ţestoasa>, <Unghi> ]
TurtleUp=ŢestoasăSus
TurtleUp.Syntax=[ <Ţestoasa> ]
Type.Syntax=[ <Obiect> ]
UnicodeToLetter=UnicodÎnLiteră
UnicodeToLetter.Syntax=[ <Întreg> ]
UnicodeToText=UnicodÎnText
UnicodeToText.Syntax=[ <Listă întregi> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Valoare variabilă> ]\n[ <Lower Bound>, <Upper Bound>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Lower Bound>, <Upper Bound>, x, <Boolean Cumulat> ]
Union=Uniune
Union.Syntax=[ <Listă>, <Listă> ]\n[ <Poligon>, <Poligon> ]
Unique=Unic
Unique.Syntax=[ <Listă> ]
UnitOrthogonalVector=VectorUnitatePerpendicular
UnitOrthogonalVector.Syntax=[ <Dreaptă> ]\n[ <Segment> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Dreaptă> ]\n[ <Segment> ]\n[ <Vector> ]\n[ <Plan> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector> ]
UnitVector=VectorUnitate
UnitVector.Syntax=[ <Obiect> ]
UnitVector.SyntaxCAS=[ <Vector> ]
UpdateConstruction=ActualizareConstrucţie
UpdateConstruction.Syntax=[ ]\n[ <număr de ori> ]
UpperSum=SumăSuperioară
UpperSum.Syntax=[ <Funcţie>, <x-valuare iniţiala>, <x-valuare finală>, <Număr de dreptunghiuri> ]
Variance=Varianţă
Variance.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
Vector.Syntax=[ <Punct> ]\n[ <Punct iniţial>, <Punct final> ]
Vertex=Vârf
Vertex.Syntax=[ <Conică> ]\n[ <Inequality> ]\n[ <Poligon> ]\n[ <Poligon>, <Index> ]\n[ <Segment>, <Index> ]
VerticalText=TextVertical
VerticalText.Syntax=[ <Text> ]\n[ <Text>, <Punct> ]
Volume=Volum
Volume.Syntax=[ <Corp> ]
Voronoi.Syntax=[ <Listă de puncte> ]
Weibull.Syntax=[ <Formă>, <Scală>, <Valoare variabilă> ]\n[ <Formă>, <Scală>, <Valoare variabilă>, <Boolean Cumulat> ]\n[ <Formă>, <Scală>, x, <Boolean Cumulat> ]
Weibull.SyntaxCAS=[ <Formă>, <Scală>, <Valoare variabilă> ]
ZMean2Estimate=ZMedie2Estimare
ZMean2Estimate.Syntax=[ <Listă date mostră 1>, <Listă date mostră 2>, <σ1>, <σ2>, <Nivel de încredere> ]\n[ <Medie mostră 1>, <σ1>, <Dimensiune mostră 1>, <Medie mostră 2>, <σ2>, <Dimensiune mostră 2>, <Nivel de încredere> ]
ZMean2Test=ZMedie2Test
ZMean2Test.Syntax=[ <Listă date mostră 1>, <σ1>, <Listă date mostră 2>, <σ2>, <Coadă> ]\n[ <Medie mostră 1>, <σ1>, <Dimensiune mostră 1>, <Medie mostră 2>, <σ2>, <Dimensiune mostră 2>, <Coadă> ]
ZMeanEstimate=ZMedieEstimare
ZMeanEstimate.Syntax=[ <Listă date mostră>, <σ>, <Nivel de încredere> ]\n[ <Medie mostră>, <σ>, <Dimensiune Mostră>, <Nivel de încredere> ]
ZMeanTest=ZMedieTest
ZMeanTest.Syntax=[ <Listă date mostră>, <σ>, <Medie ipotetizată>, <Coadă> ]\n[ <Medie mostră>, <σ>, <Dimensiune Mostră>, <Medie ipotetizată>, <Coadă> ]
ZProportion2Estimate=ZProporție2Estimare
ZProportion2Estimate.Syntax=[ <Proporție eșantion 1>, <Dimensiune mostră 1>, <Proporție eșantion 2>, <Dimensiune mostră 2>, <Nivel de încredere> ]
ZProportion2Test=ZProporție2Test
ZProportion2Test.Syntax=[ <Proporție eșantion 1>, <Dimensiune mostră 1>, <Proporție eșantion 2>, <Dimensiune mostră 2>, <Coadă> ]
ZProportionEstimate=ZProporțieEstimare
ZProportionEstimate.Syntax=[ <Proporțite eșantion>, <Dimensiune Mostră>, <Nivel de încredere> ]
ZProportionTest=ZProporțieTest
ZProportionTest.Syntax=[ <Proporțite eșantion>, <Dimensiune Mostră>, <Proporție ipotetică>, <Coadă> ]
Zip.Syntax=[ <expresie>, <Var1>, <Listă1>, <Var2>, <Listă2>, ... ]
Zipf.Syntax=[ <Numărul elementelor>, <Exponent> ]\n[ <Numărul elementelor>, <Exponent>, <Boolean Cumulat> ]\n[ <Numărul elementelor>, <Exponent>, <Valoare variabilă>, <Boolean Cumulat> ]
Zipf.SyntaxCAS=[ <Numărul elementelor>, <Exponent>, <Valoare variabilă>, <Boolean Cumulat> ]
ZoomIn=Apropiere
ZoomIn.Syntax=[ ]\n[ <Factor dimensiune> ]\n[ <Factor dimensiune>, <Centru> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=Îndepărtare
ZoomOut.Syntax=[ <Factor dimensiune> ]\n[ <Factor dimensiune>, <Centru> ]
mad.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
mean.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
nCr.Syntax=[ <Număr n>, <Număr r> ]
stdev.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]
stdevp.Syntax=[ <Listă de date raw> ]\n[ <Listă de numere>, <Listă de frecvențe> ]