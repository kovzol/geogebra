# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Listo>, <Listo>, ... ]
AffineRatio=AfinaRilato
AffineRatio.Syntax=[ <Punkto>, <Punkto>, <Punkto> ]
Angle=Angulo
Angle.Syntax=[ <Objekto> ]\n[ <Vektoro>, <Vektoro> ]\n[ <Rekto>, <Rekto> ]\n[ <Punkto>, <Vertico>, <Punkto> ]\n[ <Punkto>, <Vertico>, <Angulo> ]
Angle.Syntax3D=[ <Objekto> ]\n[ <Vektoro>, <Vektoro> ]\n[ <Rekto>, <Rekto> ]\n[ <Rekto>, <Ebeno> ]\n[ <Ebeno>, <Ebeno> ]\n[ <Punkto>, <Vertico>, <Punkto> ]\n[ <Punkto>, <Vertico>, <Angulo> ]\n[ <Punkto>, <Punkto>, <Punkto>, <Direkto> ]
AngularBisector=Dusekcanto
AngularBisector.Syntax=[ <Rekto>, <Rekto> ]\n[ <Punkto>, <Punkto>, <Punkto> ]
Append=Aldoni
Append.Syntax=[ <Listo>, <Objekto> ]\n[ <Objekto>, <Listo> ]
ApplyMatrix=AplikiMatricon
ApplyMatrix.Syntax=[ <Matrico>, <Objekto> ]
Arc=Arko
Arc.Syntax=[ <Cirklo>, <Punkto>, <Punkto> ]\n[ <Elipso>, <Punkto>, <Punkto> ]\n[ <Cirklo>, <Valoro de Parametro>, <Valoro de Parametro> ]\n[ <Elipso>, <Valoro de Parametro>, <Valoro de Parametro> ]
AreCollinear=Samrektaj
AreCollinear.Syntax=[ <Punkto>, <Punkto>, <Punkto> ]
AreConcurrent=Intersekcas
AreConcurrent.Syntax=[ <Rekto>, <Rekto>, <Rekto> ]
AreConcyclic=Samcirklaj
AreConcyclic.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Punkto> ]
AreCongruent.Syntax=[ <Objekto>, <Objekto> ]
AreEqual=Egalaj
AreEqual.Syntax=[ <Objekto>, <Objekto> ]
AreParallel=Paralelaj
AreParallel.Syntax=[ <Rekto>, <Rekto> ]
ArePerpendicular=EstasOrtaj
ArePerpendicular.Syntax=[ <Rekto>, <Rekto> ]
Area=Areo
Area.Syntax=[ <Koniko> ]\n[ <Plurlatero> ]\n[ <Punkto>, ..., <Punkto> ]
Assume.SyntaxCAS=[ <Kondiĉo>, <Esprimo> ]
Asymptote=Asimptoto
Asymptote.Syntax=[ <Objekto> ]
AttachCopyToView.Syntax=[ <Objekto>, <Vido 0|1|2> ]\n[ <Objekto>, <Vido 0|1|2>, <Punkto 1>, <Punkto 2>, <Ekrana Punkto 1>, <Ekrana Punkto 2> ]
Axes=Aksoj
Axes.Syntax=[ <Koniko> ]
Axes.Syntax3D=[ <Koniko> ]\n[ <Kvadriko> ]
AxisStepX=AksaPaŝoX
AxisStepX.Syntax=[ ]
AxisStepY=AksaPaŝoY
AxisStepY.Syntax=[ ]
BarChart=BastonaDiagramo
BarChart.Syntax=[ <List of Data>, <Listo de Oftoj> ]\n[ <Listo de Krudaj Datumoj>, <Width of Bars>, <Vertical Scale Factor (optional)> ]\n[ <List of Data>, <Listo de Oftoj>, <Width of Bars> ]\n[ <Komenca Valoro>, <Fina Valoro>, <List of Heights> ]\n[ <Komenca Valoro>, <Fina Valoro>, <Esprimo>, <Variablo>, <From Number>, <To Number> ]\n[ <Komenca Valoro>, <Fina Valoro>, <Esprimo>, <Variablo>, <From Number>, <To Number>, <Step Width> ]
Barycenter=Pezocentro
Barycenter.Syntax=[ <Listo de Punktoj>, <Listo de Koeficientoj> ]
Bernoulli.Syntax=[ <Probablo>, <Bulea Akumuli> ]
BetaDist.Syntax=[ <α>, <β>, <Variabla Valoro> ]\n[ <α>, <β>, <Variabla Valoro>, <Bulea Akumuli>  ]\n[ <α>, <β>, x, <Bulea Akumuli> ]
Binomial=BinomaKoeficiento
Binomial.Syntax=[ <Nombro n>, <Nombro k> ]
BinomialDist=DunomialaDistribuo
BinomialDist.Syntax=[ <Number of Trials>, <Probability of Success> ]\n[ <Number of Trials>, <Probability of Success>, <Bulea Akumuli> ]\n[ <Number of Trials>, <Probability of Success>, <List of Values> ]\n[ <Number of Trials>, <Probability of Success>, <Variabla Valoro>, <Bulea Akumuli> ]
BinomialDist.SyntaxCAS=[ <Number of Trials>, <Probability of Success>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Number of Trials>, <Probability of Success>, <List of Values> ]
Bottom=Sube
Bottom.Syntax=[ <Kvadriko> ]
BoxPlot=SkatolDiagramo
BoxPlot.Syntax=[ <yOffset>, <yScale>, <Listo de Krudaj Datumoj> ]\n[ <yOffset>, <yScale>, <Listo de Krudaj Datumoj>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <List of Data>, <Listo de Oftoj>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <Komenca Valoro>, <Q1>, <Mediano>, <Q3>, <Fina Valoro> ]
Button=Butono
Button.Syntax=[ ]\n[ <Etikedo> ]
CASLoaded.Syntax=[]
CFactor=KFaktorigi
CFactor.SyntaxCAS=[ <Esprimo> ]\n[ <Esprimo>, <Variablo> ]
CIFactor=NKFaktorigi
CIFactor.SyntaxCAS=[ <Esprimo> ]\n[ <Esprimo>, <Variablo> ]
CSolutions=KSolvoj
CSolutions.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]
CSolve=KSolvi
CSolve.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]
Cauchy.Syntax=[ <Mediano>, <Skalo>, <Variabla Valoro> ]\n[ <Mediano>, <Skalo>, <Variabla Valoro>, <Bulea Akumuli>  ]\n[ <Mediano>, <Skalo>, x, <Bulea Akumuli> ]
Cauchy.SyntaxCAS=[ <Mediano>, <Skalo>, <Variabla Valoro> ]
Cell=Ĉelo
Cell.Syntax=[ <Kolumno>, <Linio> ]
CellRange=Ĉelintervalo
CellRange.Syntax=[ <Komenca Ĉelo>, <Fina Ĉelo> ]
Center=Centro
Center.Syntax=[ <Koniko> ]
Center.Syntax3D=[ <Koniko> ]\n[ <Kvadriko> ]
CenterView=CentriVidon
CenterView.Syntax=[ <Centra Punkto> ]
Centroid=PlurlateraPezocentro
Centroid.Syntax=[ <Plurlatero> ]
CharacteristicPolynomial.Syntax=[ <Matrico> ]
Checkbox=Markobutono
Checkbox.Syntax=[ ]\n[ <Etikedo> ]\n[ <Listo> ]\n[ <Etikedo>, <Listo> ]
ChiSquared.Syntax=[ <Gradoj de libereco>, <Variabla Valoro> ]\n[ <Gradoj de libereco>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Gradoj de libereco>, x, <Bulea Akumuli> ]
ChiSquared.SyntaxCAS=[ <Gradoj de libereco>, <Variablo> ]
ChiSquaredTest.Syntax=[ <Matrico> ]\n[ <Listo>, <Listo> ]\n[ <Matrico>, <Matrico> ]\n[ <Listo>, <Listo>, <Gradoj de libereco> ]
Circle=Cirklo
Circle.Syntax=[ <Punkto>, <Longo de Radiuso> ]\n[ <Punkto>, <Streko> ]\n[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Punkto> ]
Circle.Syntax3D=[ <Punkto>, <Longo de Radiuso> ]\n[ <Punkto>, <Streko> ]\n[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Rekto>, <Punkto> ]\n[ <Punkto>, <Radiuso>, <Direkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
CircleArc=CirklaArko
CircleArc.Syntax=[ <Centro>, <Punkto>, <Punkto> ]
CircleSector=CirklaSektoro
CircleSector.Syntax=[ <Centro>, <Punkto>, <Punkto> ]
CircumcircleArc=ĈirkaŭskribitaArko
CircumcircleArc.Syntax=[ <Punkto>, <Punkto>, <Punkto> ]
CircumcircleSector=ĈirkaŭskribitaSektoro
CircumcircleSector.Syntax=[ <Punkto>, <Punkto>, <Punkto> ]
Circumference=Cirkonferenco
Circumference.Syntax=[ <Koniko> ]
Classes.Syntax=[ <List of Data>, <Number of Classes> ]\n[ <List of Data>, <Start>, <Width of Classes> ]
ClosestPoint=PlejProksimaPunkto
ClosestPoint.Syntax=[ <Vojo>, <Punkto> ]\n[ <Rekto>, <Rekto> ]
ClosestPointRegion.Syntax=[ <Regiono>, <Punkto> ]
Coefficients=Koeficientoj
Coefficients.Syntax=[ <Polinomo> ]\n[ <Koniko> ]
Coefficients.SyntaxCAS=[ <Polinomo> ]\n[ <Polinomo>, <Variablo> ]
Column=Kolumno
Column.Syntax=[ <Ĉelo> ]
ColumnName=KolumnaNomo
ColumnName.Syntax=[ <Ĉelo> ]
Command=Komando
CommonDenominator=KomunaDenominatoro
CommonDenominator.Syntax=[ <Esprimo>, <Esprimo> ]
CompleteSquare=PlenigoDeKvadrato
CompleteSquare.Syntax=[ <Kvadrata Funkcio> ]
ComplexRoot=KompleksaNulejo
ComplexRoot.Syntax=[ <Polinomo> ]
Cone=Konuso
Cone.Syntax=[ <Cirklo>, <Alto> ]\n[ <Punkto>, <Punkto>, <Radiuso> ]\n[ <Punkto>, <Vektoro>, <Angulo> ]
ConeInfinite=SenfinaKonuso
ConeInfinite.Syntax=[ <Punkto>, <Vektoro>, <Angulo> ]\n[ <Punkto>, <Punkto>, <Angulo> ]\n[ <Punkto>, <Rekto>, <Angulo> ]
Conic=Koniko
Conic.Syntax=[ <Listo> ]\n[ <Punkto>, <Punkto>, <Punkto>, <Punkto>, <Punkto> ]\n[ <Nombro>, <Nombro>, <Nombro>, <Nombro>, <Nombro>, <Nombro> ]
ConstructionStep.Syntax=[ ]\n[ <Objekto> ]
ContingencyTable=Kontingenctabelo
ContingencyTable.Syntax=[ <Listo de Tekstoj>, <Listo de Tekstoj> ]\n[ <Listo de Tekstoj>, <Listo de Tekstoj>, <Opcioj> ]\n[ <Listo de Vicaj Valoroj>, <Listo de Kolumnaj Valoroj>, <Oftectabelo> ]\n[ <Listo de Vicaj Valoroj>, <Listo de Kolumnaj Valoroj>, <Oftectabelo> , <Opcioj> ]
ContinuedFraction.Syntax=[ <Nombro> ]\n[ <Nombro>, <Nivelo> ]\n[ <Nombro>, <Nivelo>, <Mallonga true|false> ]
ConvexHull=KonveksaKoverto
ConvexHull.Syntax=[ <Listo de Punktoj> ]
CopyFreeObject=KopiiSendependaObjekto
CopyFreeObject.Syntax=[ <Objekto> ]
Corner=Vidangulo
Corner.Syntax=[ <Numero de Angulo> ]\n[ <Bildo>, <Numero de Angulo> ]\n[ <Teksto>, <Numero de Angulo> ]\n[ <Vido>, <Numero de Angulo> ]
CountIf=NombriSe
CountIf.Syntax=[ <Kondiĉo>, <Listo> ]\n[ <Kondiĉo>, <Variablo>, <Listo> ]
Covariance=Kunvarianco
Covariance.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Nombroj>, <Listo de Nombroj> ]
Cross=VektoraProduto
Cross.Syntax=[ <Vektoro>, <Vektoro> ]
CrossRatio.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Punkto> ]
Cube=Kubo
Cube.Syntax=[ <Square> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
Cubic=Kuba
Cubic.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Nombro> ]
Curvature=Kurbeco
Curvature.Syntax=[ <Punkto>, <Objekto> ]
CurvatureVector=KurbecaVektoro
CurvatureVector.Syntax=[ <Punkto>, <Objekto> ]
CurveCartesian=Kurbo
CurveCartesian.Syntax=[ <Esprimo>, <Esprimo>, <Parametra Variablo>, <Komenca Valoro>, <Fina Valoro> ]
CurveCartesian.Syntax3D=[ <Esprimo>, <Esprimo>, <Parametra Variablo>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Esprimo>, <Esprimo>, <Esprimo>, <Parametra Variablo>, <Komenca Valoro>, <Fina Valoro> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Cirklo>, <Alto> ]\n[ <Punkto>, <Punkto>, <Radiuso> ]
CylinderInfinite=SenfinaCilindro
CylinderInfinite.Syntax=[ <Rekto>, <Radiuso> ]\n[ <Punkto>, <Vektoro>, <Radiuso> ]\n[ <Punkto>, <Punkto>, <Radiuso> ]
DataFunction.Syntax=[ <Listo de Nombroj>, <Listo de Nombroj> ]
Defined=Difina
Defined.Syntax=[ <Objekto> ]
Degree=Grado
Degree.Syntax=[ <Polinomo> ]
Degree.SyntaxCAS=[ <Polinomo> ]\n[ <Polinomo>, <Variablo> ]
DelauneyTriangulation.Syntax=[ <Listo de Punktoj> ]
Delete=Forviŝi
Delete.Syntax=[ <Objekto> ]
Denominator=Denominatoro
Denominator.Syntax=[ <Nombro> ]\n[ <Funkcio> ]
Denominator.SyntaxCAS=[ <Esprimo> ]
Derivative=Derivaĵo
Derivative.Syntax=[ <Funkcio> ]\n[ <Kurbo> ]\n[ <Funkcio>, <Nombro> ]\n[ <Funkcio>, <Variablo> ]\n[ <Kurbo>, <Nombro> ]\n[ <Funkcio>, <Variablo>, <Nombro> ]
Derivative.SyntaxCAS=[ <Esprimo> ]\n[ <Esprimo>, <Variablo> ]\n[ <Esprimo>, <Variablo>, <Nombro> ]
Determinant=Determinanto
Determinant.Syntax=[ <Matrico> ]
Diameter=KonjugitaDiametro
Diameter.Syntax=[ <Vektoro>, <Koniko> ]\n[ <Rekto>, <Koniko> ]
Difference.Syntax=[ <Plurlatero>, <Plurlatero> ]
Dilate=Homotetio
Dilate.Syntax=[ <Objekto>, <Rilato> ]\n[ <Objekto>, <Rilato>, <Centro> ]
Dimension=Dimensio
Dimension.Syntax=[ <Objekto> ]
Direction=Direkto
Direction.Syntax=[ <Rekto> ]
Directrix=Direktanto
Directrix.Syntax=[ <Koniko> ]
Distance=Distanco
Distance.Syntax=[ <Punkto>, <Objekto> ]\n[ <Rekto>, <Rekto> ]\n[ <Ebeno>, <Ebeno> ]
Div.Syntax=[ <Dividata Nombro>, <Dividanta Nombro> ]\n[ <Dividata Polinomo>, <Dividanta Polinomo> ]
Division=Divido
Division.Syntax=[ <Dividata Nombro>, <Dividanta Nombro> ]\n[ <Dividata Polinomo>, <Dividanta Polinomo> ]
Divisors=Divizoroj
Divisors.Syntax=[ <Nombro> ]
DivisorsList=ListoDivizoroj
DivisorsList.Syntax=[ <Nombro> ]
DivisorsSum=SumoDivizoroj
DivisorsSum.Syntax=[ <Nombro> ]
Dodecahedron=Dekduedro
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
Dot=SkalaraProduto
Dot.Syntax=[ <Vektoro>, <Vektoro> ]
DotPlot=Punktonubo
DotPlot.Syntax=[ <Listo de Krudaj Datumoj>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)>]
DynamicCoordinates.Syntax=[ <Punkto>, <x-Coordinate>, <y-Coordinate> ]\n[ <Punkto>, <x-Coordinate>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity=Discentreco
Eccentricity.Syntax=[ <Koniko> ]
Eigenvalues.SyntaxCAS=[ <Matrico> ]
Eigenvectors.SyntaxCAS=[ <Matrico> ]
Element=Elemento
Element.Syntax=[ <Listo>, <Pozicio de Elemento> ]\n[ <Matrico>, <Linio>, <Kolumno> ]\n[ <Listo>, <Indico1>, <Indico2>, ... ]
Element.SyntaxCAS=[ <Listo>, <Pozicio de Elemento> ]\n[ <Matrico>, <Linio>, <Kolumno> ]
Eliminate=Forigi
Eliminate.Syntax=[ <Listo de polinomoj>, <Listo de Variabloj> ]
Ellipse=Elipso
Ellipse.Syntax=[ <Fokuso>, <Fokuso>, <Longo de granda duonakso> ]\n[ <Fokuso>, <Fokuso>, <Streko> ]\n[ <Fokuso>, <Fokuso>, <Punkto> ]
Ends.Syntax=[ <Kvadriko> ]
Envelope=Envolvaĵo
Envelope.Syntax=[ <Vojo>, <Punkto> ]
Erlang.Syntax=[ <Shape>, <Rate>, <Variabla Valoro> ]\n[ <Shape>, <Rate>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Shape>, <Rate>, x, <Bulea Akumuli> ]
Excentricity=LinearaDiscentreco
Excentricity.Syntax=[ <Koniko> ]
Execute=Ruli
Execute.Syntax=[ <Listo de Tekstoj> ]\n[ <Listo de Tekstoj>, <Parametro>, <Parametro>, ... ]
Expand=Elvolvi
Expand.Syntax=[ <Esprimo> ]
Exponential=Eksponenta
Exponential.Syntax=[ <λ>, <Variabla Valoro> ]\n[ <λ>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <λ>, x, <Bulea Akumuli> ]
Exponential.SyntaxCAS=[ <λ>, <Variabla Valoro> ]
ExportImage.Syntax=[ <Property>, <Valoro>, <Property>, <Valoro>, ... ]
ExtendedGCD.Syntax=[ <Entjero>, <Entjero>]\n[ <Polinomo>, <Polinomo>]
Extremum=Ekstremumo
Extremum.Syntax=[ <Polinomo> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
Extremum.SyntaxCAS=[ <Funkcio> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variabla Valoro> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <Bulea Akumuli> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variabla Valoro> ]
Factor=Faktorigi
Factor.Syntax=[ <Polinomo> ]
Factor.SyntaxCAS=[ <Nombro> ]\n[ <Polinomo> ]\n[ <Esprimo>, <Variablo> ]
Factors=Faktoroj
Factors.Syntax=[ <Polinomo> ]\n[ <Nombro> ]
FillCells=PlenigiĈelojn
FillCells.Syntax=[ <Ĉelintervalo>, <Objekto> ]\n[ <Ĉelo>, <Listo> ]\n[ <Ĉelo>, <Matrico> ]
FillColumn=PlenigiKolumnon
FillColumn.Syntax=[ <Kolumno>, <Listo> ]
FillRow=PlenigiLinion
FillRow.Syntax=[ <Linio>, <Listo> ]
First=Unua
First.Syntax=[ <Listo> ]\n[ <Teksto> ]\n[ <Listo>, <Nombro de Elementoj> ]\n[ <Teksto>, <Nombro de Elementoj> ]\n[ <Loko>, <Nombro de Elementoj> ]
First.SyntaxCAS=[ <Listo> ]\n[ <Listo>, <Nombro de Elementoj> ]
FirstAxis=GrandaAkso
FirstAxis.Syntax=[ <Koniko> ]
FirstAxisLength=LongoDeGrandaDuonakso
FirstAxisLength.Syntax=[ <Koniko> ]
Fit.Syntax=[ <Listo de Punktoj>, <Listo de Funkcioj> ]\n[ <Listo de Punktoj>, <Funkcio> ]
FitExp.Syntax=[ <Listo de Punktoj> ]
FitGrowth.Syntax=[ <Listo de Punktoj> ]
FitImplicit.Syntax=[ <Listo de Punktoj>, <Grado> ]
FitLineX.Syntax=[ <Listo de Punktoj> ]
FitLineY.Syntax=[ <Listo de Punktoj> ]
FitLog.Syntax=[ <Listo de Punktoj> ]
FitLogistic.Syntax=[ <Listo de Punktoj> ]
FitPoly.Syntax=[ <Listo de Punktoj>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow.Syntax=[ <Listo de Punktoj> ]
FitSin.Syntax=[ <Listo de Punktoj> ]
Flatten=Platigi
Flatten.Syntax=[ <Listo> ]
Focus=Fokuso
Focus.Syntax=[ <Koniko> ]
FractionText=TekstaFrakcio
FractionText.Syntax=[ <Nombro> ]\n[ <Punkto> ]\n[ <Nombro>, <Boolean Single fraction> ]
Frequency=Ofteco
Frequency.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Bulea Akumuli>, <Listo de Krudaj Datumoj> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj> ]\n[ <Listo de Tekstoj>, <Listo de Tekstoj> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon=OftecPoligono
FrequencyPolygon.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Boolean Use Density>, <Density Scale Factor (optional)> ]
FrequencyTable=OftecTabelo
FrequencyTable.Syntax=[ <Listo de Krudaj Datumoj>, <Scale Factor (optional)> ]\n[ <Bulea Akumuli>, <Listo de Krudaj Datumoj> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase=ElBazo
FromBase.Syntax=[ <Nombro (Teksto)>, <Bazo> ]
Function=Funkcio
Function.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Listo de Nombroj> ]
Function.Syntax3D=[ <Listo de Nombroj> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Esprimo>, <Parameter Variable 1>, <Komenca Valoro>, <Fina Valoro>, <Parameter Variable 2>, <Komenca Valoro>, <Fina Valoro> ]
Function.SyntaxCAS=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
FutureValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Present Value (optional)>, <Type (optional)> ]
GCD=PGKD
GCD.Syntax=[ <Listo de Nombroj> ]\n[ <Nombro>, <Nombro> ]
GCD.SyntaxCAS=[ <Listo de Nombroj> ]\n[ <Listo de polinomoj> ]\n[ <Nombro>, <Nombro> ]\n[ <Polinomo>, <Polinomo> ]
Gamma=Gamo
Gamma.Syntax=[ <α>, <β>, <Variabla Valoro> ]\n[ <α>, <β>, <Variabla Valoro>, <Bulea Akumuli>  ]\n[ <α>, <β>, x, <Bulea Akumuli> ]
Gamma.SyntaxCAS=[ <α>, <β>, <Variabla Valoro> ]
GeometricMean=GeometriaMeznombro
GeometricMean.Syntax=[ <Listo de Nombroj> ]
GetTime=HoroDato
GetTime.Syntax=[]\n[ <Aranĝo> ]
GroebnerDegRevLex.Syntax=[ <Listo de polinomoj> ]\n[ <Listo de polinomoj>, <Listo de Variabloj> ]
GroebnerLex.Syntax=[ <Listo de polinomoj> ]\n[ <Listo de polinomoj>, <Listo de Variabloj> ]
GroebnerLexDeg.Syntax=[ <Listo de polinomoj> ]\n[ <Listo de polinomoj>, <Listo de Variabloj> ]
HarmonicMean=HarmonaMeznombro
HarmonicMean.Syntax=[ <Listo de Nombroj> ]
Height=Alto
Height.Syntax=[ <Solido> ]
HideLayer=KaŝiTavolon
HideLayer.Syntax=[ <Nombro> ]
Histogram=Histogramo
Histogram.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight=HistogramoDekstra
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <Bulea Akumuli>, <List of Class Boundaries>, <Listo de Krudaj Datumoj>, <Use Density>, <Density Scale Factor (optional)> ]
HyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <Bulea Akumuli> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <Variabla Valoro>, <Bulea Akumuli> ]
HyperGeometric.SyntaxCAS=[ <Population Size>, <Number of Successes>, <Sample Size>, <Variabla Valoro>, <Bulea Akumuli> ]
Hyperbola=Hiperbolo
Hyperbola.Syntax=[ <Fokuso>, <Fokuso>, <Longo de granda duonakso> ]\n[ <Fokuso>, <Fokuso>, <Streko> ]\n[ <Fokuso>, <Fokuso>, <Punkto> ]
IFactor=NFaktorigi
IFactor.Syntax=[ <Polinomo> ]
IFactor.SyntaxCAS=[ <Esprimo> ]
Icosahedron=Dudekedro
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
Identity=Unuomatrico
Identity.Syntax=[ <Nombro> ]
If=Se
If.Syntax=[ <Kondiĉo>, <Tiam> ]\n[ <Kondiĉo>, <Tiam>, <Alie> ]
ImplicitCurve=ImplicaKurbo
ImplicitCurve.Syntax=[ <Listo de Punktoj> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImplicaDerivaĵo
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Esprimo>, <Dependa Variablo>, <Sendependa Variablo> ]
Incircle=EnskribitaCirklo
Incircle.Syntax=[ <Punkto>, <Punkto>, <Punkto> ]
IndexOf=IndicoDe
IndexOf.Syntax=[ <Objekto>, <Listo> ]\n[ <Teksto>, <Teksto> ]\n[ <Objekto>, <Listo>, <Komenca Indico> ]\n[ <Teksto>, <Teksto>, <Komenca Indico> ]
Insert=Enmeti
Insert.Syntax=[ <Listo>, <Listo>, <Pozicio> ]\n[ <Objekto>, <Listo>, <Pozicio> ]
Integral=Integralo
Integral.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Bulea kalkuli> ]
Integral.SyntaxCAS=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
IntegralBetween=IntegraloInter
IntegralBetween.Syntax=[ <Funkcio>, <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Bulea kalkuli> ]
IntegralBetween.SyntaxCAS=[ <Funkcio>, <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Funkcio>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
IntegralSymbolic.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]
InteriorAngles.Syntax=[ <Plurlatero> ]
Intersect=Komunaĵo
Intersect.Syntax=[ <Objekto>, <Objekto> ]\n[ <Objekto>, <Objekto>, <Indico> ]\n[ <Objekto>, <Objekto>, <Komenca Punkto> ]\n[ <Funkcio>, <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Kurbo 1>, <Kurbo 2>, <Parametro 1>, <Parametro 2> ]
Intersect.SyntaxCAS=[ <Funkcio>, <Funkcio> ]
IntersectConic.Syntax=[ <Ebeno>, <Kvadriko> ]\n[ <Kvadriko>, <Kvadriko> ]
IntersectPath.Syntax=[ <Rekto>, <Plurlatero> ]\n[ <Plurlatero>, <Plurlatero> ]
IntersectPath.Syntax3D=[ <Rekto>, <Plurlatero> ]\n[ <Plurlatero>, <Plurlatero> ]\n[ <Ebeno>, <Plurlatero> ]\n[ <Ebeno>, <Kvadriko> ]
Intersection=ListaKomunaĵo
Intersection.Syntax=[ <Listo>, <Listo> ]
InverseBeta.Syntax=[ <α>, <β>, <Probablo> ]
InverseBinomial.Syntax=[ <Number of Trials>, <Probability of Success>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Probability of Success>, <Number of Successes> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Probability of Success>, <Number of Successes> ]
InverseCauchy.Syntax=[ <Mediano>, <Skalo>, <Probablo> ]
InverseChiSquared.Syntax=[ <Gradoj de libereco>, <Probablo> ]
InverseExponential.Syntax=[ <λ>, <Probablo> ]
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Probablo> ]
InverseGamma.Syntax=[ <α>, <β>, <Probablo> ]
InverseHyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size>, <Probablo> ]
InverseLaplace.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]\n[ <Funkcio>, <Variablo>, <Variablo> ]
InverseLogNormal.Syntax=[ <Meznombro>, <Norma devio>, <Probablo> ]
InverseLogistic.Syntax=[ <Meznombro>, <Skalo>, <Probablo> ]
InverseNormal.Syntax=[ <Meznombro>, <Norma devio>, <Cumulative Probability> ]
InversePascal.Syntax=[ <n>, <p>, <Probablo> ]
InversePoisson.Syntax=[ <Meznombro>, <Probablo> ]
InverseTDistribution.Syntax=[ <Gradoj de libereco>, <Probablo> ]
InverseWeibull.Syntax=[ <Shape>, <Skalo>, <Probablo> ]
InverseZipf.Syntax=[ <Nombro de Elementoj>, <Koeficiento>, <Probablo> ]
Invert=Inversigi
Invert.Syntax=[ <Matrico> ]\n[ <Funkcio> ]
IsFactored.Syntax=[ <Polinomo> ]
IsInRegion.Syntax=[ <Punkto>, <Regiono> ]
IsInteger=Entjera
IsInteger.Syntax=[ <Nombro> ]
IsPrime=Prima
IsPrime.Syntax=[ <Nombro> ]
IsTangent.Syntax=[ <Rekto>, <Koniko> ]
IsVertexForm.Syntax=[ <Funkcio> ]
Iteration=Iteracio
Iteration.Syntax=[ <Funkcio>, <Komenca Valoro>, <Number of Iterations> ]\n[ <Esprimo>, <Variables>, <Start Values>, <Count> ]
IterationList=RipetiListo
IterationList.Syntax=[ <Funkcio>, <Komenca Valoro>, <Number of Iterations> ]\n[ <Esprimo>, <Variables>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <Funkcio>, <Komenca Valoro>, <Number of Iterations> ]
Join=ListaKunaĵo
Join.Syntax=[ <Listo de Listoj> ]\n[ <Listo>, <Listo>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matrico> ]
KeepIf=KonserviSe
KeepIf.Syntax=[ <Kondiĉo>, <Listo> ]\n[ <Kondiĉo>, <Variablo>, <Listo> ]
LCM=PMKO
LCM.Syntax=[ <Listo de Nombroj> ]\n[ <Nombro>, <Nombro> ]
LCM.SyntaxCAS=[ <Listo de Nombroj> ]\n[ <Listo de polinomoj> ]\n[ <Nombro>, <Nombro> ]\n[ <Polinomo>, <Polinomo> ]
LUDecomposition.Syntax=[ <Matrico> ]
LaTeX=TekstaFormulo
LaTeX.Syntax=[ <Objekto> ]\n[ <Objekto>, <Boolean for Substitution of Variables> ]\n[ <Objekto>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]\n[ <Funkcio>, <Variablo>, <Variablo> ]
Last=Lasta
Last.Syntax=[ <Listo> ]\n[ <Teksto> ]\n[ <Listo>, <Nombro de Elementoj> ]\n[ <Teksto>, <Nombro de Elementoj> ]
Last.SyntaxCAS=[ <Listo> ]\n[ <Listo>, <Nombro de Elementoj> ]
LeftSide.Syntax=[ <Ekvacio> ]
LeftSide.SyntaxCAS=[ <Ekvacio> ]\n[ <Listo de Ekvacioj> ]\n[ <Listo de Ekvacioj>, <Indico> ]
LeftSum.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Nombro de Ortanguloj> ]
Length=Longo
Length.Syntax=[ <Objekto> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Komenca Punkto>, <Fina Punkto> ]\n[ <Kurbo>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Kurbo>, <Komenca Punkto>, <Fina Punkto> ]
Length.SyntaxCAS=[ <Listo> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
LetterToUnicode=LiteroAlUnikodo
LetterToUnicode.Syntax=[ <Litero> ]
Limit=Limeso
Limit.Syntax=[ <Funkcio>, <Valoro> ]
Limit.SyntaxCAS=[ <Esprimo>, <Valoro> ]\n[ <Esprimo>, <Variablo>, <Valoro> ]
LimitAbove=DekstraLimeso
LimitAbove.Syntax=[ <Funkcio>, <Valoro> ]
LimitAbove.SyntaxCAS=[ <Esprimo>, <Valoro> ]\n[ <Esprimo>, <Variablo>, <Valoro> ]
LimitBelow=MaldekstraLimeso
LimitBelow.Syntax=[ <Funkcio>, <Valoro> ]
LimitBelow.SyntaxCAS=[ <Esprimo>, <Valoro> ]\n[ <Esprimo>, <Variablo>, <Valoro> ]
Line=Rekto
Line.Syntax=[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Paralela rekto> ]\n[ <Punkto>, <Vektoro> ]
LineBisector=Mezortanto
LineBisector.Syntax=[ <Streko> ]\n[ <Punkto>, <Punkto> ]
LineBisector.Syntax3D=[ <Streko> ]\n[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
LineGraph.Syntax=[ <Listo de abscisoj>, <Listo de ordinatoj> ]
Locus=Loko
Locus.Syntax=[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Ŝovilo> ]\n[ <Vektora kampo>, <Punkto> ]\n[ <f(x, y)>, <Punkto> ]
LocusEquation.Syntax=[ <Loko> ]\n[ <Locus Point>, <Moving Point> ]\n[ <Bulea Esprimo>, <Moving Point> ]
LogNormal.Syntax=[ <Meznombro>, <Norma devio>, <Variabla Valoro> ]\n[ <Meznombro>, <Norma devio>, <Variabla Valoro>, <Bulea Akumuli>  ]\n[ <Meznombro>, <Norma devio>, x, <Bulea Akumuli> ]
Logistic.Syntax=[ <Meznombro>, <Skalo>, <Variabla Valoro> ]\n[ <Meznombro>, <Skalo>, <Variabla Valoro>, <Bulea Akumuli>  ]\n[ <Meznombro>, <Skalo>, x, <Bulea Akumuli> ]
LowerSum.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Nombro de Ortanguloj> ]
MatrixRank=Rango
MatrixRank.Syntax=[ <Matrico> ]
Max=Maks
Max.Syntax=[ <Intervalo> ]\n[ <Nombro>, <Nombro> ]\n[ <Listo> ]\n[ <List of Data>, <Listo de Oftoj> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
Max.SyntaxCAS=[ <Listo> ]\n[ <Intervalo> ]\n[ <Nombro>, <Nombro> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <List of Data>, <Listo de Oftoj> ]
Maximize=Maksimumigi
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=Meznombro
Mean.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
MeanX=MeznombroX
MeanX.Syntax=[ <Listo de Punktoj> ]
MeanY=MeznombroY
MeanY.Syntax=[ <Listo de Punktoj> ]
Median=Mediano
Median.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
Median.SyntaxCAS=[ <Listo de Nombroj> ]
Midpoint=Mezo
Midpoint.Syntax=[ <Streko> ]\n[ <Koniko> ]\n[ <Intervalo> ]\n[ <Punkto>, <Punkto> ]
Min.Syntax=[ <Intervalo> ]\n[ <Nombro>, <Nombro> ]\n[ <Listo> ]\n[ <List of Data>, <Listo de Oftoj> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
Min.SyntaxCAS=[ <Listo> ]\n[ <Intervalo> ]\n[ <Nombro>, <Nombro> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <List of Data>, <Listo de Oftoj> ]
MinimalPolynomial.Syntax=[ <Matrico> ]
Minimize=Minimumigi
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree.Syntax=[ <Listo de Punktoj> ]
Mirror=Simetrio
Mirror.Syntax=[ <Objekto>, <Punkto> ]\n[ <Objekto>, <Rekto> ]\n[ <Objekto>, <Cirklo> ]
Mirror.Syntax3D=[ <Objekto>, <Punkto> ]\n[ <Objekto>, <Rekto> ]\n[ <Objekto>, <Ebeno> ]\n[ <Objekto>, <Cirklo> ]
MixedNumber.SyntaxCAS=[ <Nombro> ]
Mod=Resto
Mod.Syntax=[ <Dividata Nombro>, <Dividanta Nombro> ]\n[ <Dividata Polinomo>, <Dividanta Polinomo> ]
Mode=Moduso
Mode.Syntax=[ <Listo de Nombroj> ]
ModularExponent.Syntax=[ <Nombro>, <Nombro>, <Nombro> ]
NDerivative.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Grado> ]
NIntegral=NIntegralo
NIntegral.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Komenca Valoro>, <Start y-Value>, <Fina Valoro> ]
NIntegral.SyntaxCAS=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Funkcio>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
NInvert.Syntax=[ <Funkcio> ]
NSolutions=NSolvoj
NSolutions.Syntax=[ <Ekvacio> ]
NSolutions.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Ekvacio>, <Variablo = komenca valoro> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]
NSolve=NSolvi
NSolve.Syntax=[ <Ekvacio> ]
NSolve.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Ekvacio>, <Variablo = komenca valoro> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Initial x-coordinate>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name=Nomo
Name.Syntax=[ <Objekto> ]
Net.Syntax=[ <Polyhedron>, <Nombro> ]\n[ <Polyhedron>, <Nombro>, <Face>, <Edge>, <Edge>, ... ]
NextPrime=SekvaPrimo
NextPrime.Syntax=[ <Nombro> ]
Normal=Normala
Normal.Syntax=[ <Meznombro>, <Norma devio>, <Variabla Valoro> ]\n[ <Meznombro>, <Norma devio>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Meznombro>, <Norma devio>, x, <Bulea Akumuli> ]\n[ <Meznombro>, <Norma devio>, <Variable Value u> , <Variable Value v> ]
NormalQuantilePlot.Syntax=[ <Listo de Krudaj Datumoj> ]
Normalize.Syntax=[ <Listo de Nombroj> ]\n[ <Listo de Punktoj> ]
Numerator=Numeratoro
Numerator.Syntax=[ <Nombro> ]\n[ <Funkcio> ]
Numerator.SyntaxCAS=[ <Esprimo> ]
Numeric=Cifera
Numeric.SyntaxCAS=[ <Esprimo> ]\n[ <Esprimo>, <Significant Figures> ]
Object=Objekto
Object.Syntax=[ <Nomo> ]
Octahedron=Okedro
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
Ordinal=OrdaNumeralo
Ordinal.Syntax=[ <Entjero> ]
OrdinalRank=Pozicioj
OrdinalRank.Syntax=[ <Listo> ]
OrthogonalLine=OrtaRekto
OrthogonalLine.Syntax=[ <Punkto>, <Rekto> ]\n[ <Punkto>, <Streko> ]\n[ <Punkto>, <Vektoro> ]
OrthogonalLine.Syntax3D=[ <Punkto>, <Rekto> ]\n[ <Punkto>, <Streko> ]\n[ <Punkto>, <Vektoro> ]\n[ <Punkto>, <Ebeno> ]\n[ <Rekto>, <Rekto> ]\n[ <Punkto>, <Direkto>, <Direkto> ]\n[ <Punkto>, <Rekto>, <Kunteksto> ]
OrthogonalPlane=OrtaEbeno
OrthogonalPlane.Syntax=[ <Punkto>, <Rekto> ]\n[ <Punkto>, <Vektoro> ]
OrthogonalVector=OrtaVektoro
OrthogonalVector.Syntax=[ <Rekto> ]\n[ <Streko> ]\n[ <Vektoro> ]
OrthogonalVector.Syntax3D=[ <Rekto> ]\n[ <Streko> ]\n[ <Vektoro> ]\n[ <Ebeno> ]
OrthogonalVector.SyntaxCAS=[ <Vektoro> ]
OsculatingCircle=OskulaCirklo
OsculatingCircle.Syntax=[ <Punkto>, <Objekto> ]
PMCC=KorelaciKoeficiento
PMCC.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=Parabolo
Parabola.Syntax=[ <Punkto>, <Rekto> ]
Parameter=Parametro
Parameter.Syntax=[ <Parabolo> ]
ParametricDerivative.Syntax=[ <Kurbo> ]
ParseToFunction=AnaliziFunkcion
ParseToFunction.Syntax=[ <Teksto> ]\n[ <Funkcio>, <Teksto> ]
ParseToNumber=AnaliziNombron
ParseToNumber.Syntax=[ <Teksto> ]\n[ <Nombro>, <Teksto> ]
PartialFractions.Syntax=[ <Funkcio> ]
PartialFractions.SyntaxCAS=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Bulea Akumuli> ]\n[ <n>, <p>, <Variabla Valoro>, <Bulea Akumuli> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Variabla Valoro>, <Bulea Akumuli> ]
PathParameter.Syntax=[ <Punkto sur Vojo> ]
Payment.Syntax=[ <Rate>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PenStroke.Syntax=[ <Punkto>, ..., <Punkto> ]
Percentile=Centilo
Percentile.Syntax=[ <Listo de Nombroj>, <Elcento> ]
Perimeter=Perimetro
Perimeter.Syntax=[ <Plurlatero> ]\n[ <Koniko> ]\n[ <Loko> ]
Periods.Syntax=[ <Rate>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <Listo de Oftoj> ]\n[ <Listo de Oftoj>, <Center>, <Radiuso> ]
Plane=Ebeno
Plane.Syntax=[ <Plurlatero> ]\n[ <Koniko> ]\n[ <Punkto>, <Ebeno> ]\n[ <Punkto>, <Rekto> ]\n[ <Rekto>, <Rekto> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Vektoro>, <Vektoro> ]
Plane.SyntaxCAS=[ <Punkto>, <Punkto>, <Punkto> ]
PlaneBisector=MezortantaEbeno
PlaneBisector.Syntax=[ <Streko> ]\n[ <Punkto>, <Punkto> ]
PlaySound=LegiSonon
PlaySound.Syntax=[ <URL> ]\n[ <Boolean Play> ]\n[ <Funkcio>, <Min Value>, <Max Value> ]\n[ <Funkcio>, <Min Value>, <Max Value>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point=Punkto
Point.Syntax=[ <Objekto> ]\n[ <Objekto>, <Parametro> ]\n[ <Punkto>, <Vektoro> ]\n[ <Listo> ]
PointIn=PunktoEn
PointIn.Syntax=[ <Regiono> ]
PointList=PunktListo
PointList.Syntax=[ <Listo> ]
Poisson.Syntax=[ <Meznombro> ]\n[ <Meznombro>, <Bulea Akumuli> ]\n[ <Meznombro>, <Variabla Valoro>, <Bulea Akumuli> ]
Poisson.SyntaxCAS=[ <Meznombro>, <Variabla Valoro>, <Bulea Akumuli> ]
Polar=Polusa
Polar.Syntax=[ <Punkto>, <Koniko> ]\n[ <Rekto>, <Koniko> ]
PolyLine.Syntax=[ <Listo de Punktoj> ]\n[ <Punkto>, ..., <Punkto> ]
Polygon=Plurlatero
Polygon.Syntax=[ <Listo de Punktoj> ]\n[ <Punkto>, ..., <Punkto> ]\n[ <Punkto>, <Punkto>, <Nombro de Verticoj> ]
Polygon.Syntax3D=[ <Listo de Punktoj> ]\n[ <Punkto>, ..., <Punkto> ]\n[ <Punkto>, <Punkto>, <Nombro de Verticoj> ]\n[ <Punkto>, <Punkto>, <Nombro de Verticoj>, <Direkto> ]
Polynomial=Polinomo
Polynomial.Syntax=[ <Funkcio> ]\n[ <Listo de Punktoj> ]
Polynomial.SyntaxCAS=[ <Funkcio> ]\n[ <Funkcio>, <Variablo> ]
PresentValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime=AntaŭaPrimo
PreviousPrime.Syntax=[ <Nombro> ]
PrimeFactors=PrimaFaktoroj
PrimeFactors.Syntax=[ <Nombro> ]
Prism=Prismo
Prism.Syntax=[ <Plurlatero>, <Punkto> ]\n[ <Plurlatero>, <Alto> ]\n[ <Punkto>, <Punkto>, ... ]
Product=Produto
Product.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Nombro de Elementoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]\n[ <Esprimo>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
Product.SyntaxCAS=[ <Listo de Esprimo> ]\n[ <Esprimo>, <Variablo>, <Komenca Indico>, <Fina Indico> ]
Prove=Pruvi
Prove.Syntax=[ <Bulea Esprimo> ]
ProveDetails=PruvoDetaloj
ProveDetails.Syntax=[ <Bulea Esprimo> ]
Pyramid=Piramido
Pyramid.Syntax=[ <Plurlatero>, <Punkto> ]\n[ <Plurlatero>, <Alto> ]\n[ <Punkto>, <Punkto>, <Punkto>, <Punkto>, ... ]
Q1.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
Q3.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
QRDecomposition.Syntax=[ <Matrico> ]
QuadricSide.Syntax=[ <Kvadriko> ]
RSquare.Syntax=[ <Listo de Punktoj>, <Funkcio> ]
Radius=Radiuso
Radius.Syntax=[ <Koniko> ]
Random.Syntax=[ <Minimuma Entjero>, <Maksimuma Entjero> ]\n[ <Minimuma Entjero>, <Maksimuma Entjero>, <Nombro> ]\n[ <Minimuma Entjero>, <Maksimuma Entjero>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <Minimuma Entjero>, <Maksimuma Entjero> ]\n[ <Minimuma Entjero>, <Maksimuma Entjero>, <Nombro> ]
RandomBinomial.Syntax=[ <Number of Trials>, <Probablo> ]
RandomDiscrete.Syntax=[ <Listo>, <Listo> ]
RandomElement=HazardaElemento
RandomElement.Syntax=[ <Listo> ]
RandomNormal=NormalaHazardaNombro
RandomNormal.Syntax=[ <Meznombro>, <Norma devio> ]
RandomPointIn.Syntax=[ <Regiono> ]\n[ <Listo de Punktoj> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=PoissonHazardaNombro
RandomPoisson.Syntax=[ <Meznombro> ]
RandomPolynomial=HazardaPolinomo
RandomPolynomial.Syntax=[ <Grado>, <Minimumo por Koeficientoj>, <Maksimumo por Koeficientoj> ]
RandomPolynomial.SyntaxCAS=[ <Grado>, <Minimumo por Koeficientoj>, <Maksimumo por Koeficientoj> ]\n[ <Variablo>, <Grado>, <Minimumo por Koeficientoj>, <Maksimumo por Koeficientoj> ]
RandomUniform=UniformaHazardanombro
RandomUniform.Syntax=[ <Minimumo>, <Maksimumo> ]\n[ <Minimumo>, <Maksimumo>, <Nombro> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize.SyntaxCAS=[ <Nombro> ]
Ray=Duonrekto
Ray.Syntax=[ <Komenca Punkto>, <Punkto> ]\n[ <Komenca Punkto>, <Vektoro> ]
ReadText.Syntax=[ <Teksto> ]
RectangleSum.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Nombro de Ortanguloj>, <Position for rectangle start> ]
ReducedRowEchelonForm.Syntax=[ <Matrico> ]
Relation=Rilato
Relation.Syntax=[ <Listo> ]\n[ <Objekto>, <Objekto> ]
RemovableDiscontinuity.Syntax=[ <Funkcio> ]
Remove.Syntax=[ <Listo>, <Listo> ]
RemoveUndefined.Syntax=[ <Listo> ]
Rename=Alinomi
Rename.Syntax=[ <Objekto>, <Nomo> ]
Repeat=Ripeti
Repeat.Syntax=[ <Nombro>, <Skripta komando>, <Skripta komando>, ... ]
ReplaceAll.Syntax=[ <Teksto>, <Text to Match>, <Text to Replace> ]
ResidualPlot=Reziduoj
ResidualPlot.Syntax=[ <Listo de Punktoj>, <Funkcio> ]
Reverse=Renversi
Reverse.Syntax=[ <Listo> ]
RightSide.Syntax=[ <Ekvacio> ]
RightSide.SyntaxCAS=[ <Ekvacio> ]\n[ <Listo de Ekvacioj> ]\n[ <Listo de Ekvacioj>, <Indico> ]
RigidPolygon.Syntax=[ <Plurlatero> ]\n[ <Plurlatero>, <x Deŝovo>, <y Deŝovo> ]\n[ <Sendependa Punkto>, ..., <Sendependa Punkto> ]
Root=Nulejo
Root.Syntax=[ <Polinomo> ]\n[ <Funkcio>, <Komenca Valoro> ]\n[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
Root.SyntaxCAS=[ <Polinomo> ]
RootList=EnradikigiListon
RootList.Syntax=[ <Listo> ]
RootMeanSquare=KvadrataAveraĝo
RootMeanSquare.Syntax=[ <Listo de Nombroj> ]
Roots=Nulejoj
Roots.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro> ]
Rotate=Turni
Rotate.Syntax=[ <Objekto>, <Angulo> ]\n[ <Objekto>, <Angulo>, <Punkto> ]
Rotate.Syntax3D=[ <Objekto>, <Angulo> ]\n[ <Objekto>, <Angulo>, <Punkto> ]\n[ <Objekto>, <Angulo>, <Akso> ]\n[ <Objekto>, <Angulo>, <Punkto sur Akso>, <Direkcio de Akso> ]
RotateText=TurniTekston
RotateText.Syntax=[ <Teksto>, <Angulo> ]
Row=Linio
Row.Syntax=[ <Ĉelo> ]
RunClickScript.Syntax=[ <Objekto> ]
RunUpdateScript.Syntax=[ <Objekto> ]
SD=NormaDevio
SDX=NormaDevioX
SDX.Syntax=[ <Listo de Punktoj> ]
SDY=NormaDevioY
SDY.Syntax=[ <Listo de Punktoj> ]
SVD.Syntax=[ <Matrico> ]
SXX.Syntax=[ <Listo de Nombroj> ]\n[ <Listo de Punktoj> ]
SXY.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Nombroj>, <Listo de Nombroj> ]
SYY.Syntax=[ <Listo de Punktoj> ]
Sample=Muestro
Sample.Syntax=[ <Listo>, <Longo> ]\n[ <Listo>, <Longo>, <Bulea ripeti> ]
SampleSD.SyntaxCAS=[ <Listo de Nombroj> ]
SampleSDX.Syntax=[ <Listo de Punktoj> ]
SampleSDY.Syntax=[ <Listo de Punktoj> ]
SampleVariance.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
SampleVariance.SyntaxCAS=[ <Listo de Nombroj> ]
ScientificText.Syntax=[ <Nombro> ]\n[ <Nombro>, <Precizeco> ]
SecondAxis=MalgrandaAkso
SecondAxis.Syntax=[ <Koniko> ]
SecondAxisLength=LongoDeMalgrandaDuonAkso
SecondAxisLength.Syntax=[ <Koniko> ]
Sector=Sektoro
Sector.Syntax=[ <Koniko>, <Punkto>, <Punkto> ]\n[ <Koniko>, <Valoro de Parametro>, <Valoro de Parametro> ]
Segment=Streko
Segment.Syntax=[ <Punkto>, <Punkto> ]\n[ <Punkto>, <Longo> ]
SelectObjects=ElektiObjektojn
SelectObjects.Syntax=[ ]\n[ <Objekto>, <Objekto>, ... ]
SelectedElement=ElektaElemento
SelectedElement.Syntax=[ <Listo> ]
SelectedIndex=ElektaIndico
SelectedIndex.Syntax=[ <Listo> ]
Semicircle=Duoncirklo
Semicircle.Syntax=[ <Punkto>, <Punkto> ]
Sequence=Vico
Sequence.Syntax=[ <Fina Valoro> ]\n[ <Komenca Valoro>, <Fina Valoro> ]\n[ <Komenca Valoro>, <Fina Valoro>, <Increment> ]\n[ <Esprimo>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]\n[ <Esprimo>, <Variablo>, <Komenca Valoro>, <Fina Valoro>, <Increment> ]
SetActiveView.Syntax=[ <Vido> ]\n[ <Ebeno> ]
SetAxesRatio.Syntax=[ <Nombro>, <Nombro> ]
SetAxesRatio.Syntax3D=[ <Nombro>, <Nombro> ]\n[ <Nombro>, <Nombro>, <Nombro> ]
SetBackgroundColor.Syntax=[ <Koloro> ]\n[ <Objekto>, <Koloro> ]\n[ <Ruĝa>, <Verda>, <Blua> ]\n[ <Objekto>, <Ruĝa>, <Verda>, <Blua> ]
SetCaption=Apudskribi
SetCaption.Syntax=[ <Objekto>, <Teksto> ]
SetColor=Kolori
SetColor.Syntax=[ <Objekto>, <Koloro> ]\n[ <Objekto>, <Ruĝa>, <Verda>, <Blua> ]
SetConditionToShowObject.Syntax=[ <Objekto>, <Kondiĉo> ]
SetConstructionStep.Syntax=[ <Nombro> ]
SetCoords.Syntax=[ <Objekto>, <x>, <y> ]\n[ <Objekto>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Objekto>, <Nombro> ]\n[ <Streko>, <Nombro>, <Nombro>]
SetDynamicColor.Syntax=[ <Objekto>, <Ruĝa>, <Verda>, <Blua> ]\n[ <Objekto>, <Ruĝa>, <Verda>, <Blua>, <Opakeco> ]
SetFilling.Syntax=[ <Objekto>, <Nombro> ]
SetFixed.Syntax=[ <Objekto>, <true | false> ]\n[ <Objekto>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Objekto>, <Bildo> ]\n[ <Objekto>, <Teksto> ]
SetLabelMode.Syntax=[ <Objekto>, <Nombro> ]
SetLayer=AlTavolo
SetLayer.Syntax=[ <Objekto>, <Tavolo> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle=AgordiStilonDeRekto
SetLineStyle.Syntax=[ <Objekto>, <Nombro> ]
SetLineThickness=AgordiDikeconDeRekto
SetLineThickness.Syntax=[ <Objekto>, <Nombro> ]
SetPerspective.Syntax=[ <Teksto> ]
SetPointSize.Syntax=[ <Objekto>, <Nombro> ]
SetPointStyle.Syntax=[ <Punkto>, <Nombro> ]
SetSeed.Syntax=[ <Entjero> ]
SetSpinSpeed.Syntax=[ <Nombro> ]
SetTooltipMode.Syntax=[ <Objekto>, <Nombro> ]
SetTrace=Spuri
SetTrace.Syntax=[ <Objekto>, <true | false> ]
SetValue.Syntax=[ <Bulea>, <0|1> ]\n[ <Objekto>, <Objekto> ]\n[ <Listo>, <Nombro>, <Objekto> ]
SetViewDirection=DirektiVidon
SetViewDirection.Syntax=[ ]\n[ <Direkto> ]\n[ <Direkto>, <Boolean animate> ]
SetVisibleInView.Syntax=[ <Objekto>, <Vido 1|2>, <Bulea> ]
Shear=Tondi
Shear.Syntax=[ <Objekto>, <Rekto>, <Rilato> ]
ShortestDistance.Syntax=[ <List of Segments>, <Komenca Punkto>, <Fina Punkto>, <Boolean Weighted> ]
ShowAxes=MontriAksojn
ShowAxes.Syntax=[]\n[ <Bulea> ]\n[ <Vido>, <Bulea> ]
ShowGrid=MontriKradon
ShowGrid.Syntax=[]\n[ <Bulea> ]\n[ <Vido>, <Bulea> ]
ShowLabel=MontriEtikedon
ShowLabel.Syntax=[ <Objekto>, <Bulea> ]
ShowLayer=MontriTavolon
ShowLayer.Syntax=[ <Nombro> ]
Shuffle=Malordigi
Shuffle.Syntax=[ <Listo> ]
SigmaXX.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
SigmaXY.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj> ]
SigmaYY.Syntax=[ <Listo de Punktoj> ]
Simplify.Syntax=[ <Funkcio> ]\n[ <Teksto> ]
Simplify.SyntaxCAS=[ <Funkcio> ]
Slider=Ŝovilo
Slider.Syntax=[ <Minimumo>, <Maksimumo>, <Increment>, <Speed>, <Width>, <Is Angle>, <Horizontal>, <Animating>, <Random> ]
Slope=Inklino
Slope.Syntax=[ <Rekto> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Nombro n> ]\n[ <f(x, y)>, <Nombro n>, <Length Multiplier a> ]\n[ <f(x, y)>, <Nombro n>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot.Syntax=[ <Funkcio> ]\n[ <Funkcio>, <Boolean Repeat> ]
Solutions=Solvoj
Solutions.Syntax=[ <Ekvacio> ]
Solutions.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]
Solve=Solvi
Solve.Syntax=[ <Ekvacio> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Ekvacio>, <Variablo> ]\n[ <Listo de Ekvacioj>, <Listo de Variabloj> ]\n[ <List of Parametric Equations>, <Listo de Variabloj> ]\n[ <Ekvacio>, <Variablo>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Point on f> ]\n[ <f'(x, y)>, <Start x>, <Start y>, <End x>, <Step> ]\n[ <y'>, <x'>, <Start x>, <Start y>, <End t>, <Step> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Step> ]
SolveODE.SyntaxCAS=[ <Ekvacio> ]\n[ <Ekvacio>, <Point(s) on f> ]\n[ <Ekvacio>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Ekvacio>, <Dependa Variablo>, <Sendependa Variablo>, <Point(s) on f> ] \n[ <Ekvacio>, <Dependa Variablo>, <Sendependa Variablo>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic.SyntaxCAS=[ <Quartic Polynomial> ]
Sort=Ordigi
Sort.Syntax=[ <Listo> ]\n[ <Values>, <Keys> ]
Spearman.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Nombroj>, <Listo de Nombroj> ]
Sphere=Sfero
Sphere.Syntax=[ <Punkto>, <Radiuso> ]\n[ <Punkto>, <Punkto> ]
Spline=Splajno
Spline.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Punktoj>, <Order ≥ 3> ]\n[ <Listo de Punktoj>, <Order ≥ 3>, <Weight Function> ]
Split.Syntax=[ <Teksto>, <List of Texts to split on> ]
StartAnimation.Syntax=[ ]\n[ <Bulea> ]\n[ <Ŝovilo aŭ Punkto>, <Ŝovilo aŭ Punkto>, ... ]\n[ <Ŝovilo aŭ Punkto>, <Ŝovilo aŭ Punkto>, ..., <Bulea> ]
StartRecord.Syntax=[ ]\n[ <Bulea> ]
StemPlot.Syntax=[ <Listo> ]\n[ <Listo>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Punktoj>, <Boolean Join> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj> ]\n[ <Listo de Punktoj>, <Boolean Join>, <Point Style> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj>, <Boolean Join> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj>, <Boolean Join>, <Point Style> ]
StickGraph.Syntax=[ <Listo de Punktoj> ]\n[ <Listo de Punktoj>, <Boolean Horizontal> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj> ]\n[ <Listo de abscisoj>, <Listo de ordinatoj>, <Boolean Horizontal> ]
Stretch.Syntax=[ <Objekto>, <Vektoro> ]\n[ <Objekto>, <Rekto>, <Rilato> ]
Substitute=Substitui
Substitute.SyntaxCAS=[ <Esprimo>, <Substitution List> ]\n[ <Esprimo>, <from>, <to> ]
Sum=Sumo
Sum.Syntax=[ <Listo> ]\n[ <Listo>, <Nombro de Elementoj> ]\n[ <Listo>, <Listo de Oftoj> ]\n[ <Esprimo>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
Sum.SyntaxCAS=[ <Listo> ]\n[ <Esprimo>, <Variablo>, <Komenca Valoro>, <Fina Valoro> ]
SumSquaredErrors.Syntax=[ <Listo de Punktoj>, <Funkcio> ]
SurdText.Syntax=[ <Punkto> ]\n[ <Nombro> ]\n[ <Nombro>, <Listo> ]
Surface.Syntax=[ <Funkcio>, <Angulo> ]\n[ <Kurbo>, <Angulo>, <Rekto> ]\n[ <Esprimo>, <Esprimo>, <Esprimo>, <Parameter Variable 1>, <Komenca Valoro>, <Fina Valoro>, <Parameter Variable 2>, <Komenca Valoro>, <Fina Valoro> ]
TDistribution.Syntax=[ <Gradoj de libereco>, <Variabla Valoro> ]\n[ <Gradoj de libereco>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Gradoj de libereco>, x, <Bulea Akumuli> ]
TDistribution.SyntaxCAS=[ <Gradoj de libereco>, <Variabla Valoro> ]
TMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Confidence Level>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Confidence Level>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <List of Sample Data>, <Confidence Level> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Confidence Level> ]
TTest.Syntax=[ <List of Sample Data>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
TTest2.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Tail>, <Boolean Pooled> ]
TTestPaired.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail> ]
TableText=Tabulo
TableText.Syntax=[ <Listo>, <Listo>, ... ]\n[ <Listo>, <Listo>, ..., <Ĝisrandigo> ]\n[ <Listo>, <Listo>, ..., <Ĝisrandigo>, <Minimum Cell Width> ]\n[ <Listo>, <Listo>, ..., <Ĝisrandigo>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Preni
Take.Syntax=[ <Listo>, <Start Position>, <End Position> ]\n[ <Listo>, <Start Position> ]\n[ <Teksto>, <Start Position>, <End Position> ]\n[ <Teksto>, <Start Position> ]
Take.SyntaxCAS=[ <Listo>, <Start Position> ]\n[ <Listo>, <Start Position>, <End Position> ]\n[ <Teksto>, <Start Position>, <End Position> ]\n[ <Teksto>, <Start Position> ]
Tangent=Tanĝanto
Tangent.Syntax=[ <Punkto>, <Koniko> ]\n[ <Punkto>, <Funkcio> ]\n[ <Punkto sur kurbo>, <Kurbo> ]\n[ <Valoro>, <Funkcio> ]\n[ <Rekto>, <Koniko> ]\n[ <Koniko>, <Koniko> ]
Tangent.SyntaxCAS=[ <Nombro>, <Funkcio> ]\n[ <Punkto>, <Objekto> ]
TaylorSeries=PolinomoDeTaylor
TaylorSeries.Syntax=[ <Funkcio>, <Valoro>, <Ordo> ]
TaylorSeries.SyntaxCAS=[ <Esprimo>, <Valoro>, <Ordo> ]\n[ <Esprimo>, <Variablo>, <Variabla Valoro>, <Ordo> ]
Tetrahedron=Kvaredro
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Punkto>, <Punkto>, <Punkto> ]\n[ <Punkto>, <Punkto>, <Direkto> ]
Text=Teksto
Text.Syntax=[ <Objekto> ]\n[ <Objekto>, <Boolean for Substitution of Variables> ]\n[ <Objekto>, <Punkto> ]\n[ <Objekto>, <Punkto>, <Boolean for Substitution of Variables> ]\n[ <Objekto>, <Punkto>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <Objekto>, <Punkto>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Objekto>, <Punkto>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=TekstoAlUnikodo
TextToUnicode.Syntax=[ <Teksto> ]
Textfield=EnigaSkatolo
Textfield.Syntax=[ <Ligita Objekto> ]
TiedRank.Syntax=[ <Listo> ]
ToBase=AlBazo
ToBase.Syntax=[ <Nombro>, <Bazo> ]
ToComplex=AlKomplekso
ToComplex.Syntax=[ <Vektoro> ]
ToExponential.SyntaxCAS=[ <Kompleksa Nombro> ]
ToPoint=AlPunkto
ToPoint.Syntax=[ <Kompleksa Nombro> ]
ToPolar=AlPolusa
ToPolar.Syntax=[ <Kompleksa Nombro> ]\n[ <Vektoro> ]
ToolImage=IlaBildo
ToolImage.Syntax=[ <Nombro> ]\n[ <Nombro>, <Punkto> ]\n[ <Nombro>, <Punkto>, <Punkto> ]
Top.Syntax=[ <Kvadriko> ]
Translate=Movi
Translate.Syntax=[ <Objekto>, <Vektoro> ]\n[ <Vektoro>, <Komenca Punkto> ]
Transpose=Transponi
Transpose.Syntax=[ <Matrico> ]
TrapezoidalSum.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Number of Trapezoids> ]
TravelingSalesman.Syntax=[ <Listo de Punktoj> ]
TriangleCenter=TriangulaCentro
TriangleCenter.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Nombro> ]
TriangleCurve=TriangulaKurbo
TriangleCurve.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Ekvacio> ]
Triangular=Triangula
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Variabla Valoro> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Bulea Akumuli> ]
TrigCombine.Syntax=[ <Esprimo> ]\n[ <Esprimo>, <Cela Funkcio> ]
TrigExpand=TrigElvolvi
TrigExpand.Syntax=[ <Esprimo> ]\n[ <Esprimo>, <Cela Funkcio> ]
TrigExpand.SyntaxCAS=[ <Esprimo> ]\n[ <Esprimo>, <Cela Funkcio> ]\n[ <Esprimo>, <Cela Funkcio>, <Cela Variablo> ]\n[ <Esprimo>, <Cela Funkcio>, <Cela Variablo>, <Cela Variablo> ]
TrigSimplify.Syntax=[ <Esprimo> ]
Trilinear.Syntax=[ <Punkto>, <Punkto>, <Punkto>, <Nombro>, <Nombro>, <Nombro> ]
TurningPoint=TrafleksaPunkto
TurningPoint.Syntax=[ <Polinomo> ]
TurningPoint.SyntaxCAS=[ <Funkcio> ]
Turtle=Testudo
Turtle.Syntax=[]
TurtleBack=TestudoMalantaŭen
TurtleBack.Syntax=[ <Testudo>, <Distanco> ]
TurtleDown=TestudoMLS
TurtleDown.Syntax=[ <Testudo> ]
TurtleForward=TestudoAntaŭen
TurtleForward.Syntax=[ <Testudo>, <Distanco> ]
TurtleLeft=TestudoMaldekstren
TurtleLeft.Syntax=[ <Testudo>, <Angulo> ]
TurtleRight=TestudoDekstren
TurtleRight.Syntax=[ <Testudo>, <Angulo> ]
TurtleUp=TestudoLS
TurtleUp.Syntax=[ <Testudo> ]
Type.Syntax=[ <Objekto> ]
UnicodeToLetter.Syntax=[ <Entjero> ]
UnicodeToText.Syntax=[ <Listo de Entjeroj> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Variabla Valoro> ]\n[ <Lower Bound>, <Upper Bound>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Lower Bound>, <Upper Bound>, x, <Bulea Akumuli> ]
Union=Kunaĵo
Union.Syntax=[ <Listo>, <Listo> ]\n[ <Plurlatero>, <Plurlatero> ]
Unique.Syntax=[ <Listo> ]
UnitOrthogonalVector.Syntax=[ <Rekto> ]\n[ <Streko> ]\n[ <Vektoro> ]
UnitOrthogonalVector.Syntax3D=[ <Rekto> ]\n[ <Streko> ]\n[ <Vektoro> ]\n[ <Ebeno> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektoro> ]
UnitVector=Unuvektoro
UnitVector.Syntax=[ <Objekto> ]
UnitVector.SyntaxCAS=[ <Vektoro> ]
UpdateConstruction.Syntax=[ ]\n[ <Kiom da fojoj> ]
UpperSum.Syntax=[ <Funkcio>, <Komenca Valoro>, <Fina Valoro>, <Nombro de Ortanguloj> ]
Variance=Varianco
Variance.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
Vector=Vektoro
Vector.Syntax=[ <Punkto> ]\n[ <Komenca Punkto>, <Fina Punkto> ]
Vertex=Vertico
Vertex.Syntax=[ <Koniko> ]\n[ <Inequality> ]\n[ <Plurlatero> ]\n[ <Plurlatero>, <Indico> ]\n[ <Streko>, <Indico> ]
VerticalText=VertikalaTeksto
VerticalText.Syntax=[ <Teksto> ]\n[ <Teksto>, <Punkto> ]
Volume=Volumeno
Volume.Syntax=[ <Solido> ]
Voronoi.Syntax=[ <Listo de Punktoj> ]
Weibull.Syntax=[ <Shape>, <Skalo>, <Variabla Valoro> ]\n[ <Shape>, <Skalo>, <Variabla Valoro>, <Bulea Akumuli> ]\n[ <Shape>, <Skalo>, x, <Bulea Akumuli> ]
Weibull.SyntaxCAS=[ <Shape>, <Skalo>, <Variabla Valoro> ]
ZMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <σ1>, <σ2>, <Confidence Level> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Sample Mean 2>, <σ2>, <Sample Size 2>, <Confidence Level> ]
ZMean2Test.Syntax=[ <List of Sample Data 1>, <σ1>, <List of Sample Data 2>, <σ2>, <Tail> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Sample Mean 2>, <σ2>, <Sample Size 2>, <Tail> ]
ZMeanEstimate.Syntax=[ <List of Sample Data>, <σ>, <Confidence Level> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <Confidence Level> ]
ZMeanTest.Syntax=[ <List of Sample Data>, <σ>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Confidence Level> ]
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]
ZProportionEstimate.Syntax=[ <Sample Proportion>, <Sample Size>, <Confidence Level> ]
ZProportionTest.Syntax=[ <Sample Proportion>, <Sample Size>, <Hypothesized Proportion>, <Tail> ]
Zip.Syntax=[ <Esprimo>, <Var1>, <Listo1>, <Var2>, <Listo2>, ... ]
Zipf.Syntax=[ <Nombro de Elementoj>, <Koeficiento> ]\n[ <Nombro de Elementoj>, <Koeficiento>, <Bulea Akumuli> ]\n[ <Nombro de Elementoj>, <Koeficiento>, <Variabla Valoro>, <Bulea Akumuli> ]
Zipf.SyntaxCAS=[ <Nombro de Elementoj>, <Koeficiento>, <Variabla Valoro>, <Bulea Akumuli> ]
ZoomIn=Zomi
ZoomIn.Syntax=[ ]\n[ <Skalfaktoro> ]\n[ <Skalfaktoro>, <Centra Punkto> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=Malzomi
ZoomOut.Syntax=[ <Skalfaktoro> ]\n[ <Skalfaktoro>, <Centra Punkto> ]
mad.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
mean.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
stdev.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]
stdevp.Syntax=[ <Listo de Krudaj Datumoj> ]\n[ <Listo de Nombroj>, <Listo de Oftoj> ]