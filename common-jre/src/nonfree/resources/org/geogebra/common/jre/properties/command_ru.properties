# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=ДисперсионныйАнализ
ANOVA.Syntax=[ <Список>, <Список>, ... ]
AffineRatio=ПростоеОтношение
AffineRatio.Syntax=[ <Точка>, <Точка>, <Точка> ]
Angle=Угол
Angle.Syntax=[ <Объект> ]\n[ <Вектор>, <Вектор> ]\n[ <Прямая>, <Прямая> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Угол> ]
Angle.Syntax3D=[ <Объект> ]\n[ <Вектор>, <Вектор> ]\n[ <Прямая>, <Прямая> ]\n[ <Прямая>, <Плоскость> ]\n[ <Плоскость>, <Плоскость> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Угол> ]\n[ <Точка>, <Точка>, <Точка>, <Direction> ]
AngularBisector=Биссектриса
AngularBisector.Syntax=[ <Прямая>, <Прямая> ]\n[ <Точка>, <Точка>, <Точка> ]
Append=Добавить
Append.Syntax=[ <Список>, <Объект> ]\n[ <Объект>, <Список> ]
ApplyMatrix=ПрименитьМатрицу
ApplyMatrix.Syntax=[ <Матрица>, <Объект> ]
Arc=Дуга
Arc.Syntax=[ <Окружность>, <Точка>, <Точка> ]\n[ <Ellipse>, <Точка>, <Точка> ]\n[ <Окружность>, <Значение параметра>, <Значение параметра> ]\n[ <Ellipse>, <Значение параметра>, <Значение параметра> ]
AreCollinear=ПроверкаКоллинеарности
AreCollinear.Syntax=[ <Точка>, <Точка>, <Точка> ]
AreConcurrent=ПроверкаПересечения
AreConcurrent.Syntax=[ <Прямая>, <Прямая>, <Прямая> ]
AreConcyclic=ПроверкаНахНаОднойОкружности
AreConcyclic.Syntax=[ <Точка>, <Точка>, <Точка>, <Точка> ]
AreCongruent.Syntax=[ <Объект>, <Объект> ]
AreEqual=ПроверкаРавенства
AreEqual.Syntax=[ <Объект>, <Объект> ]
AreParallel=ПроверкаПараллельности
AreParallel.Syntax=[ <Прямая>, <Прямая> ]
ArePerpendicular=ПроверкаПерпендикулярности
ArePerpendicular.Syntax=[ <Прямая>, <Прямая> ]
Area=Площадь
Area.Syntax=[ <Коника> ]\n[ <Многоугольник> ]\n[ <Точка>, ..., <Точка> ]
Assume.SyntaxCAS=[ <Условие>, <Выражение> ]
Asymptote=Асимптота
Asymptote.Syntax=[ <Объект> ]
AttachCopyToView=ПрикрепитьКопиюКПолотну
AttachCopyToView.Syntax=[ <Объект>, <Полотно 0|1|2> ]\n[ <Объект>, <Полотно 0|1|2>, <Точка 1>, <Точка 2>, <Точка экрана 1>, <Точка экрана 2> ]
Axes=Оси
Axes.Syntax=[ <Коника> ]
Axes.Syntax3D=[ <Коника> ]\n[ <Квадрика> ]
AxisStepX=ШагОсиАбсцисс
AxisStepX.Syntax=[ ]
AxisStepY=ШагОсиОрдинат
AxisStepY.Syntax=[ ]
BarChart=Диаграмма
BarChart.Syntax=[ <Список данных>, <Список частот> ]\n[ <Список исходных данных>, <Width of Bars>, <Vertical Scale Factor (optional)> ]\n[ <Список данных>, <Список частот>, <Width of Bars> ]\n[ <Начальное значение>, <Конечное значение>, <Список высот> ]\n[ <Начальное значение>, <Конечное значение>, <Выражение>, <Переменная>, <From Number>, <To Number> ]\n[ <Начальное значение>, <Конечное значение>, <Выражение>, <Переменная>, <From Number>, <To Number>, <Step Width> ]
Barycenter=ЦентрМасс
Barycenter.Syntax=[ <Список точек>, <Список масс> ]
Bernoulli=БернуллиРаспр
Bernoulli.Syntax=[ <Вероятность>, <Интегральная> ]
BetaDist.Syntax=[ <Альфа>, <Бета>, <Переменная> ]\n[ <Альфа>, <Бета>, <Переменная>, <Интегральная>  ]\n[ <Альфа>, <Бета>, x, <Интегральная> ]
Binomial=БиномиальныйКоэффициент
Binomial.Syntax=[ <Число n>, <Число r> ]
BinomialDist=БиномРасп
BinomialDist.Syntax=[ <Число испытаний>, <Вероятность успеха> ]\n[ <Число испытаний>, <Вероятность успеха>, <Интегральная> ]\n[ <Число испытаний>, <Вероятность успеха>, <List of Values> ]\n[ <Число испытаний>, <Вероятность успеха>, <Переменная>, <Интегральная> ]
BinomialDist.SyntaxCAS=[ <Число испытаний>, <Вероятность успеха>, <Переменная>, <Интегральная> ]\n[ <Число испытаний>, <Вероятность успеха>, <List of Values> ]
Bottom=Основание
Bottom.Syntax=[ <Квадрика> ]
BoxPlot=ЯщикСУсами
BoxPlot.Syntax=[ <yOffset>, <yScale>, <Список исходных данных> ]\n[ <yOffset>, <yScale>, <Список исходных данных>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <Список данных>, <Список частот>, <Boolean Outliers> ]\n[ <yOffset>, <yScale>, <Начальное значение>, <Q1>, <Медиана>, <Q3>, <Конечное значение> ]
Button=Кнопка
Button.Syntax=[ ]\n[ <Заголовок> ]
CASLoaded.Syntax=[]
CFactor=КомлпекснФакторизация
CFactor.SyntaxCAS=[ <Выражение> ]\n[ <Выражение>, <Переменная> ]
CIFactor=КомплекснИррацФакторизация
CIFactor.SyntaxCAS=[ <Выражение> ]\n[ <Выражение>, <Переменная> ]
CSolutions=CРешения
CSolutions.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Переменная> ]\n[ <Список уравнений>, <Список переменных> ]
CSolve=CРешить
CSolve.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Переменная> ]\n[ <Список уравнений>, <Список переменных> ]
Cauchy=КошиРаспр
Cauchy.Syntax=[ <Медиана>, <Коэффициент масштаба>, <Переменная> ]\n[ <Медиана>, <Коэффициент масштаба>, <Переменная>, <Интегральная>  ]\n[ <Медиана>, <Коэффициент масштаба>, x, <Интегральная> ]
Cauchy.SyntaxCAS=[ <Медиана>, <Коэффициент масштаба>, <Переменная> ]
Cell=Ячейка
Cell.Syntax=[ <Столбец>, <Строка> ]
CellRange=ДиапазонЯчеек
CellRange.Syntax=[ <Начальная ячейка>, <Конечная ячейка> ]
Center=Центр
Center.Syntax=[ <Коника> ]
Center.Syntax3D=[ <Коника> ]\n[ <Квадрика> ]
CenterView=ПоместитьВЦентр
CenterView.Syntax=[ <Точка> ]
Centroid=Центроид
Centroid.Syntax=[ <Многоугольник> ]
CharacteristicPolynomial.Syntax=[ <Матрица> ]
Checkbox=Флажок
Checkbox.Syntax=[ ]\n[ <Заголовок> ]\n[ <Список> ]\n[ <Заголовок>, <Список> ]
ChiSquared=ХиРасп
ChiSquared.Syntax=[ <Степени свободы>, <Переменная> ]\n[ <Степени свободы>, <Переменная>, <Интегральная> ]\n[ <Степени свободы>, x, <Интегральная> ]
ChiSquared.SyntaxCAS=[ <Степени свободы>, <Переменная> ]
ChiSquaredTest=ХиКвадратКритерий
ChiSquaredTest.Syntax=[ <Матрица> ]\n[ <Список>, <Список> ]\n[ <Матрица>, <Матрица> ]\n[ <Список>, <Список>, <Степени свободы> ]
Circle=Окружность
Circle.Syntax=[ <Точка>, <Радиус> ]\n[ <Точка>, <Отрезок> ]\n[ <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Точка> ]
Circle.Syntax3D=[ <Точка>, <Радиус> ]\n[ <Точка>, <Отрезок> ]\n[ <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Прямая>, <Точка> ]\n[ <Точка>, <Радиус>, <Direction> ]\n[ <Точка>, <Точка>, <Direction> ]
CircleArc=ДугаОкружности
CircleArc.Syntax=[ <Центр>, <Точка>, <Точка> ]
CircleSector=СекторКруга
CircleSector.Syntax=[ <Центр>, <Точка>, <Точка> ]
CircumcircleArc=ОписаннаяДуга
CircumcircleArc.Syntax=[ <Точка>, <Точка>, <Точка> ]
CircumcircleSector=ОписанныйСектор
CircumcircleSector.Syntax=[ <Точка>, <Точка>, <Точка> ]
Circumference=Периферия
Circumference.Syntax=[ <Коника> ]
Classes=Классы
Classes.Syntax=[ <Список данных>, <Колличество классов> ]\n[ <Список данных>, <Начальное значение>, <Ширина классов> ]
ClosestPoint=БлижайшаяТочка
ClosestPoint.Syntax=[ <Контур>, <Точка> ]\n[ <Прямая>, <Прямая> ]
ClosestPointRegion.Syntax=[ <Область>, <Точка> ]
Coefficients=Коэффициенты
Coefficients.Syntax=[ <Многочлен> ]\n[ <Коника> ]
Coefficients.SyntaxCAS=[ <Многочлен> ]\n[ <Многочлен>, <Переменная> ]
Column=Столбец
Column.Syntax=[ <Ячейка> ]
ColumnName=ИмяСтолбца
ColumnName.Syntax=[ <Ячейка> ]
Command=Команда
CommonDenominator=ОбщийЗнаменатель
CommonDenominator.Syntax=[ <Выражение>, <Выражение> ]
CompleteSquare=ПолныйКвадрат
CompleteSquare.Syntax=[ <Квадратическая функция> ]
ComplexRoot=КомплексныйКорень
ComplexRoot.Syntax=[ <Многочлен> ]
Cone=Конус
Cone.Syntax=[ <Окружность>, <Высота> ]\n[ <Точка>, <Точка>, <Радиус> ]\n[ <Точка>, <Вектор>, <Угол> ]
ConeInfinite=БесконечныйКонус
ConeInfinite.Syntax=[ <Точка>, <Вектор>, <Угол> ]\n[ <Точка>, <Точка>, <Угол> ]\n[ <Точка>, <Прямая>, <Угол> ]
Conic=Коника
Conic.Syntax=[ <Список> ]\n[ <Точка>, <Точка>, <Точка>, <Точка>, <Точка> ]\n[ <Число>, <Число>, <Число>, <Число>, <Число>, <Число> ]
ConstructionStep=ШагПостроения
ConstructionStep.Syntax=[ ]\n[ <Объект> ]
ContingencyTable=ТаблицаСопряженности
ContingencyTable.Syntax=[ <Список>, <Список> ]\n[ <Список>, <Список>, <Опции> ]\n[ <Список значений строк>, <Список значений столбцов>, <Таблица частот> ]\n[ <Список значений строк>, <Список значений столбцов>, <Таблица частот> , <Опции> ]
ContinuedFraction=НепрерывнаяДробь
ContinuedFraction.Syntax=[ <Число> ]\n[ <Число>, <Уровень> ]\n[ <Число>, <Уровень>, <Стенография true|false> ]
ConvexHull=ВыпуклаяОболочка
ConvexHull.Syntax=[ <Список точек> ]
CopyFreeObject=КопироватьСвободныйОбъект
CopyFreeObject.Syntax=[ <Объект> ]
Corner=Координаты
Corner.Syntax=[ <Number of Corner> ]\n[ <Image>, <Number of Corner> ]\n[ <Текст>, <Number of Corner> ]\n[ <Graphics View>, <Number of Corner> ]
CountIf=КоличествоЭлементов
CountIf.Syntax=[ <Условие>, <Список> ]\n[ <Условие>, <Переменная>, <Список> ]
Covariance=Ковариация
Covariance.Syntax=[ <Список точек> ]\n[ <Список чисел>, <Список чисел> ]
Cross=ВекторноеПроизведение
Cross.Syntax=[ <Вектор>, <Вектор> ]
CrossRatio=СложноеОтношение
CrossRatio.Syntax=[ <Точка>, <Точка>, <Точка>, <Точка> ]
Cube=Куб
Cube.Syntax=[ <Square> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
Cubic=Кубический
Cubic.Syntax=[ <Точка>, <Точка>, <Точка>, <Число> ]
Curvature=Кривизна
Curvature.Syntax=[ <Точка>, <Объект> ]
CurvatureVector=ВекторКривизны
CurvatureVector.Syntax=[ <Точка>, <Объект> ]
CurveCartesian=Кривая
CurveCartesian.Syntax=[ <Выражение>, <Выражение>, <Параметр>, <Начальное значение>, <Конечное значение> ]
CurveCartesian.Syntax3D=[ <Выражение>, <Выражение>, <Параметр>, <Начальное значение>, <Конечное значение> ]\n[ <Выражение>, <Выражение>, <Выражение>, <Параметр>, <Начальное значение>, <Конечное значение> ]
Cylinder=Цилиндр
Cylinder.Syntax=[ <Окружность>, <Высота> ]\n[ <Точка>, <Точка>, <Радиус> ]
CylinderInfinite=БесконечныйЦилиндр
CylinderInfinite.Syntax=[ <Прямая>, <Радиус> ]\n[ <Точка>, <Вектор>, <Радиус> ]\n[ <Точка>, <Точка>, <Радиус> ]
DataFunction.Syntax=[ <Список чисел>, <Список чисел> ]
Defined=Существует
Defined.Syntax=[ <Объект> ]
Degree=Степень
Degree.Syntax=[ <Многочлен> ]
Degree.SyntaxCAS=[ <Многочлен> ]\n[ <Многочлен>, <Переменная> ]
DelauneyTriangulation=ТриангуляцияДелоне
DelauneyTriangulation.Syntax=[ <Список точек> ]
Delete=Удалить
Delete.Syntax=[ <Объект> ]
Denominator=Знаменатель
Denominator.Syntax=[ <Число> ]\n[ <Функция> ]
Denominator.SyntaxCAS=[ <Выражение> ]
Derivative=Производная
Derivative.Syntax=[ <Функция> ]\n[ <Кривая> ]\n[ <Функция>, <Число> ]\n[ <Функция>, <Переменная> ]\n[ <Кривая>, <Число> ]\n[ <Функция>, <Переменная>, <Число> ]
Derivative.SyntaxCAS=[ <Выражение> ]\n[ <Выражение>, <Переменная> ]\n[ <Выражение>, <Переменная>, <Число> ]
Determinant=Определитель
Determinant.Syntax=[ <Матрица> ]
Diameter=Диаметр
Diameter.Syntax=[ <Вектор>, <Коника> ]\n[ <Прямая>, <Коника> ]
Difference.Syntax=[ <Многоугольник>, <Многоугольник> ]
Dilate=Гомотетия
Dilate.Syntax=[ <Объект>, <Dilation Factor> ]\n[ <Объект>, <Dilation Factor>, <Dilation Center Point> ]
Dimension=РазмерностьПространства
Dimension.Syntax=[ <Объект> ]
Direction=Направление
Direction.Syntax=[ <Прямая> ]
Directrix=Директриса
Directrix.Syntax=[ <Коника> ]
Distance=Расстояние
Distance.Syntax=[ <Точка>, <Объект> ]\n[ <Прямая>, <Прямая> ]\n[ <Плоскость>, <Плоскость> ]
Div.Syntax=[ <Делимое число>, <Делитель число> ]\n[ <Делимый многочлен>, <Делитель многочлен> ]
Division=Деление
Division.Syntax=[ <Делимое число>, <Делитель число> ]\n[ <Делимый многочлен>, <Делитель многочлен> ]
Divisors=КоличествоДелителей
Divisors.Syntax=[ <Число> ]
DivisorsList=СписокДелителей
DivisorsList.Syntax=[ <Число> ]
DivisorsSum=СуммаДелителей
DivisorsSum.Syntax=[ <Число> ]
Dodecahedron=Додекаэдр
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
Dot=СкалярноеПроизведение
Dot.Syntax=[ <Вектор>, <Вектор> ]
DotPlot=ТочечнаяДиаграмма
DotPlot.Syntax=[ <Список исходных данных>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)>]
DynamicCoordinates=ДинамичныеКоординаты
DynamicCoordinates.Syntax=[ <Точка>, <x-Coordinate>, <y-Coordinate> ]\n[ <Точка>, <x-Coordinate>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity=Эксцентриситет
Eccentricity.Syntax=[ <Коника> ]
Eigenvalues.SyntaxCAS=[ <Матрица> ]
Eigenvectors.SyntaxCAS=[ <Матрица> ]
Element=Элемент
Element.Syntax=[ <Список>, <Номер элемента> ]\n[ <Матрица>, <Строка>, <Столбец> ]\n[ <Список>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Список>, <Номер элемента> ]\n[ <Матрица>, <Строка>, <Столбец> ]
Eliminate.Syntax=[ <Список многочленов>, <Список переменных> ]
Ellipse=Эллипс
Ellipse.Syntax=[ <Фокус>, <Фокус>, <Длина главной полуоси> ]\n[ <Фокус>, <Фокус>, <Отрезок> ]\n[ <Фокус>, <Фокус>, <Точка> ]
Ends=Окончание
Ends.Syntax=[ <Квадрика> ]
Envelope=Огибающая
Envelope.Syntax=[ <Контур>, <Точка> ]
Erlang=ЭрлангаРаспр
Erlang.Syntax=[ <Параметр формы>, <Rate>, <Переменная> ]\n[ <Параметр формы>, <Rate>, <Переменная>, <Интегральная> ]\n[ <Параметр формы>, <Rate>, x, <Интегральная> ]
Evaluate=Вычислить
Excentricity=ЛинейныйЭксцентриситет
Excentricity.Syntax=[ <Коника> ]
Execute=Выполнить
Execute.Syntax=[ <Список> ]\n[ <Список>, <Параметр>, <Параметр>, ... ]
Expand=Раскрыть
Expand.Syntax=[ <Выражение> ]
Exponential=ЭкспРасп
Exponential.Syntax=[ <Лямбда>, <Переменная> ]\n[ <Лямбда>, <Переменная>, <Интегральная> ]\n[ <Лямбда>, x, <Интегральная> ]
Exponential.SyntaxCAS=[ <Лямбда>, <Переменная> ]
ExportImage.Syntax=[ <Property>, <Число>, <Property>, <Число>, ... ]
ExtendedGCD.Syntax=[ <Целое>, <Целое>]\n[ <Многочлен>, <Многочлен>]
Extremum=Экстремум
Extremum.Syntax=[ <Многочлен> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]
Extremum.SyntaxCAS=[ <Функция> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]
FDistribution=FРасп
FDistribution.Syntax=[ <Числитель Степени свободы>, <Знаменатель Степени свободы>, <Переменная> ]\n[ <Числитель Степени свободы>, <Знаменатель Степени свободы>, <Переменная>, <Интегральная> ]\n[ <Числитель Степени свободы>, <Знаменатель Степени свободы>, x, <Интегральная> ]
FDistribution.SyntaxCAS=[ <Числитель Степени свободы>, <Знаменатель Степени свободы>, <Переменная> ]
Factor=Разложить
Factor.Syntax=[ <Многочлен> ]
Factor.SyntaxCAS=[ <Число> ]\n[ <Многочлен> ]\n[ <Выражение>, <Переменная> ]
Factors=Разложения
Factors.Syntax=[ <Многочлен> ]\n[ <Число> ]
FillCells=ЗаполнитьЯчейки
FillCells.Syntax=[ <Ячейка>, <Объект> ]\n[ <Ячейка>, <Список> ]\n[ <Ячейка>, <Матрица> ]
FillColumn=ЗаполнитьСтолбец
FillColumn.Syntax=[ <Столбец>, <Список> ]
FillRow=ЗаполнитьСтроку
FillRow.Syntax=[ <Строка>, <Список> ]
First=Начало
First.Syntax=[ <Список> ]\n[ <Текст> ]\n[ <Список>, <Число элементов> ]\n[ <Текст>, <Число элементов> ]\n[ <Локус>, <Число элементов> ]
First.SyntaxCAS=[ <Список> ]\n[ <Список>, <Число элементов> ]
FirstAxis=ФокальнаяОсь
FirstAxis.Syntax=[ <Коника> ]
FirstAxisLength=БольшаяПолуось
FirstAxisLength.Syntax=[ <Коника> ]
Fit=ПодобратьАпроксимация
Fit.Syntax=[ <Список точек>, <Список функций> ]\n[ <Список точек>, <Функция> ]
FitExp=ЭкспоненциальнаяАппроксимация
FitExp.Syntax=[ <Список точек> ]
FitGrowth=ПоказательнаяАппроксимация
FitGrowth.Syntax=[ <Список точек> ]
FitImplicit.Syntax=[ <Список точек>, <Order> ]
FitLineX=ЛинейнаяАппроксимацияПоX
FitLineX.Syntax=[ <Список точек> ]
FitLineY=ЛинейнаяАппроксимацияПоY
FitLineY.Syntax=[ <Список точек> ]
FitLog=ЛогарифмическаяАппроксимация
FitLog.Syntax=[ <Список точек> ]
FitLogistic=ЛогистическаяАппроксимация
FitLogistic.Syntax=[ <Список точек> ]
FitPoly=ПолиномиальнаяАппроксимация
FitPoly.Syntax=[ <Список точек>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=СтепеннаяАппроксимация
FitPow.Syntax=[ <Список точек> ]
FitSin=СинусоидальнаяАппроксимация
FitSin.Syntax=[ <Список точек> ]
Flatten=Выравнять
Flatten.Syntax=[ <Список> ]
Focus=Фокус
Focus.Syntax=[ <Коника> ]
FractionText=ДробьВТекст
FractionText.Syntax=[ <Число> ]\n[ <Точка> ]\n[ <Число>, <Boolean Single fraction> ]
Frequency=Частота
Frequency.Syntax=[ <Список исходных данных> ]\n[ <Интегральная>, <Список исходных данных> ]\n[ <Список классовых границ>, <Список исходных данных> ]\n[ <Список>, <Список> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных> ]\n[ <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon=МногоугольникЧастот
FrequencyPolygon.Syntax=[ <Список классовых границ>, <Список высот> ]\n[ <Список классовых границ>, <Список исходных данных>, <Использовать плотность>, <Density Scale Factor (optional)> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных>, <Использовать плотность>, <Density Scale Factor (optional)> ]
FrequencyTable=ЧастотнаяТаблица
FrequencyTable.Syntax=[ <Список исходных данных>, <Scale Factor (optional)> ]\n[ <Интегральная>, <Список исходных данных> ]\n[ <Список классовых границ>, <Список исходных данных> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных> ]\n[ <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase=ПереводВДесятичнуюСистему
FromBase.Syntax=[ <Число в текстовом формате>, <Основание> ]
Function=Функция
Function.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Список чисел> ]
Function.Syntax3D=[ <Список чисел> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Выражение>, <Parameter Variable 1>, <Начальное значение>, <Конечное значение>, <Parameter Variable 2>, <Начальное значение>, <Конечное значение> ]
Function.SyntaxCAS=[ <Функция>, <Начальное значение>, <Конечное значение> ]
FutureValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Present Value (optional)>, <Type (optional)> ]
GCD=НОД
GCD.Syntax=[ <Список чисел> ]\n[ <Число>, <Число> ]
GCD.SyntaxCAS=[ <Список чисел> ]\n[ <Список многочленов> ]\n[ <Число>, <Число> ]\n[ <Многочлен>, <Многочлен> ]
Gamma=ГаммаРасп
Gamma.Syntax=[ <Альфа>, <Бета>, <Переменная> ]\n[ <Альфа>, <Бета>, <Переменная>, <Интегральная>  ]\n[ <Альфа>, <Бета>, x, <Интегральная> ]
Gamma.SyntaxCAS=[ <Альфа>, <Бета>, <Переменная> ]
GeometricMean=СреднееГеометрическое
GeometricMean.Syntax=[ <Список чисел> ]
GetTime=Время
GetTime.Syntax=[]\n[ <Формат> ]
GroebnerDegRevLex.Syntax=[ <Список многочленов> ]\n[ <Список многочленов>, <Список переменных> ]
GroebnerLex.Syntax=[ <Список многочленов> ]\n[ <Список многочленов>, <Список переменных> ]
GroebnerLexDeg.Syntax=[ <Список многочленов> ]\n[ <Список многочленов>, <Список переменных> ]
HarmonicMean=СреднееГармоническое
HarmonicMean.Syntax=[ <Список чисел> ]
Height=Высота
Height.Syntax=[ <Объектt> ]
HideLayer=СпрятатьСлой
HideLayer.Syntax=[ <Число> ]
Histogram=Гистограмма
Histogram.Syntax=[ <Список классовых границ>, <Список высот> ]\n[ <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight=ПраваяГистограмма
HistogramRight.Syntax=[ <Список классовых границ>, <Список высот> ]\n[ <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <Интегральная>, <Список классовых границ>, <Список исходных данных>, <Use Density>, <Density Scale Factor (optional)> ]
HyperGeometric=ГипергеометРасп
HyperGeometric.Syntax=[ <Размер совокупности>, <Число успехов>, <Размер выборки> ]\n[ <Размер совокупности>, <Число успехов>, <Размер выборки>, <Интегральная> ]\n[ <Размер совокупности>, <Число успехов>, <Размер выборки>, <Переменная>, <Интегральная> ]
HyperGeometric.SyntaxCAS=[ <Размер совокупности>, <Число успехов>, <Размер выборки>, <Переменная>, <Интегральная> ]
Hyperbola=Гипербола
Hyperbola.Syntax=[ <Фокус>, <Фокус>, <Длина главной полуоси> ]\n[ <Фокус>, <Фокус>, <Отрезок> ]\n[ <Фокус>, <Фокус>, <Точка> ]
IFactor=ИррацФакторизация
IFactor.Syntax=[ <Многочлен> ]
IFactor.SyntaxCAS=[ <Выражение> ]
Icosahedron=Икосаэдр
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
Identity=ЕдиничнаяМатрица
Identity.Syntax=[ <Число> ]
If=Если
If.Syntax=[ <Условие>, <То> ]\n[ <Условие>, <То>, <Иначе> ]
ImplicitCurve=НеявнаяКривая
ImplicitCurve.Syntax=[ <Список точек> ]\n[ <f(x, y)> ]
ImplicitDerivative=ПроизводнаяНеявнойФункции
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Выражение>, <Зависимая переменная>, <Независимая переменная> ]
Incircle=ВписаннаяОкружность
Incircle.Syntax=[ <Точка>, <Точка>, <Точка> ]
IndexOf=Позиция
IndexOf.Syntax=[ <Объект>, <Список> ]\n[ <Текст>, <Текст> ]\n[ <Объект>, <Список>, <Начиная с> ]\n[ <Текст>, <Текст>, <Начиная с> ]
Insert=Вставить
Insert.Syntax=[ <Список>, <Список>, <Позиция> ]\n[ <Объект>, <Список>, <Позиция> ]
Integral=Интеграл
Integral.Syntax=[ <Функция> ]\n[ <Функция>, <Переменная> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Начальное значение>, <Конечное значение>, <Булева вычислений> ]
Integral.SyntaxCAS=[ <Функция> ]\n[ <Функция>, <Переменная> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Переменная>, <Начальное значение>, <Конечное значение> ]
IntegralBetween=ИнтегралМежду
IntegralBetween.Syntax=[ <Функция>, <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Функция>, <Начальное значение>, <Конечное значение>, <Булева вычислений> ]
IntegralBetween.SyntaxCAS=[ <Функция>, <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Функция>, <Переменная>, <Начальное значение>, <Конечное значение> ]
IntegralSymbolic.Syntax=[ <Функция> ]\n[ <Функция>, <Переменная> ]
InteriorAngles.Syntax=[ <Многоугольник> ]
Intersect=Пересечение
Intersect.Syntax=[ <Объект>, <Объект> ]\n[ <Объект>, <Объект>, <Index of Intersection Point> ]\n[ <Объект>, <Объект>, <Initial Point> ]\n[ <Функция>, <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Curve 1>, <Curve 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <Функция>, <Функция> ]
IntersectConic.Syntax=[ <Плоскость>, <Квадрика> ]\n[ <Квадрика>, <Квадрика> ]
IntersectPath=ПересечьКонтуры
IntersectPath.Syntax=[ <Прямая>, <Многоугольник> ]\n[ <Многоугольник>, <Многоугольник> ]
IntersectPath.Syntax3D=[ <Прямая>, <Многоугольник> ]\n[ <Многоугольник>, <Многоугольник> ]\n[ <Плоскость>, <Многоугольник> ]\n[ <Плоскость>, <Квадрика> ]
Intersection=ПересечениеМножеств
Intersection.Syntax=[ <Список>, <Список> ]
InverseBeta.Syntax=[ <Альфа>, <Бета>, <Вероятность> ]
InverseBinomial=БиномРаспОбр
InverseBinomial.Syntax=[ <Число испытаний>, <Вероятность успеха>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Вероятность успеха>, <Число успехов> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Вероятность успеха>, <Число успехов> ]
InverseCauchy=КошиРаспОбр
InverseCauchy.Syntax=[ <Медиана>, <Коэффициент масштаба>, <Вероятность> ]
InverseChiSquared=ХиКвадратРаспОбр
InverseChiSquared.Syntax=[ <Степени свободы>, <Вероятность> ]
InverseExponential=ЭкспРаспОбр
InverseExponential.Syntax=[ <Лямбда>, <Вероятность> ]
InverseFDistribution=FРаспОбр
InverseFDistribution.Syntax=[ <Числитель Степени свободы>, <Знаменатель Степени свободы>, <Вероятность> ]
InverseGamma=ГаммаРаспОбр
InverseGamma.Syntax=[ <Альфа>, <Бета>, <Вероятность> ]
InverseHyperGeometric=ГипергеометРаспОбр
InverseHyperGeometric.Syntax=[ <Размер совокупности>, <Число успехов>, <Размер выборки>, <Вероятность> ]
InverseLaplace.Syntax=[ <Функция> ]\n[ <Функция>, <Переменная> ]\n[ <Функция>, <Переменная>, <Переменная> ]
InverseLogNormal=ЛогНормРаспОбр
InverseLogNormal.Syntax=[ <Среднее>, <Стандартное отклонение>, <Вероятность> ]
InverseLogistic=ЛогистРаспОбр
InverseLogistic.Syntax=[ <Среднее>, <Коэффициент масштаба>, <Вероятность> ]
InverseNormal=НормРаспОбр
InverseNormal.Syntax=[ <Среднее>, <Стандартное отклонение>, <Cumulative Probability> ]
InversePascal=ПаскальРаспОбр
InversePascal.Syntax=[ <Число успехов>, <Вероятность успеха>, <Вероятность> ]
InversePoisson=ПуассонРаспОбр
InversePoisson.Syntax=[ <Среднее>, <Вероятность> ]
InverseTDistribution=СтьюдентРаспОбр
InverseTDistribution.Syntax=[ <Степени свободы>, <Вероятность> ]
InverseWeibull=ВейбуллРаспОбр
InverseWeibull.Syntax=[ <Параметр формы>, <Коэффициент масштаба>, <Вероятность> ]
InverseZipf=ЦипфРаспОбр
InverseZipf.Syntax=[ <Число элементов>, <Показатель>, <Вероятность> ]
Invert=ОбратнаяМатрица
Invert.Syntax=[ <Матрица> ]\n[ <Функция> ]
IsFactored.Syntax=[ <Многочлен> ]
IsInRegion=Внутри
IsInRegion.Syntax=[ <Точка>, <Область> ]
IsInteger=Целое
IsInteger.Syntax=[ <Число> ]
IsPrime=Простое
IsPrime.Syntax=[ <Число> ]
IsTangent.Syntax=[ <Прямая>, <Коника> ]
IsVertexForm.Syntax=[ <Функция> ]
Iteration=Итерация
Iteration.Syntax=[ <Функция>, <Начальное значение>, <Number of Iterations> ]\n[ <Выражение>, <Variables>, <Start Values>, <Count> ]
IterationList=РядИтераций
IterationList.Syntax=[ <Функция>, <Начальное значение>, <Number of Iterations> ]\n[ <Выражение>, <Variables>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <Функция>, <Начальное значение>, <Number of Iterations> ]
Join=Конкатенация
Join.Syntax=[ <List of Lists> ]\n[ <Список>, <Список>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Матрица> ]
KeepIf=Фильтр
KeepIf.Syntax=[ <Условие>, <Список> ]\n[ <Условие>, <Переменная>, <Список> ]
LCM=НОК
LCM.Syntax=[ <Список чисел> ]\n[ <Число>, <Число> ]
LCM.SyntaxCAS=[ <Список чисел> ]\n[ <Список многочленов> ]\n[ <Число>, <Число> ]\n[ <Многочлен>, <Многочлен> ]
LUDecomposition.Syntax=[ <Матрица> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Объект> ]\n[ <Объект>, <Boolean for Substitution of Variables> ]\n[ <Объект>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <Функция> ]\n[ <Функция>, <Переменная> ]\n[ <Функция>, <Переменная>, <Переменная> ]
Last=Конец
Last.Syntax=[ <Список> ]\n[ <Текст> ]\n[ <Список>, <Число элементов> ]\n[ <Текст>, <Число элементов> ]
Last.SyntaxCAS=[ <Список> ]\n[ <Список>, <Число элементов> ]
LeftSide=ЛеваяЧасть
LeftSide.Syntax=[ <Уравнение> ]
LeftSide.SyntaxCAS=[ <Уравнение> ]\n[ <Список уравнений> ]\n[ <Список уравнений>, <Индекс> ]
LeftSum=СуммаСлева
LeftSum.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение>, <Количество прямоугольников> ]
Length=Длина
Length.Syntax=[ <Объект> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Начальная точка>, <Конечная точка> ]\n[ <Кривая>, <Start t-Value>, <End t-Value> ]\n[ <Кривая>, <Начальная точка>, <Конечная точка> ]
Length.SyntaxCAS=[ <Список> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Переменная>, <Начальное значение>, <Конечное значение> ]
LetterToUnicode=СимволВUnicdoe
LetterToUnicode.Syntax=[ <Текст> ]
Limit=Предел
Limit.Syntax=[ <Функция>, <Число> ]
Limit.SyntaxCAS=[ <Выражение>, <Число> ]\n[ <Выражение>, <Переменная>, <Число> ]
LimitAbove=ВерхнийПредел
LimitAbove.Syntax=[ <Функция>, <Число> ]
LimitAbove.SyntaxCAS=[ <Выражение>, <Число> ]\n[ <Выражение>, <Переменная>, <Число> ]
LimitBelow=НижнийПредел
LimitBelow.Syntax=[ <Функция>, <Число> ]
LimitBelow.SyntaxCAS=[ <Выражение>, <Число> ]\n[ <Выражение>, <Переменная>, <Число> ]
Line=Прямая
Line.Syntax=[ <Точка>, <Точка> ]\n[ <Точка>, <Параллельная прямая> ]\n[ <Точка>, <Направление> ]
LineBisector=СрединныйПерпендикуляр
LineBisector.Syntax=[ <Отрезок> ]\n[ <Точка>, <Точка> ]
LineBisector.Syntax3D=[ <Отрезок> ]\n[ <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
LineGraph.Syntax=[ <Список абсцисс>, <Список ординат> ]
Locus=Локус
Locus.Syntax=[ <Точка создающая Локус>, <Точка> ]\n[ <Точка создающая Локус>, <Ползунок> ]\n[ <Наклон поля>, <Точка> ]\n[ <f(x, y)>, <Точка> ]
LocusEquation=ЛокусУравнение
LocusEquation.Syntax=[ <Локус> ]\n[ <Locus Point>, <Moving Point> ]\n[ <Логическое выражение>, <Moving Point> ]
LogNormal=ЛогНормРасп
LogNormal.Syntax=[ <Среднее>, <Стандартное отклонение>, <Переменная> ]\n[ <Среднее>, <Стандартное отклонение>, <Переменная>, <Интегральная>  ]\n[ <Среднее>, <Стандартное отклонение>, x, <Интегральная> ]
Logistic=ЛогистическоеРаспр
Logistic.Syntax=[ <Среднее>, <Коэффициент масштаба>, <Переменная> ]\n[ <Среднее>, <Коэффициент масштаба>, <Переменная>, <Интегральная>  ]\n[ <Среднее>, <Коэффициент масштаба>, x, <Интегральная> ]
LowerSum=НижняяСумма
LowerSum.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение>, <Количество прямоугольников> ]
MatrixRank=РангМатрицы
MatrixRank.Syntax=[ <Матрица> ]
Max.Syntax=[ <Interval> ]\n[ <Число>, <Число> ]\n[ <Список> ]\n[ <Список данных>, <Список частот> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]
Max.SyntaxCAS=[ <Список> ]\n[ <Interval> ]\n[ <Число>, <Число> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Список данных>, <Список частот> ]
Maximize=Максимизировать
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=СреднееАрифметическое
Mean.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
MeanX=СреднееX
MeanX.Syntax=[ <Список точек> ]
MeanY=СреднееY
MeanY.Syntax=[ <Список точек> ]
Median=Медиана
Median.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
Median.SyntaxCAS=[ <Список чисел> ]
Midpoint=Середина
Midpoint.Syntax=[ <Отрезок> ]\n[ <Коника> ]\n[ <Interval> ]\n[ <Точка>, <Точка> ]
Min.Syntax=[ <Interval> ]\n[ <Число>, <Число> ]\n[ <Список> ]\n[ <Список данных>, <Список частот> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]
Min.SyntaxCAS=[ <Список> ]\n[ <Interval> ]\n[ <Число>, <Число> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Список данных>, <Список частот> ]
MinimalPolynomial.Syntax=[ <Матрица> ]
Minimize=Минимизировать
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree=МинимальноеОстовноеДерево
MinimumSpanningTree.Syntax=[ <Список точек> ]
Mirror=Отразить
Mirror.Syntax=[ <Объект>, <Точка> ]\n[ <Объект>, <Прямая> ]\n[ <Объект>, <Окружность> ]
Mirror.Syntax3D=[ <Объект>, <Точка> ]\n[ <Объект>, <Прямая> ]\n[ <Объект>, <Плоскость> ]\n[ <Объект>, <Окружность> ]
MixedNumber=ПравильнаяДробь
MixedNumber.SyntaxCAS=[ <Число> ]
Mod.Syntax=[ <Делимое число>, <Делитель число> ]\n[ <Делимый многочлен>, <Делитель многочлен> ]
Mode=Мода
Mode.Syntax=[ <Список чисел> ]
ModularExponent.Syntax=[ <Число>, <Число>, <Число> ]
NDerivative.Syntax=[ <Функция> ]\n[ <Функция>, <Order> ]
NIntegral=NИнтеграл
NIntegral.Syntax=[ <Функция> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Начальное значение>, <Start y-Value>, <Конечное значение> ]
NIntegral.SyntaxCAS=[ <Функция>, <Начальное значение>, <Конечное значение> ]\n[ <Функция>, <Переменная>, <Начальное значение>, <Конечное значение> ]
NInvert.Syntax=[ <Функция> ]
NSolutions=ЧисленныеРешения
NSolutions.Syntax=[ <Уравнение> ]
NSolutions.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Переменная> ]\n[ <Уравнение>, <Переменная = начальное значение> ]\n[ <Список уравнений>, <Список переменных> ]
NSolve=NРешить
NSolve.Syntax=[ <Уравнение> ]
NSolve.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Переменная> ]\n[ <Уравнение>, <Переменная = начальное значение> ]\n[ <Список уравнений>, <Список переменных> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Initial x-coordinate>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name=Имя
Name.Syntax=[ <Объект> ]
Net.Syntax=[ <Polyhedron>, <Число> ]\n[ <Polyhedron>, <Число>, <Face>, <Edge>, <Edge>, ... ]
NextPrime=СледующееПростоеЧисло
NextPrime.Syntax=[ <Число> ]
Normal=НормРасп
Normal.Syntax=[ <Среднее>, <Стандартное отклонение>, <Переменная> ]\n[ <Среднее>, <Стандартное отклонение>, <Переменная>, <Интегральная> ]\n[ <Среднее>, <Стандартное отклонение>, x, <Интегральная> ]\n[ <Среднее>, <Стандартное отклонение>, <Variable Value u> , <Variable Value v> ]
NormalQuantilePlot=ГрафикНормальнойВероятности
NormalQuantilePlot.Syntax=[ <Список исходных данных> ]
Normalize.Syntax=[ <Список чисел> ]\n[ <Список точек> ]
Numerator=Числитель
Numerator.Syntax=[ <Число> ]\n[ <Функция> ]
Numerator.SyntaxCAS=[ <Выражение> ]
Numeric=ДесятичнаяДробь
Numeric.SyntaxCAS=[ <Выражение> ]\n[ <Выражение>, <Колличество знаков> ]
Object=Объект
Object.Syntax=[ <Имя объекта> ]
Octahedron=Октаэдр
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
Ordinal=ПорядковыйНомер
Ordinal.Syntax=[ <Целое> ]
OrdinalRank=РасположитьОрдинально
OrdinalRank.Syntax=[ <Список> ]
OrthogonalLine=Перпендикуляр
OrthogonalLine.Syntax=[ <Точка>, <Прямая> ]\n[ <Точка>, <Отрезок> ]\n[ <Точка>, <Вектор> ]
OrthogonalLine.Syntax3D=[ <Точка>, <Прямая> ]\n[ <Точка>, <Отрезок> ]\n[ <Точка>, <Вектор> ]\n[ <Точка>, <Плоскость> ]\n[ <Прямая>, <Прямая> ]\n[ <Точка>, <Direction>, <Direction> ]\n[ <Точка>, <Прямая>, <Context> ]
OrthogonalPlane=ПерпендикулярнаяПлоскость
OrthogonalPlane.Syntax=[ <Точка>, <Прямая> ]\n[ <Точка>, <Вектор> ]
OrthogonalVector=НормальныйВектор
OrthogonalVector.Syntax=[ <Прямая> ]\n[ <Отрезок> ]\n[ <Вектор> ]
OrthogonalVector.Syntax3D=[ <Прямая> ]\n[ <Отрезок> ]\n[ <Вектор> ]\n[ <Плоскость> ]
OrthogonalVector.SyntaxCAS=[ <Вектор> ]
OsculatingCircle=КругКривизны
OsculatingCircle.Syntax=[ <Точка>, <Объект> ]
PMCC=КоэффициентКорреляции
PMCC.Syntax=[ <Список точек> ]\n[ <Список абсцисс>, <Список ординат> ]
Pan=СдвинутьЭкран
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=Парабола
Parabola.Syntax=[ <Точка>, <Прямая> ]
Parameter=Параметр
Parameter.Syntax=[ <Коника> ]
ParametricDerivative=ПроизводнаяПараметрическая
ParametricDerivative.Syntax=[ <Кривая> ]
ParseToFunction=ПеревестиВФункцию
ParseToFunction.Syntax=[ <Текст> ]\n[ <Функция>, <Текст> ]
ParseToNumber=ПеревстиВЧисло
ParseToNumber.Syntax=[ <Текст> ]\n[ <Число>, <Текст> ]
PartialFractions=ПростейшиеДроби
PartialFractions.Syntax=[ <Функция> ]
PartialFractions.SyntaxCAS=[ <Функция> ]\n[ <Функция>, <Переменная> ]
Pascal=ПаскальРасп
Pascal.Syntax=[ <Число успехов>, <Вероятность успеха> ]\n[ <Число успехов>, <Вероятность успеха>, <Интегральная> ]\n[ <Число успехов>, <Вероятность успеха>, <Переменная>, <Интегральная> ]
Pascal.SyntaxCAS=[ <Число успехов>, <Вероятность успеха>, <Переменная>, <Интегральная> ]
PathParameter=ПараметрКонтура
PathParameter.Syntax=[ <Точка на контуре> ]
Payment.Syntax=[ <Rate>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PenStroke.Syntax=[ <Точка>, ..., <Точка> ]
Percentile=Процентиль
Percentile.Syntax=[ <Список чисел>, <Процент> ]
Perimeter=Периметр
Perimeter.Syntax=[ <Многоугольник> ]\n[ <Коника> ]\n[ <Локус> ]
Periods.Syntax=[ <Rate>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <Список частот> ]\n[ <Список частот>, <Center>, <Радиус> ]
Plane=Плоскость
Plane.Syntax=[ <Многоугольник> ]\n[ <Коника> ]\n[ <Точка>, <Плоскость> ]\n[ <Точка>, <Прямая> ]\n[ <Прямая>, <Прямая> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Вектор>, <Вектор> ]
Plane.SyntaxCAS=[ <Точка>, <Точка>, <Точка> ]
PlaneBisector=БиссектрисаПлоскость
PlaneBisector.Syntax=[ <Отрезок> ]\n[ <Точка>, <Точка> ]
PlaySound.Syntax=[ <Файл> ]\n[ <Boolean Play> ]\n[ <Функция>, <Минимальное значение>, <Максимальное значение> ]\n[ <Функция>, <Минимальное значение>, <Максимальное значение>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point=Точка
Point.Syntax=[ <Объект> ]\n[ <Объект>, <Параметр> ]\n[ <Точка>, <Вектор> ]\n[ <Список> ]
PointIn=ТочкаВнутри
PointIn.Syntax=[ <Область> ]
PointList=СписокТочек
PointList.Syntax=[ <Список> ]
Poisson=ПуассонРасп
Poisson.Syntax=[ <Среднее> ]\n[ <Среднее>, <Интегральная> ]\n[ <Среднее>, <Переменная>, <Интегральная> ]
Poisson.SyntaxCAS=[ <Среднее>, <Переменная>, <Интегральная> ]
Polar=Поляра
Polar.Syntax=[ <Точка>, <Коника> ]\n[ <Прямая>, <Коника> ]
PolyLine=Ломаная
PolyLine.Syntax=[ <Список точек> ]\n[ <Точка>, ..., <Точка> ]
Polygon=Многоугольник
Polygon.Syntax=[ <Список точек> ]\n[ <Точка>, ..., <Точка> ]\n[ <Точка>, <Точка>, <Number of Vertices> ]
Polygon.Syntax3D=[ <Список точек> ]\n[ <Точка>, ..., <Точка> ]\n[ <Точка>, <Точка>, <Number of Vertices> ]\n[ <Точка>, <Точка>, <Number of Vertices>, <Direction> ]
Polynomial=Многочлен
Polynomial.Syntax=[ <Функция> ]\n[ <Список точек> ]
Polynomial.SyntaxCAS=[ <Функция> ]\n[ <Функция>, <Переменная> ]
PresentValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime=ПредыдущееПростоеЧисло
PreviousPrime.Syntax=[ <Число> ]
PrimeFactors=ПростыеМножители
PrimeFactors.Syntax=[ <Число> ]
Prism=Призма
Prism.Syntax=[ <Многоугольник>, <Точка> ]\n[ <Многоугольник>, <Высота> ]\n[ <Точка>, <Точка>, ... ]
Product=Произведение
Product.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Число элементов> ]\n[ <Список чисел>, <Список частот> ]\n[ <Выражение>, <Переменная>, <Начальное значение>, <Конечное значение> ]
Product.SyntaxCAS=[ <Список выражений> ]\n[ <Выражение>, <Переменная>, <Начиная с>, <Конечное значение> ]
Prove=Проверить
Prove.Syntax=[ <Логическое выражение> ]
ProveDetails=ПроверитьДетально
ProveDetails.Syntax=[ <Логическое выражение> ]
Pyramid=Пирамида
Pyramid.Syntax=[ <Многоугольник>, <Точка> ]\n[ <Многоугольник>, <Высота> ]\n[ <Точка>, <Точка>, <Точка>, <Точка>, ... ]
Q1=Q1
Q1.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
Q3=Q3
Q3.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
QRDecomposition.Syntax=[ <Матрица> ]
QuadricSide=Сторона
QuadricSide.Syntax=[ <Квадрика> ]
RSquare=КоэффициентДетерминации
RSquare.Syntax=[ <Список точек>, <Функция> ]
Radius=Радиус
Radius.Syntax=[ <Коника> ]
Random=СлучайноеЧисло
Random.Syntax=[ <Минимальное целое число>, <Максимальное целое число> ]\n[ <Минимальное целое число>, <Максимальное целое число>, <Number of Samples> ]\n[ <Минимальное целое число>, <Максимальное целое число>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <Минимальное целое число>, <Максимальное целое число> ]\n[ <Минимальное целое число>, <Максимальное целое число>, <Number of Samples> ]
RandomBinomial=БиномРаспСлучайное
RandomBinomial.Syntax=[ <Число испытаний>, <Вероятность> ]
RandomDiscrete.Syntax=[ <Список>, <Список> ]
RandomElement=СлучайныйЭлемент
RandomElement.Syntax=[ <Список> ]
RandomNormal=НормРаспСлучайное
RandomNormal.Syntax=[ <Среднее>, <Стандартное отклонение> ]
RandomPointIn.Syntax=[ <Область> ]\n[ <Список точек> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=ПуассонРаспСлучайное
RandomPoisson.Syntax=[ <Среднее> ]
RandomPolynomial=СлучайныйМногочлен
RandomPolynomial.Syntax=[ <Степень>, <Минимум для коэффициента>, <Максимум для коэффициента> ]
RandomPolynomial.SyntaxCAS=[ <Степень>, <Минимум для коэффициента>, <Максимум для коэффициента> ]\n[ <Переменная>, <Степень>, <Минимум для коэффициента>, <Максимум для коэффициента> ]
RandomUniform=СлучайноеНепрерывноеРавномерноеРаспр
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Number of Samples> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize=ПредставивтьВВидеДроби
Rationalize.SyntaxCAS=[ <Число> ]
Ray=Луч
Ray.Syntax=[ <Начальная точка>, <Точка> ]\n[ <Начальная точка>, <Направление> ]
ReadText.Syntax=[ <Текст> ]
RectangleSum=СуммаПрямоугольников
RectangleSum.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение>, <Количество прямоугольников>, <Положение начала прямоугольника> ]
ReducedRowEchelonForm=ПриведённоСтупенчатаяФорма
ReducedRowEchelonForm.Syntax=[ <Матрица> ]
Relation=Отношение
Relation.Syntax=[ <Список> ]\n[ <Объект>, <Объект> ]
RemovableDiscontinuity.Syntax=[ <Функция> ]
Remove.Syntax=[ <Список>, <Список> ]
RemoveUndefined=УдалитьНеопределённыеЭлементы
RemoveUndefined.Syntax=[ <Список> ]
Rename=Переименовать
Rename.Syntax=[ <Объект>, <Имя> ]
Repeat.Syntax=[ <Число>, <Scripting Command>, <Scripting Command>, ... ]
ReplaceAll.Syntax=[ <Текст>, <Text to Match>, <Text to Replace> ]
ResidualPlot=ГрафикОстатков
ResidualPlot.Syntax=[ <Список точек>, <Функция> ]
Reverse=Обратить
Reverse.Syntax=[ <Список> ]
RightSide=ПраваяЧасть
RightSide.Syntax=[ <Уравнение> ]
RightSide.SyntaxCAS=[ <Уравнение> ]\n[ <Список уравнений> ]\n[ <Список уравнений>, <Индекс> ]
RigidPolygon=ЖёсткийМногоугольник
RigidPolygon.Syntax=[ <Многоугольник> ]\n[ <Многоугольник>, <Смещение по x>, <Смещение по y> ]\n[ <Свободная точка>, ..., <Свободная точка> ]
Root=Корень
Root.Syntax=[ <Многочлен> ]\n[ <Функция>, <Первое приближение> ]\n[ <Функция>, <Начальное значение>, <Конечное значение> ]
Root.SyntaxCAS=[ <Многочлен> ]
RootList=СписокКорней
RootList.Syntax=[ <Список> ]
RootMeanSquare=СреднееКвадратическое
RootMeanSquare.Syntax=[ <Список чисел> ]
Roots=НулиФункции
Roots.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение> ]
Rotate=Повернуть
Rotate.Syntax=[ <Объект>, <Угол> ]\n[ <Объект>, <Угол>, <Точка> ]
Rotate.Syntax3D=[ <Объект>, <Угол> ]\n[ <Объект>, <Угол>, <Точка> ]\n[ <Объект>, <Угол>, <Ось вращения> ]\n[ <Объект>, <Угол>, <Точка на оси>, <Направление оси или плоскости> ]
RotateText=ПовернутьТекст
RotateText.Syntax=[ <Текст>, <Угол> ]
Row=Строка
Row.Syntax=[ <Ячейка> ]
RunClickScript=ЗапуститьСкриптПоЩелчку
RunClickScript.Syntax=[ <Объект> ]
RunUpdateScript=ЗапуститьСкриптПоОбновлению
RunUpdateScript.Syntax=[ <Объект> ]
SD=СтандартноеОтклонение
SDX=СтандартноеОтклонениеX
SDX.Syntax=[ <Список точек> ]
SDY=СтандартноеОтклонениеY
SDY.Syntax=[ <Список точек> ]
SVD.Syntax=[ <Матрица> ]
SXX.Syntax=[ <Список чисел> ]\n[ <Список точек> ]
SXY.Syntax=[ <Список точек> ]\n[ <Список чисел>, <Список чисел> ]
SYY.Syntax=[ <Список точек> ]
Sample=Выборка
Sample.Syntax=[ <Список>, <Размер> ]\n[ <Список>, <Размер>, <C перестановками> ]
SampleSD=ВыборкаСтандартноеОтклонение
SampleSD.SyntaxCAS=[ <Список чисел> ]
SampleSDX=ВыборкаСтандартноеОтклонениеX
SampleSDX.Syntax=[ <Список точек> ]
SampleSDY=ВыборкаСтандартноеОтклонениеY
SampleSDY.Syntax=[ <Список точек> ]
SampleVariance=ВыборочнаяДисперсия
SampleVariance.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
SampleVariance.SyntaxCAS=[ <Список чисел> ]
ScientificText=ЭкспоненциальнаяЗапись
ScientificText.Syntax=[ <Число> ]\n[ <Число>, <Точность> ]
SecondAxis=ВторичнаяОсь
SecondAxis.Syntax=[ <Коника> ]
SecondAxisLength=МалаяПолуось
SecondAxisLength.Syntax=[ <Коника> ]
Sector=Сектор
Sector.Syntax=[ <Коника>, <Точка>, <Точка> ]\n[ <Коника>, <Значение параметра>, <Значение параметра> ]
Segment=Отрезок
Segment.Syntax=[ <Точка>, <Точка> ]\n[ <Точка>, <Длина> ]
SelectObjects=ВыбратьОбъекты
SelectObjects.Syntax=[ ]\n[ <Объект>, <Объект>, ... ]
SelectedElement=ВыбранныйЭлемент
SelectedElement.Syntax=[ <Список> ]
SelectedIndex=НомерВыбранногоЭлемента
SelectedIndex.Syntax=[ <Список> ]
Semicircle=Полуокружность
Semicircle.Syntax=[ <Точка>, <Точка> ]
Sequence=Последовательность
Sequence.Syntax=[ <Конечное значение> ]\n[ <Начальное значение>, <Конечное значение> ]\n[ <Начальное значение>, <Конечное значение>, <Шаг> ]\n[ <Выражение>, <Переменная>, <Начальное значение>, <Конечное значение> ]\n[ <Выражение>, <Переменная>, <Начальное значение>, <Конечное значение>, <Шаг> ]
SetActiveView=ВыбратьАктивныйВид
SetActiveView.Syntax=[ <Полотно> ]\n[ <Плоскость> ]
SetAxesRatio=ОтношениеОсей
SetAxesRatio.Syntax=[ <Число>, <Число> ]
SetAxesRatio.Syntax3D=[ <Число>, <Число> ]\n[ <Число>, <Число>, <Число> ]
SetBackgroundColor=ВыбратьЦветФона
SetBackgroundColor.Syntax=[ <цвет> ]\n[ <Объект>, <цвет> ]\n[ <Красный>, <Зелёный>, <Синий> ]\n[ <Объект>, <Красный>, <Зелёный>, <Синий> ]
SetCaption=ВыбратьЗаголовок
SetCaption.Syntax=[ <Объект>, <Текст> ]
SetColor=ВыбратьЦвет
SetColor.Syntax=[ <Объект>, <цвет> ]\n[ <Объект>, <Красный>, <Зелёный>, <Синий> ]
SetConditionToShowObject=ВыбратьУсловияОтображенияОбъекта
SetConditionToShowObject.Syntax=[ <Объект>, <Условие> ]
SetConstructionStep.Syntax=[ <Число> ]
SetCoords=УказатьКоординаты
SetCoords.Syntax=[ <Объект>, <x>, <y> ]\n[ <Объект>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Объект>, <Число> ]\n[ <Отрезок>, <Число>, <Число>]
SetDynamicColor=ВыбратьДинамическуюОкраску
SetDynamicColor.Syntax=[ <Объект>, <Красный>, <Зелёный>, <Синий> ]\n[ <Объект>, <Красный>, <Зелёный>, <Синий>, <Заливка> ]
SetFilling=ВыбратьЗаливку
SetFilling.Syntax=[ <Объект>, <Число> ]
SetFixed=Зафиксировать
SetFixed.Syntax=[ <Объект>, <true | false> ]\n[ <Объект>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Объект>, <Image> ]\n[ <Объект>, <Текст> ]
SetLabelMode=ВидОбозначения
SetLabelMode.Syntax=[ <Объект>, <Число> ]
SetLayer=ВыбратьСлой
SetLayer.Syntax=[ <Объект>, <Слой> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle=ВыбратьТипЛинии
SetLineStyle.Syntax=[ <Объект>, <Число> ]
SetLineThickness=ВыбратьТолщинуЛинии
SetLineThickness.Syntax=[ <Объект>, <Число> ]
SetPerspective.Syntax=[ <Текст> ]
SetPointSize=ВыбратьРазмерТочки
SetPointSize.Syntax=[ <Объект>, <Число> ]
SetPointStyle=ВыбратьСтильТочки
SetPointStyle.Syntax=[ <Точка>, <Число> ]
SetSeed=ГенераторСлучайныхЧисел
SetSeed.Syntax=[ <Целое> ]
SetSpinSpeed.Syntax=[ <Число> ]
SetTooltipMode=УстановитьРежимТултип
SetTooltipMode.Syntax=[ <Объект>, <Число> ]
SetTrace=ПоказыватьСлед
SetTrace.Syntax=[ <Объект>, <true | false> ]
SetValue=ПрисвоитьЗначение
SetValue.Syntax=[ <Логическая переменная>, <0|1> ]\n[ <Объект>, <Объект> ]\n[ <Список>, <Число>, <Объект> ]
SetViewDirection=ТочкаЗрения
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Boolean animate> ]
SetVisibleInView=ВыбратьРасположение
SetVisibleInView.Syntax=[ <Объект>, <Номер вида 1|2>, <Логическая переменная> ]
Shear=Сдвиг
Shear.Syntax=[ <Объект>, <Прямая>, <Коэффициент> ]
ShortestDistance=КратчайшееРасстояние
ShortestDistance.Syntax=[ <Список отрезков>, <Начальная точка>, <Конечная точка>, <Логическое выражение для веса ребра> ]
ShowAxes=ПоказатьОси
ShowAxes.Syntax=[]\n[ <Логическая переменная> ]\n[ <Полотно>, <Логическая переменная> ]
ShowGrid=ПоказатьСетку
ShowGrid.Syntax=[]\n[ <Логическая переменная> ]\n[ <Полотно>, <Логическая переменная> ]
ShowLabel=ПоказыватьОбозначение
ShowLabel.Syntax=[ <Объект>, <Логическая переменная> ]
ShowLayer=ПоказыватьСлой
ShowLayer.Syntax=[ <Число> ]
Shuffle=Перемешать
Shuffle.Syntax=[ <Список> ]
SigmaXX=СигмаXX
SigmaXX.Syntax=[ <Список точек> ]\n[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
SigmaXY=СигмаXY
SigmaXY.Syntax=[ <Список точек> ]\n[ <Список абсцисс>, <Список ординат> ]
SigmaYY=СигмаYY
SigmaYY.Syntax=[ <Список точек> ]
Simplify=Упростить
Simplify.Syntax=[ <Функция> ]\n[ <Текст> ]
Simplify.SyntaxCAS=[ <Функция> ]
Slider=Ползунок
Slider.Syntax=[ <Min>, <Max>, <Шаг>, <Скорость>, <Ширина>, <Угол?>, <Горизонтальный>, <Анимация>, <Случайное число> ]
Slope=Наклон
Slope.Syntax=[ <Прямая> ]
SlopeField=НаклонПоля
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Число n> ]\n[ <f(x, y)>, <Число n>, <Коэффициент длины a> ]\n[ <f(x, y)>, <Число n>, <Коэффициент длины a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=ПостроитьГрафик
SlowPlot.Syntax=[ <Функция> ]\n[ <Функция>, <Boolean Repeat> ]
Solutions=Решения
Solutions.Syntax=[ <Уравнение> ]
Solutions.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Переменная> ]\n[ <Список уравнений>, <Список переменных> ]
Solve=Решить
Solve.Syntax=[ <Уравнение> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Уравнение>, <Переменная> ]\n[ <Список уравнений>, <Список переменных> ]\n[ <List of Parametric Equations>, <Список переменных> ]\n[ <Уравнение>, <Переменная>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE=РешитьОДУ
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Точка на f> ]\n[ <f'(x, y)>, <Начальное значение x>, <Начальное значение y>, <Конечное значение x>, <Шаг> ]\n[ <y'>, <x'>, <Начальное значение x>, <Начальное значение y>, <Конечное значение t>, <Шаг> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Начальное значение x>, <Начальное значение y>, <Начальное значениеy'>, <Конечное значение x>, <Шаг> ]
SolveODE.SyntaxCAS=[ <Уравнение> ]\n[ <Уравнение>, <Point(s) on f> ]\n[ <Уравнение>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Уравнение>, <Зависимая переменная>, <Независимая переменная>, <Point(s) on f> ] \n[ <Уравнение>, <Зависимая переменная>, <Независимая переменная>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic.SyntaxCAS=[ <Quartic Polynomial> ]
Sort=Сортировка
Sort.Syntax=[ <Список> ]\n[ <Величины>, <Ключ> ]
Spearman=Спирмен
Spearman.Syntax=[ <Список точек> ]\n[ <Список чисел>, <Список чисел> ]
Sphere=Сфера
Sphere.Syntax=[ <Точка>, <Радиус> ]\n[ <Точка>, <Точка> ]
Spline=Сплайн
Spline.Syntax=[ <Список точек> ]\n[ <Список точек>, <Order ≥ 3> ]\n[ <Список точек>, <Order ≥ 3>, <Weight Function> ]
Split.Syntax=[ <Текст>, <List of Texts to split on> ]
StartAnimation=ЗапуститьАнимацию
StartAnimation.Syntax=[ ]\n[ <Логическая переменная> ]\n[ <Ползунок или точка>, <Ползунок или точка>, ... ]\n[ <Ползунок или точка>, <Ползунок или точка>, ..., <Логическая переменная> ]
StartRecord.Syntax=[ ]\n[ <Логическая переменная> ]
StemPlot=СтебельСЛистьями
StemPlot.Syntax=[ <Список> ]\n[ <Список>, <Корректировка -1|0|1> ]
StepGraph=СтупенчатыйГрафик
StepGraph.Syntax=[ <Список точек> ]\n[ <Список точек>, <Boolean Join> ]\n[ <Список абсцисс>, <Список ординат> ]\n[ <Список точек>, <Boolean Join>, <Стиль точки> ]\n[ <Список абсцисс>, <Список ординат>, <Boolean Join> ]\n[ <Список абсцисс>, <Список ординат>, <Boolean Join>, <Стиль точки> ]
StickGraph=СтикГрафик
StickGraph.Syntax=[ <Список точек> ]\n[ <Список точек>, <Boolean Horizontal> ]\n[ <Список абсцисс>, <Список ординат> ]\n[ <Список абсцисс>, <Список ординат>, <Boolean Horizontal> ]
Stretch=Растянуть
Stretch.Syntax=[ <Объект>, <Вектор> ]\n[ <Объект>, <Прямая>, <Коэффициент> ]
Substitute=Замена
Substitute.SyntaxCAS=[ <Выражение>, <Список замен> ]\n[ <Выражение>, <Что>, <На что> ]
Sum=Сумма
Sum.Syntax=[ <Список> ]\n[ <Список>, <Число элементов> ]\n[ <Список>, <Список частот> ]\n[ <Выражение>, <Переменная>, <Начальное значение>, <Конечное значение> ]
Sum.SyntaxCAS=[ <Список> ]\n[ <Выражение>, <Переменная>, <Начальное значение>, <Конечное значение> ]
SumSquaredErrors=ОстаточнаяДисперсия
SumSquaredErrors.Syntax=[ <Список точек>, <Функция> ]
SurdText=РадикалТекст
SurdText.Syntax=[ <Точка> ]\n[ <Число> ]\n[ <Число>, <Список> ]
Surface=Поверхность
Surface.Syntax=[ <Функция>, <Угол> ]\n[ <Кривая>, <Угол>, <Прямая> ]\n[ <Выражение>, <Выражение>, <Выражение>, <Parameter Variable 1>, <Начальное значение>, <Конечное значение>, <Parameter Variable 2>, <Начальное значение>, <Конечное значение> ]
TDistribution=СтьюдентРасп
TDistribution.Syntax=[ <Степени свободы>, <Переменная> ]\n[ <Степени свободы>, <Переменная>, <Интегральная> ]\n[ <Степени свободы>, x, <Интегральная> ]
TDistribution.SyntaxCAS=[ <Степени свободы>, <Переменная> ]
TMean2Estimate.Syntax=[ <Список образцов данных  1>, <Список образцов данных  2>, <Доверительный уровень>, <Boolean Pooled> ]\n[ <Образец Среднее  1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Образец Среднее  2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Доверительный уровень>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <Список образцов данных>, <Доверительный уровень> ]\n[ <Образец Среднее>, <Sample Standard Deviation>, <Размер выборки>, <Доверительный уровень> ]
TTest=TТест
TTest.Syntax=[ <Список образцов данных>, <Hypothesized Mean>, <Tail> ]\n[ <Образец Среднее>, <Sample Standard Deviation>, <Размер выборки>, <Hypothesized Mean>, <Tail> ]
TTest2=TТест2
TTest2.Syntax=[ <Список образцов данных  1>, <Список образцов данных  2>, <Tail>, <Boolean Pooled> ]\n[ <Образец Среднее  1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Образец Среднее  2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Tail>, <Boolean Pooled> ]
TTestPaired=ПарныйTТест
TTestPaired.Syntax=[ <Список образцов данных  1>, <Список образцов данных  2>, <Tail> ]
TableText=Таблица
TableText.Syntax=[ <Список>, <Список>, ... ]\n[ <Список>, <Список>, ..., <Выравнивание текста> ]\n[ <Список>, <Список>, ..., <Выравнивание текста>, <Minimum Cell Width> ]\n[ <Список>, <Список>, ..., <Выравнивание текста>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Фрагмент
Take.Syntax=[ <Список>, <Start Position>, <End Position> ]\n[ <Список>, <Start Position> ]\n[ <Текст>, <Start Position>, <End Position> ]\n[ <Текст>, <Start Position> ]
Take.SyntaxCAS=[ <Список>, <Start Position> ]\n[ <Список>, <Start Position>, <End Position> ]\n[ <Текст>, <Start Position>, <End Position> ]\n[ <Текст>, <Start Position> ]
Tangent=Касательная
Tangent.Syntax=[ <Точка>, <Коника> ]\n[ <Точка>, <Функция> ]\n[ <Точка>, <Кривая> ]\n[ <Асбцисса>, <Функция> ]\n[ <Прямая>, <Коника> ]\n[ <Коника>, <Коника> ]
Tangent.SyntaxCAS=[ <Число>, <Функция> ]\n[ <Точка>, <Объект> ]
TaylorSeries=РядТейлора
TaylorSeries.Syntax=[ <Функция>, <Асбцисса>, <Порядок> ]
TaylorSeries.SyntaxCAS=[ <Выражение>, <Асбцисса>, <Порядок> ]\n[ <Выражение>, <Переменная>, <Переменная>, <Порядок> ]
Tetrahedron=Тетраэдр
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Точка>, <Точка>, <Точка> ]\n[ <Точка>, <Точка>, <Direction> ]
Text=Формула
Text.Syntax=[ <Объект> ]\n[ <Объект>, <Boolean for Substitution of Variables> ]\n[ <Объект>, <Точка> ]\n[ <Объект>, <Точка>, <Boolean for Substitution of Variables> ]\n[ <Объект>, <Точка>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <Объект>, <Точка>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Объект>, <Точка>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=ТекстВUnicode
TextToUnicode.Syntax=[ <Текст> ]
Textfield=ОкноВвода
Textfield.Syntax=[ <Управляемый объект> ]
TiedRank=СовпадающиеРанги
TiedRank.Syntax=[ <Список> ]
ToBase=ПереводВСистемуСчисления
ToBase.Syntax=[ <Число>, <Основание> ]
ToComplex=ВКомплексноеЧисло
ToComplex.Syntax=[ <Вектор> ]
ToExponential=ВЭкспоненциальныйВид
ToExponential.SyntaxCAS=[ <Комплексное число> ]
ToPoint=ВТочку
ToPoint.Syntax=[ <Комплексное число> ]
ToPolar=ПолярныеКоординаты
ToPolar.Syntax=[ <Комплексное число> ]\n[ <Вектор> ]
ToolImage=ИзображениеИнструмента
ToolImage.Syntax=[ <Число> ]\n[ <Число>, <Точка> ]\n[ <Число>, <Точка>, <Точка> ]
Top=Лучшие
Top.Syntax=[ <Квадрика> ]
Translate=Перенести
Translate.Syntax=[ <Объект>, <Вектор> ]\n[ <Вектор>, <Начальная точка> ]
Transpose=Транспонировать
Transpose.Syntax=[ <Матрица> ]
TrapezoidalSum=ТрапецеидальнаяСумма
TrapezoidalSum.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение>, <Число трапеций> ]
TravelingSalesman=Коммивояжёр
TravelingSalesman.Syntax=[ <Список точек> ]
TriangleCenter=ЦентрТреугольника
TriangleCenter.Syntax=[ <Точка>, <Точка>, <Точка>, <Число> ]
TriangleCurve=КриваяТреугольника
TriangleCurve.Syntax=[ <Точка>, <Точка>, <Точка>, <Уравнение> ]
Triangular=ТреугольноеРаспр
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Переменная> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Переменная>, <Интегральная> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Интегральная> ]
TrigCombine=ТригонометрияРазложение
TrigCombine.Syntax=[ <Выражение> ]\n[ <Выражение>, <Целевая функция> ]
TrigExpand=ТригонометрияРаскрытие
TrigExpand.Syntax=[ <Выражение> ]\n[ <Выражение>, <Целевая функция> ]
TrigExpand.SyntaxCAS=[ <Выражение> ]\n[ <Выражение>, <Целевая функция> ]\n[ <Выражение>, <Целевая функция>, <Переменная цели> ]\n[ <Выражение>, <Целевая функция>, <Переменная цели>, <Переменная цели> ]
TrigSimplify=ТригонометрияУпрощение
TrigSimplify.Syntax=[ <Выражение> ]
Trilinear=ТрилинейныеКоординаты
Trilinear.Syntax=[ <Точка>, <Точка>, <Точка>, <Число>, <Число>, <Число> ]
TurningPoint=ТочкаПерегиба
TurningPoint.Syntax=[ <Многочлен> ]
TurningPoint.SyntaxCAS=[ <Функция> ]
Turtle=Черепашка
Turtle.Syntax=[]
TurtleBack=ЧерепашкаНазад
TurtleBack.Syntax=[ <Черепашка>, <Расстояние> ]
TurtleDown.Syntax=[ <Черепашка> ]
TurtleForward=ЧерепашкаВперед
TurtleForward.Syntax=[ <Черепашка>, <Расстояние> ]
TurtleLeft=ЧерепашкаЛево
TurtleLeft.Syntax=[ <Черепашка>, <Угол> ]
TurtleRight=ЧерепашкаПраво
TurtleRight.Syntax=[ <Черепашка>, <Угол> ]
TurtleUp.Syntax=[ <Черепашка> ]
Type.Syntax=[ <Объект> ]
UnicodeToLetter=UnicodeВСимвол
UnicodeToLetter.Syntax=[ <Целое> ]
UnicodeToText=UnicodeВТекст
UnicodeToText.Syntax=[ <Список чисел> ]
Uniform=НепрерывноеРавномерноеРаспр
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Переменная> ]\n[ <Lower Bound>, <Upper Bound>, <Переменная>, <Интегральная> ]\n[ <Lower Bound>, <Upper Bound>, x, <Интегральная> ]
Union=ОбъединениеМножеств
Union.Syntax=[ <Список>, <Список> ]\n[ <Многоугольник>, <Многоугольник> ]
Unique=Единственные
Unique.Syntax=[ <Список> ]
UnitOrthogonalVector=НормальныйОрт
UnitOrthogonalVector.Syntax=[ <Прямая> ]\n[ <Отрезок> ]\n[ <Вектор> ]
UnitOrthogonalVector.Syntax3D=[ <Прямая> ]\n[ <Отрезок> ]\n[ <Вектор> ]\n[ <Плоскость> ]
UnitOrthogonalVector.SyntaxCAS=[ <Вектор> ]
UnitVector=Орт
UnitVector.Syntax=[ <Объект> ]
UnitVector.SyntaxCAS=[ <Вектор> ]
UpdateConstruction=Обновить
UpdateConstruction.Syntax=[ ]\n[ <Количество раз> ]
UpperSum=ВерхняяСумма
UpperSum.Syntax=[ <Функция>, <Начальное значение>, <Конечное значение>, <Количество прямоугольников> ]
Variance=Вариация
Variance.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
Vector=Вектор
Vector.Syntax=[ <Точка> ]\n[ <Начальная точка>, <Конечная точка> ]
Vertex=Вершина
Vertex.Syntax=[ <Коника> ]\n[ <Inequality> ]\n[ <Многоугольник> ]\n[ <Многоугольник>, <Индекс> ]\n[ <Отрезок>, <Индекс> ]
VerticalText=ВертикальныйТекст
VerticalText.Syntax=[ <Текст> ]\n[ <Текст>, <Точка> ]
Volume=объем
Volume.Syntax=[ <Объектt> ]
Voronoi=ДиаграммаВороного
Voronoi.Syntax=[ <Список точек> ]
Weibull=ВейбуллРасп
Weibull.Syntax=[ <Параметр формы>, <Коэффициент масштаба>, <Переменная> ]\n[ <Параметр формы>, <Коэффициент масштаба>, <Переменная>, <Интегральная> ]\n[ <Параметр формы>, <Коэффициент масштаба>, x, <Интегральная> ]
Weibull.SyntaxCAS=[ <Параметр формы>, <Коэффициент масштаба>, <Переменная> ]
ZMean2Estimate=СредняяОценка
ZMean2Estimate.Syntax=[ <Список образцов данных  1>, <Список образцов данных  2>, <σ1>, <σ2>, <Доверительный уровень> ]\n[ <Образец Среднее  1>, <σ1>, <Sample Size 1>, <Образец Среднее  2>, <σ2>, <Sample Size 2>, <Доверительный уровень> ]
ZMean2Test=ZСредний2Тест
ZMean2Test.Syntax=[ <Список образцов данных  1>, <σ1>, <Список образцов данных  2>, <σ2>, <Tail> ]\n[ <Образец Среднее  1>, <σ1>, <Sample Size 1>, <Образец Среднее  2>, <σ2>, <Sample Size 2>, <Tail> ]
ZMeanEstimate=ZСредняяОценка
ZMeanEstimate.Syntax=[ <Список образцов данных>, <σ>, <Доверительный уровень> ]\n[ <Образец Среднее>, <σ>, <Размер выборки>, <Доверительный уровень> ]
ZMeanTest=ZСреднийТест
ZMeanTest.Syntax=[ <Список образцов данных>, <σ>, <Hypothesized Mean>, <Tail> ]\n[ <Образец Среднее>, <σ>, <Размер выборки>, <Hypothesized Mean>, <Tail> ]
ZProportion2Estimate=ZРасчетная2Доля
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Доверительный уровень> ]
ZProportion2Test=ZРасчетный2Тест
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]
ZProportionEstimate=ZЧастьОценки
ZProportionEstimate.Syntax=[ <Демонстрационная пропорция>, <Размер выборки>, <Доверительный уровень> ]
ZProportionTest=ZЧастьТеста
ZProportionTest.Syntax=[ <Демонстрационная пропорция>, <Размер выборки>, <Возможная пропорция>, <Tail> ]
Zip.Syntax=[ <Выражение>, <Переменная1>, <Список1>, <Переменная2>, <Список2>, ... ]
Zipf=ЦипфРасп
Zipf.Syntax=[ <Число элементов>, <Показатель> ]\n[ <Число элементов>, <Показатель>, <Интегральная> ]\n[ <Число элементов>, <Показатель>, <Переменная>, <Интегральная> ]
Zipf.SyntaxCAS=[ <Число элементов>, <Показатель>, <Переменная>, <Интегральная> ]
ZoomIn=УвеличитьМасштаб
ZoomIn.Syntax=[ ]\n[ <Значение множителя> ]\n[ <Значение множителя>, <Точка> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=УменьшитьМасштаб
ZoomOut.Syntax=[ <Значение множителя> ]\n[ <Значение множителя>, <Точка> ]
mad.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
mean.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
stdev.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]
stdevp.Syntax=[ <Список исходных данных> ]\n[ <Список чисел>, <Список частот> ]