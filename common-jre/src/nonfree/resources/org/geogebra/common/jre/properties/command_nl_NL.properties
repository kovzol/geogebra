# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lijst>, <Lijst>, ... ]
AffineRatio.Syntax=[ <Punt>, <Punt>, <Punt> ]
Angle.Syntax=[ <Veelhoek> ]\n[ <Vector>, <Vector> ]\n[ <Rechte>, <Rechte> ]\n[ <Punt>, <Hoekpunt>, <Punt> ]\n[ <Punt>, <Hoekpunt>, <Grootte hoek> ]
Angle.Syntax3D=[ <Veelhoek> ]\n[ <Vector>, <Vector> ]\n[ <Rechte>, <Rechte> ]\n[ <Rechte>, <Vlak> ]\n[ <Vlak>, <Vlak> ]\n[ <Punt>, <Hoekpunt>, <Punt> ]\n[ <Punt>, <Hoekpunt>, <Grootte hoek> ]\n[ <Punt>, <Punt>, <Punt>, <Richting> ]
AngularBisector.Syntax=[ <Rechte>, <Rechte> ]\n[ <Punt>, <Punt>, <Punt> ]
Append.Syntax=[ <Lijst>, <Veelhoek> ]\n[ <Veelhoek>, <Lijst> ]
ApplyMatrix.Syntax=[ <Matrix>, <Veelhoek> ]
Arc.Syntax=[ <Cirkel>, <Punt>, <Punt> ]\n[ <Ellips>, <Punt>, <Punt> ]\n[ <Cirkel>, <Parameter Value>, <Parameter Value> ]\n[ <Ellips>, <Parameter Value>, <Parameter Value> ]
AreCollinear.Syntax=[ <Punt>, <Punt>, <Punt> ]
AreConcurrent.Syntax=[ <Rechte>, <Rechte>, <Rechte> ]
AreConcyclic.Syntax=[ <Punt>, <Punt>, <Punt>, <Punt> ]
AreCongruent.Syntax=[ <Veelhoek>, <Veelhoek> ]
AreEqual.Syntax=[ <Veelhoek>, <Veelhoek> ]
AreParallel.Syntax=[ <Rechte>, <Rechte> ]
ArePerpendicular.Syntax=[ <Rechte>, <Rechte> ]
Area.Syntax=[ <Kegelsnede> ]\n[ <Veelhoek> ]\n[ <Punt>, ..., <Punt> ]
Assume.SyntaxCAS=[ <Voorwaarde>, <Uitdrukking> ]
Asymptote.Syntax=[ <Veelhoek> ]
AttachCopyToView.Syntax=[ <Veelhoek>, <View 0|1|2> ]\n[ <Veelhoek>, <View 0|1|2>, <Punt 1>, <Punt 2>, <Screen Point 1>, <Screen Point 2> ]
Axes.Syntax=[ <Kegelsnede> ]
Axes.Syntax3D=[ <Kegelsnede> ]\n[ <Kwadriek> ]
AxisStepX.Syntax=[ ]
AxisStepY.Syntax=[ ]
BarChart.Syntax=[ <Gegevenslijst>, <Frequentielijst> ]\n[ <Onbewerkte gegevenslijst>, <Breedte van de staven>, <Verticale schaalfactor (optie)> ]\n[ <Gegevenslijst>, <Frequentielijst>, <Breedte van de staven> ]\n[ <Minimumwaarde>, <Maximumwaarde>, <Lijst met hoogtes> ]\n[ <Minimumwaarde>, <Maximumwaarde>, <Uitdrukking>, <Veranderlijke>, <van>, <tot> ]\n[ <Minimumwaarde>, <Maximumwaarde>, <Uitdrukking>, <Veranderlijke>, <van>, <tot>, <toename> ]
Barycenter.Syntax=[ <Puntenlijst>, <Lijst van gewichten> ]
Bernoulli.Syntax=[ <Kans>, <Logisch Cumulatief> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Waarde Variabele> ]\n[ <Alfa>, <Beta>, <Waarde Variabele>, <Logisch Cumulatief>  ]\n[ <Alfa>, <Beta>, x, <Logisch Cumulatief> ]
Binomial.Syntax=[ <Getal>, <Getal> ]
BinomialDist.Syntax=[ <Aantal Experimenten>, <Kans op Succes> ]\n[ <Aantal Experimenten>, <Kans op Succes>, <Logisch Cumulatief> ]\n[ <Aantal Experimenten>, <Kans op Succes>, <Lijst met waarden> ]\n[ <Aantal Experimenten>, <Kans op Succes>, <Waarde Variabele>, <Logisch Cumulatief> ]
BinomialDist.SyntaxCAS=[ <Aantal Experimenten>, <Kans op Succes>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Aantal Experimenten>, <Kans op Succes>, <Lijst met waarden> ]
Bottom=Bodem
Bottom.Syntax=[ <Kwadriek> ]
BoxPlot.Syntax=[ <Verticale positie>, <Hoogte>, <Onbewerkte gegevenslijst> ]\n[ <Verticale positie>, <Hoogte>, <Onbewerkte gegevenslijst>, <Uitschieters> ]\n[ <Verticale positie>, <Hoogte>, <Gegevenslijst>, <Frequentielijst>, <Uitschieters> ]\n[ <Verticale positie>, <Hoogte>, <Minimumwaarde>, <Q1>, <Mediaan>, <Q3>, <Maximumwaarde> ]
Button.Syntax=[ ]\n[ <Titel> ]
CASLoaded.Syntax=[]
CFactor=CFactor
CFactor.SyntaxCAS=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Veranderlijke> ]
CIFactor=CIFactor
CIFactor.SyntaxCAS=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Veranderlijke> ]
CSolutions=COplossingsverzameling
CSolutions.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]
CSolve.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]
Cauchy.Syntax=[ <Mediaan>, <Parameter s>, <Waarde Variabele> ]\n[ <Mediaan>, <Parameter s>, <Waarde Variabele>, <Logisch Cumulatief>  ]\n[ <Mediaan>, <Parameter s>, x, <Logisch Cumulatief> ]
Cauchy.SyntaxCAS=[ <Mediaan>, <Parameter s>, <Waarde Variabele> ]
Cell.Syntax=[ <Kolom>, <Rij> ]
CellRange.Syntax=[ <Eerste cel>, <Laatste cel> ]
Center.Syntax=[ <Kegelsnede> ]
Center.Syntax3D=[ <Kegelsnede> ]\n[ <Kwadriek> ]
CenterView.Syntax=[ <Middelpunt> ]
Centroid.Syntax=[ <Veelhoek> ]
CharacteristicPolynomial.Syntax=[ <Matrix> ]
Checkbox.Syntax=[ ]\n[ <Titel> ]\n[ <Lijst> ]\n[ <Titel>, <Lijst> ]
ChiSquared.Syntax=[ <Aantal vrijheidsgraden>, <Waarde Variabele> ]\n[ <Aantal vrijheidsgraden>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Aantal vrijheidsgraden>, x, <Logisch Cumulatief> ]
ChiSquared.SyntaxCAS=[ <Aantal vrijheidsgraden>, <Veranderlijke> ]
ChiSquaredTest=ChiKwadraatTest
ChiSquaredTest.Syntax=[ <Matrix> ]\n[ <Lijst>, <Lijst> ]\n[ <Matrix>, <Matrix> ]
Circle.Syntax=[ <Punt>, <Getal> ]\n[ <Punt>, <Lijnstuk> ]\n[ <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Punt> ]
Circle.Syntax3D=[ <Punt>, <Getal> ]\n[ <Punt>, <Lijnstuk> ]\n[ <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Rechte>, <Punt> ]\n[ <Punt>, <Straal>, <Richting> ]\n[ <Punt>, <Punt>, <Richting> ]
CircleArc=CirkelboogMetMiddelpunt
CircleArc.Syntax=[ <Middelpunt>, <Punt>, <Punt> ]
CircleSector=CirkelsectorMetMiddelpunt
CircleSector.Syntax=[ <Middelpunt>, <Punt>, <Punt> ]
CircumcircleArc.Syntax=[ <Punt>, <Punt>, <Punt> ]
CircumcircleSector.Syntax=[ <Punt>, <Punt>, <Punt> ]
Circumference.Syntax=[ <Kegelsnede> ]
Classes.Syntax=[ <Gegevenslijst>, <Aantal klassen> ]\n[ <Gegevenslijst>, <Start>, <Klassenbreedte> ]
ClosestPoint.Syntax=[ <Pad>, <Punt> ]\n[ <Rechte>, <Rechte> ]
ClosestPointRegion.Syntax=[ <Gebied>, <Punt> ]
Coefficients.Syntax=[ <Veelterm> ]\n[ <Kegelsnede> ]
Coefficients.SyntaxCAS=[ <Veelterm> ]\n[ <Veelterm>, <Veranderlijke> ]
Column=Celkolom
Column.Syntax=[ <Cel> ]
ColumnName=CelKolomNaam
ColumnName.Syntax=[ <Cel> ]
CommonDenominator.Syntax=[ <Uitdrukking>, <Uitdrukking> ]
CompleteSquare.Syntax=[ <Kwadratische Functie> ]
ComplexRoot.Syntax=[ <Veelterm> ]
Cone.Syntax=[ <Cirkel>, <Hoogte> ]\n[ <Punt>, <Punt>, <Straal> ]\n[ <Punt>, <Vector>, <Grootte hoek> ]
ConeInfinite.Syntax=[ <Punt>, <Vector>, <Grootte hoek> ]\n[ <Punt>, <Punt>, <Grootte hoek> ]\n[ <Punt>, <Rechte>, <Grootte hoek> ]
Conic.Syntax=[ <Lijst> ]\n[ <Punt>, <Punt>, <Punt>, <Punt>, <Punt> ]\n[ <Getal>, <Getal>, <Getal>, <Getal>, <Getal>, <Getal> ]
ConstructionStep.Syntax=[ ]\n[ <Veelhoek> ]
ContingencyTable.Syntax=[ <Lijst met Tekst>, <Lijst met Tekst> ]\n[ <Lijst met Tekst>, <Lijst met Tekst>, <Opties> ]\n[ <Lijst met rijwaarden>, <Lijst met kolomwaarden>, <Frequencietabel> ]\n[ <Lijst met rijwaarden>, <Lijst met kolomwaarden>, <Frequencietabel> , <Opties> ]
ContinuedFraction.Syntax=[ <Getal> ]\n[ <Getal>, <Niveau> ]\n[ <Getal>, <Niveau>, <Shorthand waar|vals> ]
ConvexHull=Convexomhullende
ConvexHull.Syntax=[ <Puntenlijst> ]
CopyFreeObject=OnafhankelijkeKopie
CopyFreeObject.Syntax=[ <Veelhoek> ]
Corner.Syntax=[ <Getal> ]\n[ <Afbeelding>, <Getal> ]\n[ <Tekst>, <Getal> ]\n[ <Tekenvenster>, <Getal> ]
CountIf.Syntax=[ <Voorwaarde>, <Lijst> ]\n[ <Voorwaarde>, <Veranderlijke>, <Lijst> ]
Covariance.Syntax=[ <Puntenlijst> ]\n[ <Lijst getallen>, <Lijst getallen> ]
Cross.Syntax=[ <Vector>, <Vector> ]
CrossRatio.Syntax=[ <Punt>, <Punt>, <Punt>, <Punt> ]
Cube.Syntax=[ <Vierkant> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
Cubic=Cubic
Cubic.Syntax=[ <Punt>, <Punt>, <Punt>, <Getal> ]
Curvature.Syntax=[ <Punt>, <Veelhoek> ]
CurvatureVector.Syntax=[ <Punt>, <Veelhoek> ]
CurveCartesian.Syntax=[ <Uitdrukking>, <Uitdrukking>, <Variabele>, <Minimumwaarde>, <Maximumwaarde> ]
CurveCartesian.Syntax3D=[ <Uitdrukking>, <Uitdrukking>, <Variabele>, <Minimumwaarde>, <Maximumwaarde> ]\n[ <Uitdrukking>, <Uitdrukking>, <Uitdrukking>, <Variabele>, <Minimumwaarde>, <Maximumwaarde> ]
Cylinder.Syntax=[ <Cirkel>, <Hoogte> ]\n[ <Punt>, <Punt>, <Straal> ]
CylinderInfinite.Syntax=[ <Rechte>, <Straal> ]\n[ <Punt>, <Vector>, <Straal> ]\n[ <Punt>, <Punt>, <Straal> ]
DataFunction.Syntax=[ <Lijst getallen>, <Lijst getallen> ]
Defined.Syntax=[ <Veelhoek> ]
Degree.Syntax=[ <Veelterm> ]
Degree.SyntaxCAS=[ <Veelterm> ]\n[ <Veelterm>, <Veranderlijke> ]
DelauneyTriangulation.Syntax=[ <Puntenlijst> ]
Delete.Syntax=[ <Veelhoek> ]
Denominator.Syntax=[ <Getal> ]\n[ <Functie> ]
Denominator.SyntaxCAS=[ <Uitdrukking> ]
Derivative.Syntax=[ <Functie> ]\n[ <Kromme> ]\n[ <Functie>, <Getal> ]\n[ <Functie>, <Veranderlijke> ]\n[ <Kromme>, <Getal> ]\n[ <Functie>, <Veranderlijke>, <Getal> ]
Derivative.SyntaxCAS=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Veranderlijke> ]\n[ <Uitdrukking>, <Veranderlijke>, <Getal> ]
Determinant.Syntax=[ <Matrix> ]
Diameter.Syntax=[ <Vector>, <Kegelsnede> ]\n[ <Rechte>, <Kegelsnede> ]
Difference.Syntax=[ <Veelhoek>, <Veelhoek> ]
Dilate.Syntax=[ <Veelhoek>, <Homothetiefactor> ]\n[ <Veelhoek>, <Homothetiefactor>, <Homothetiecentrum> ]
Dimension.Syntax=[ <Veelhoek> ]
Direction.Syntax=[ <Rechte> ]
Directrix.Syntax=[ <Kegelsnede> ]
Distance.Syntax=[ <Punt>, <Veelhoek> ]\n[ <Rechte>, <Rechte> ]\n[ <Vlak>, <Vlak> ]
Distance.SyntaxCAS=[ <Punt>, <Veelhoek> ]
Div.Syntax=[ <Deeltal>, <Deler> ]\n[ <Deeltal>, <Deler> ]
Division.Syntax=[ <Deeltal>, <Deler> ]\n[ <Deeltal>, <Deler> ]
Divisors.Syntax=[ <Getal> ]
DivisorsList.Syntax=[ <Getal> ]
DivisorsSum.Syntax=[ <Getal> ]
Dodecahedron.Syntax=[ <Regelmatige vijfhoek> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
Dot.Syntax=[ <Vector>, <Vector> ]
DotPlot=PuntenPlot
DotPlot.Syntax=[ <Onbewerkte gegevenslijst>, <Aangrenzende punten opstapelen (optioneel)>, <Scale Factor (optional)>]
DynamicCoordinates.Syntax=[ <Punt>, <x-coördinaat>, <y-coördinaat> ]\n[ <Punt>, <x-coördinaat>, <y-coördinaat>, <z-coördinaat> ]
Eccentricity.Syntax=[ <Kegelsnede> ]
Eigenvalues.SyntaxCAS=[ <Matrix> ]
Eigenvectors.SyntaxCAS=[ <Matrix> ]
Element.Syntax=[ <Lijst>, <Getal> ]\n[ <Matrix>, <Rij>, <Kolom> ]\n[ <Lijst>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Lijst>, <Getal> ]\n[ <Matrix>, <Rij>, <Kolom> ]
Eliminate.Syntax=[ <Lijst met veeltermen>, <Lijst van veranderlijken> ]
Ellipse.Syntax=[ <Brandpunt>, <Brandpunt>, <Halve hoofdaslengte> ]\n[ <Brandpunt>, <Brandpunt>, <Lijnstuk> ]\n[ <Brandpunt>, <Brandpunt>, <Punt> ]
Ends.Syntax=[ <Kwadriek> ]
Envelope.Syntax=[ <Pad>, <Punt> ]
Erlang.Syntax=[ <Shape>, <Rentevoet>, <Waarde Variabele> ]\n[ <Shape>, <Rentevoet>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Shape>, <Rentevoet>, x, <Logisch Cumulatief> ]
Excentricity=Brandpuntsafstand
Excentricity.Syntax=[ <Kegelsnede> ]
Execute.Syntax=[ <Lijst met Tekst> ]\n[ <Lijst met Tekst>, <Parameter>, <Parameter>, ... ]
Expand.Syntax=[ <Uitdrukking> ]
Exponential=Exponentiëel
Exponential.Syntax=[ <Lambda>, <Waarde Variabele> ]\n[ <Lambda>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Lambda>, x, <Logisch Cumulatief> ]
Exponential.SyntaxCAS=[ <Lambda>, <Waarde Variabele> ]
ExportImage.Syntax=[ <Eigenschap>, <Variabele>, <Eigenschap>, <Variabele>, ... ]
ExtendedGCD.Syntax=[ <Geheel>, <Geheel>]\n[ <Veelterm>, <Veelterm>]
Extremum.Syntax=[ <Veelterm> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
Extremum.SyntaxCAS=[ <Functie> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
FDistribution.Syntax=[ <Aantal vrijheidsgraden teller>, <Aantal vrijheidsgraden noemer>, <Waarde Variabele> ]\n[ <Aantal vrijheidsgraden teller>, <Aantal vrijheidsgraden noemer>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Aantal vrijheidsgraden teller>, <Aantal vrijheidsgraden noemer>, x, <Logisch Cumulatief> ]
FDistribution.SyntaxCAS=[ <Aantal vrijheidsgraden teller>, <Aantal vrijheidsgraden noemer>, <Waarde Variabele> ]
Factor.Syntax=[ <Veelterm> ]
Factor.SyntaxCAS=[ <Getal> ]\n[ <Veelterm> ]\n[ <Uitdrukking>, <Veranderlijke> ]
Factors.Syntax=[ <Veelterm> ]\n[ <Getal> ]
FillCells.Syntax=[ <Bereik>, <Veelhoek> ]\n[ <Cel>, <Lijst> ]\n[ <Cel>, <Matrix> ]
FillColumn.Syntax=[ <Kolom>, <Lijst> ]
FillRow.Syntax=[ <Rij>, <Lijst> ]
First.Syntax=[ <Lijst> ]\n[ <Tekst> ]\n[ <Lijst>, <Aantal elementen> ]\n[ <Tekst>, <Aantal elementen> ]\n[ <Meetkundige plaats>, <Aantal elementen> ]
First.SyntaxCAS=[ <Lijst> ]\n[ <Lijst>, <Aantal elementen> ]
FirstAxis.Syntax=[ <Kegelsnede> ]
FirstAxisLength.Syntax=[ <Kegelsnede> ]
Fit.Syntax=[ <Puntenlijst>, <Lijst met functies> ]\n[ <Puntenlijst>, <Functie> ]
FitExp.Syntax=[ <Puntenlijst> ]
FitGrowth.Syntax=[ <Puntenlijst> ]
FitImplicit.Syntax=[ <Puntenlijst>, <Orde> ]
FitLineX.Syntax=[ <Puntenlijst> ]
FitLineY.Syntax=[ <Puntenlijst> ]
FitLog.Syntax=[ <Puntenlijst> ]
FitLogistic.Syntax=[ <Puntenlijst> ]
FitPoly.Syntax=[ <Puntenlijst>, <Graad van veelterm> ]\n[ <Vrije vorm>, <Graad van veelterm> ]
FitPow.Syntax=[ <Puntenlijst> ]
FitSin.Syntax=[ <Puntenlijst> ]
Flatten=UitvlakkenVanDeLijst
Flatten.Syntax=[ <Lijst> ]
Focus.Syntax=[ <Kegelsnede> ]
FractionText.Syntax=[ <Getal> ]\n[ <Punt> ]\n[ <Getal>, <Booleaans enkelvoudige breuk> ]
Frequency.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Logisch Cumulatief>, <Onbewerkte gegevenslijst> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst> ]\n[ <Lijst met Tekst>, <Lijst met Tekst> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]
FrequencyPolygon.Syntax=[ <Lijst met klassngrenzen>, <Lijst met hoogtes> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Boolean Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Boolean Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]
FrequencyTable.Syntax=[ <Onbewerkte gegevenslijst>, <Scale Factor (optional)> ]\n[ <Logisch Cumulatief>, <Onbewerkte gegevenslijst> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]
FromBase=Metbasis
FromBase.Syntax=[ <Getal als tekst>, <Basis> ]
Function.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Lijst getallen> ]
Function.Syntax3D=[ <Lijst getallen> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Uitdrukking>, <parameter variabele 1>, <Minimumwaarde>, <Maximumwaarde>, <parameter variabele 2>, <Minimumwaarde>, <Maximumwaarde> ]
Function.SyntaxCAS=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
FutureValue.Syntax=[ <Rentevoet>, <Aantal perioden>, <Termijn>, <Aanvangswaarde (optie)>, <Type (optie)> ]
GCD.Syntax=[ <Lijst getallen> ]\n[ <Getal>, <Getal> ]
GCD.SyntaxCAS=[ <Lijst getallen> ]\n[ <Lijst met veeltermen> ]\n[ <Getal>, <Getal> ]\n[ <Veelterm>, <Veelterm> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Waarde Variabele> ]\n[ <Alfa>, <Beta>, <Waarde Variabele>, <Logisch Cumulatief>  ]\n[ <Alfa>, <Beta>, x, <Logisch Cumulatief> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Waarde Variabele> ]
GeometricMean.Syntax=[ <Lijst getallen> ]
GetTime.Syntax=[]\n[ <Formaat> ]
GroebnerDegRevLex.Syntax=[ <Lijst met veeltermen> ]\n[ <Lijst met veeltermen>, <Lijst van veranderlijken> ]
GroebnerLex.Syntax=[ <Lijst met veeltermen> ]\n[ <Lijst met veeltermen>, <Lijst van veranderlijken> ]
GroebnerLexDeg.Syntax=[ <Lijst met veeltermen> ]\n[ <Lijst met veeltermen>, <Lijst van veranderlijken> ]
HarmonicMean.Syntax=[ <Lijst getallen> ]
Height.Syntax=[ <Lichaam> ]
HideLayer.Syntax=[ <Getal> ]
Histogram.Syntax=[ <Lijst met klassngrenzen>, <Lijst met hoogtes> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]
HistogramRight.Syntax=[ <Lijst met klassngrenzen>, <Lijst met hoogtes> ]\n[ <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)>  ]\n[ <Logisch Cumulatief>, <Lijst met klassngrenzen>, <Onbewerkte gegevenslijst>, <Gebruiksdichtheid>, <Dichtheidsschaalfactor (optioneel)> ]
HyperGeometric=HyperGeometrisch
HyperGeometric.Syntax=[ <Populatie Grootte>, <Aantal Successen>, <Steekproef Grootte> ]\n[ <Populatie Grootte>, <Aantal Successen>, <Steekproef Grootte>, <Logisch Cumulatief> ]\n[ <Populatie Grootte>, <Aantal Successen>, <Steekproef Grootte>, <Waarde Variabele>, <Logisch Cumulatief> ]
HyperGeometric.SyntaxCAS=[ <Populatie Grootte>, <Aantal Successen>, <Steekproef Grootte>, <Waarde Variabele>, <Logisch Cumulatief> ]
Hyperbola.Syntax=[ <Brandpunt>, <Brandpunt>, <Halve hoofdaslengte> ]\n[ <Brandpunt>, <Brandpunt>, <Lijnstuk> ]\n[ <Brandpunt>, <Brandpunt>, <Punt> ]
IFactor=IFactor
IFactor.Syntax=[ <Veelterm> ]
IFactor.SyntaxCAS=[ <Uitdrukking> ]
Icosahedron.Syntax=[ <Gelijkzijdige driehoek> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
Identity.Syntax=[ <Getal> ]
If.Syntax=[ <Voorwaarde>, <dan> ]\n[ <Voorwaarde>, <dan>, <anders> ]
ImplicitCurve.Syntax=[ <Puntenlijst> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Uitdrukking>, <Afhankelijk veranderlijke>, <Onafhankelijk veranderlijke> ]
Incircle=Incirkel
Incircle.Syntax=[ <Punt>, <Punt>, <Punt> ]
IndexOf.Syntax=[ <Veelhoek>, <Lijst> ]\n[ <Tekst>, <Tekst> ]\n[ <Veelhoek>, <Lijst>, <Start Index> ]\n[ <Tekst>, <Tekst>, <Start Index> ]
Insert.Syntax=[ <Lijst>, <Lijst>, <Positie> ]\n[ <Veelhoek>, <Lijst>, <Positie> ]
Integral.Syntax=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Boolean Evaluate> ]
Integral.SyntaxCAS=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
IntegralBetween.Syntax=[ <Functie>, <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Boolean Evaluate> ]
IntegralBetween.SyntaxCAS=[ <Functie>, <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Functie>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
IntegralSymbolic.Syntax=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]
InteriorAngles.Syntax=[ <Veelhoek> ]
Intersect.Syntax=[ <Veelhoek>, <Veelhoek> ]\n[ <Veelhoek>, <Veelhoek>, <Index snijpunt> ]\n[ <Veelhoek>, <Veelhoek>, <Startpunt> ]\n[ <Functie>, <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Kromme 1>, <Kromme 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <Functie>, <Functie> ]
IntersectConic.Syntax=[ <Vlak>, <Kwadriek> ]\n[ <Kwadriek>, <Kwadriek> ]
IntersectPath.Syntax=[ <Rechte>, <Veelhoek> ]\n[ <Veelhoek>, <Veelhoek> ]
IntersectPath.Syntax3D=[ <Rechte>, <Veelhoek> ]\n[ <Veelhoek>, <Veelhoek> ]\n[ <Vlak>, <Veelhoek> ]\n[ <Vlak>, <Kwadriek> ]
Intersection.Syntax=[ <Lijst>, <Lijst> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Kans> ]
InverseBinomial.Syntax=[ <Aantal Experimenten>, <Kans op Succes>, <Cumulatieve kans> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulatieve kans>, <Kans op Succes>, <Aantal Successen> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulatieve kans>, <Kans op Succes>, <Aantal Successen> ]
InverseCauchy.Syntax=[ <Mediaan>, <Parameter s>, <Kans> ]
InverseChiSquared=InverseChiSquared
InverseChiSquared.Syntax=[ <Aantal vrijheidsgraden>, <Kans> ]
InverseExponential.Syntax=[ <Lambda>, <Kans> ]
InverseFDistribution=InverseFDistributie
InverseFDistribution.Syntax=[ <Aantal vrijheidsgraden teller>, <Aantal vrijheidsgraden noemer>, <Kans> ]
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Kans> ]
InverseHyperGeometric=InverseHyperGeometrisch
InverseHyperGeometric.Syntax=[ <Populatie Grootte>, <Aantal Successen>, <Steekproef Grootte>, <Kans> ]
InverseLaplace.Syntax=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]\n[ <Functie>, <Veranderlijke>, <Veranderlijke> ]
InverseLogNormal.Syntax=[ <Gemiddelde>, <Standaardafwijking>, <Kans> ]
InverseLogistic.Syntax=[ <Gemiddelde>, <Parameter s>, <Kans> ]
InverseNormal=InversNormaal
InverseNormal.Syntax=[ <Gemiddelde>, <Standaardafwijking>, <Cumulatieve kans> ]
InversePascal.Syntax=[ <Number of Successes>, <Probabiliteit of Success>, <Kans> ]
InversePoisson.Syntax=[ <Gemiddelde>, <Kans> ]
InverseTDistribution=InverseTDistributie
InverseTDistribution.Syntax=[ <Aantal vrijheidsgraden>, <Kans> ]
InverseWeibull.Syntax=[ <Shape>, <Parameter s>, <Kans> ]
InverseZipf.Syntax=[ <Aantal elementen>, <Exponent>, <Kans> ]
Invert.Syntax=[ <Matrix> ]\n[ <Functie> ]
IsFactored.Syntax=[ <Veelterm> ]
IsInRegion.Syntax=[ <Punt>, <Gebied> ]
IsInteger.Syntax=[ <Getal> ]
IsPrime.Syntax=[ <Getal> ]
IsTangent.Syntax=[ <Rechte>, <Kegelsnede> ]
IsVertexForm.Syntax=[ <Functie> ]
Iteration.Syntax=[ <Functie>, <Minimumwaarde>, <Aantal iteraties> ]\n[ <Uitdrukking>, <Variabelen>, <Startwaarden>, <Tel> ]
IterationList.Syntax=[ <Functie>, <Minimumwaarde>, <Aantal iteraties> ]\n[ <Uitdrukking>, <Variabelen>, <Startwaarden>, <Tel> ]
IterationList.SyntaxCAS=[ <Functie>, <Minimumwaarde>, <Aantal iteraties> ]
Join.Syntax=[ <Lijst van Lijsten> ]\n[ <Lijst>, <Lijst>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matrix> ]
KeepIf.Syntax=[ <Voorwaarde>, <Lijst> ]\n[ <Voorwaarde>, <Veranderlijke>, <Lijst> ]
LCM.Syntax=[ <Lijst getallen> ]\n[ <Getal>, <Getal> ]
LCM.SyntaxCAS=[ <Lijst getallen> ]\n[ <Lijst met veeltermen> ]\n[ <Getal>, <Getal> ]\n[ <Veelterm>, <Veelterm> ]
LUDecomposition.Syntax=[ <Matrix> ]
LaTeX.Syntax=[ <Veelhoek> ]\n[ <Veelhoek>, <Boolean voor vervanging van variabelen> ]\n[ <Veelhoek>, <Boolean voor vervanging van variabelen>, <Boolean Naam tonen> ]
Laplace.Syntax=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]\n[ <Functie>, <Veranderlijke>, <Veranderlijke> ]
Last.Syntax=[ <Lijst> ]\n[ <Tekst> ]\n[ <Lijst>, <Aantal elementen> ]\n[ <Tekst>, <Aantal elementen> ]
Last.SyntaxCAS=[ <Lijst> ]\n[ <Lijst>, <Aantal elementen> ]
LeftSide.Syntax=[ <Vergelijking> ]
LeftSide.SyntaxCAS=[ <Vergelijking> ]\n[ <Stelsel van vergelijkingen> ]\n[ <Stelsel van vergelijkingen>, <Index> ]
LeftSum.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Aantal rechthoeken> ]
Length.Syntax=[ <Veelhoek> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Punt>, <Eindpunt> ]\n[ <Kromme>, <Start t-waarde>, <Eind t-waarde> ]\n[ <Kromme>, <Punt>, <Eindpunt> ]
Length.SyntaxCAS=[ <Lijst> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Veranderlijke>, <Beginwaarde interval>, <Eindwaarde interval> ]
LetterToUnicode.Syntax=[ <Tekst> ]
Limit.Syntax=[ <Functie>, <Variabele> ]
Limit.SyntaxCAS=[ <Uitdrukking>, <Variabele> ]\n[ <Uitdrukking>, <Veranderlijke>, <Variabele> ]
LimitAbove.Syntax=[ <Functie>, <Variabele> ]
LimitAbove.SyntaxCAS=[ <Uitdrukking>, <Variabele> ]\n[ <Uitdrukking>, <Veranderlijke>, <Variabele> ]
LimitBelow.Syntax=[ <Functie>, <Variabele> ]
LimitBelow.SyntaxCAS=[ <Uitdrukking>, <Variabele> ]\n[ <Uitdrukking>, <Veranderlijke>, <Variabele> ]
Line=Lijn
Line.Syntax=[ <Punt>, <Punt> ]\n[ <Punt>, <Rechte> ]\n[ <Punt>, <Vector> ]
LineBisector.Syntax=[ <Lijnstuk> ]\n[ <Punt>, <Punt> ]
LineBisector.Syntax3D=[ <Lijnstuk> ]\n[ <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
LineGraph.Syntax=[ <List of x-Coordinates>, <List of y-Coordinates> ]
Locus.Syntax=[ <Punt van MP>, <Punt> ]\n[ <Punt van MP>, <Schuifknop> ]\n[ <Slopefield>, <Punt> ]\n[ <f(x, y)>, <Punt> ]
LocusEquation.Syntax=[ <Meetkundige plaats> ]\n[ <Punt dat MP bepaalt>, <Bewegend Punt> ]\n[ <Boolean Expressie>, <Bewegend Punt> ]
LogNormal.Syntax=[ <Gemiddelde>, <Standaardafwijking>, <Waarde Variabele> ]\n[ <Gemiddelde>, <Standaardafwijking>, <Waarde Variabele>, <Logisch Cumulatief>  ]\n[ <Gemiddelde>, <Standaardafwijking>, x, <Logisch Cumulatief> ]
Logistic.Syntax=[ <Gemiddelde>, <Parameter s>, <Waarde Variabele> ]\n[ <Gemiddelde>, <Parameter s>, <Waarde Variabele>, <Logisch Cumulatief>  ]\n[ <Gemiddelde>, <Parameter s>, x, <Logisch Cumulatief> ]
LowerSum.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Aantal rechthoeken> ]
MatrixRank.Syntax=[ <Matrix> ]
Max.Syntax=[ <Interval> ]\n[ <Getal>, <Getal> ]\n[ <Lijst> ]\n[ <Gegevenslijst>, <Frequentielijst> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
Max.SyntaxCAS=[ <Lijst> ]\n[ <Interval> ]\n[ <Getal>, <Getal> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Gegevenslijst>, <Frequentielijst> ]
Maximize.Syntax=[ <Afhankelijk getal>, <Vrij getal> ]\n[ <Afhankelijk getal>, <Punt op pad> ]
Mean.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
MeanX.Syntax=[ <Puntenlijst> ]
MeanY.Syntax=[ <Puntenlijst> ]
Median.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
Median.SyntaxCAS=[ <Lijst getallen> ]
Midpoint.Syntax=[ <Lijnstuk> ]\n[ <Kegelsnede> ]\n[ <Interval> ]\n[ <Punt>, <Punt> ]
Min.Syntax=[ <Interval> ]\n[ <Getal>, <Getal> ]\n[ <Lijst> ]\n[ <Gegevenslijst>, <Frequentielijst> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
Min.SyntaxCAS=[ <Lijst> ]\n[ <Interval> ]\n[ <Getal>, <Getal> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Gegevenslijst>, <Frequentielijst> ]
MinimalPolynomial.Syntax=[ <Matrix> ]
Minimize=Minimaliseren
Minimize.Syntax=[ <Afhankelijk getal>, <Vrij getal> ]\n[ <Afhankelijk getal>, <Punt op pad> ]
MinimumSpanningTree=MinimaleOpspannendeBoom
MinimumSpanningTree.Syntax=[ <Puntenlijst> ]
Mirror.Syntax=[ <Veelhoek>, <Punt> ]\n[ <Veelhoek>, <Rechte> ]\n[ <Veelhoek>, <Cirkel> ]
Mirror.Syntax3D=[ <Veelhoek>, <Punt> ]\n[ <Veelhoek>, <Rechte> ]\n[ <Veelhoek>, <Vlak> ]\n[ <Veelhoek>, <Cirkel> ]
MixedNumber=MixedGetal
MixedNumber.SyntaxCAS=[ <Getal> ]
Mod.Syntax=[ <Deeltal>, <Deler> ]\n[ <Deeltal>, <Deler> ]
Mode.Syntax=[ <Lijst getallen> ]
ModularExponent.Syntax=[ <Getal>, <Getal>, <Getal> ]
NDerivative.Syntax=[ <Functie> ]\n[ <Functie>, <Orde> ]
NIntegral=NumeriekeIntegraal
NIntegral.Syntax=[ <Functie> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Beginwaarde interval>, <Start y-Value>, <Eindwaarde interval> ]
NIntegral.SyntaxCAS=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]\n[ <Functie>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
NInvert.Syntax=[ <Functie> ]
NSolutions=NOplossingsverzameling
NSolutions.Syntax=[ <Vergelijking> ]
NSolutions.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Vergelijking>, <Variabele = beginwaarde> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]
NSolve.Syntax=[ <Vergelijking> ]
NSolve.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Vergelijking>, <Variabele = beginwaarde> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]
NSolveODE.Syntax=[ <Lijst met afgeleiden>, <Start x-coördinaat>, <Lijst met start y-coördinaten>, <Eind x-coördinaat> ]
Name.Syntax=[ <Veelhoek> ]
Net.Syntax=[ <Veelvlak>, <Getal> ]\n[ <Veelvlak>, <Getal>, <Zijvlak>, <Ribbe>, <Ribbe>, ... ]
NextPrime.Syntax=[ <Getal> ]
Normal.Syntax=[ <Gemiddelde>, <Standaardafwijking>, <Waarde Variabele> ]\n[ <Gemiddelde>, <Standaardafwijking>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Gemiddelde>, <Standaardafwijking>, x, <Logisch Cumulatief> ]
NormalQuantilePlot.Syntax=[ <Onbewerkte gegevenslijst> ]
Normalize.Syntax=[ <Lijst getallen> ]\n[ <Puntenlijst> ]
Numerator.Syntax=[ <Getal> ]\n[ <Functie> ]
Numerator.SyntaxCAS=[ <Uitdrukking> ]
Numeric.SyntaxCAS=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Aantal beduidende cijfers> ]
Object.Syntax=[ <Naam van object als tekst> ]
Octahedron.Syntax=[ <Gelijkzijdige driehoek> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
Ordinal=Ordinaal
Ordinal.Syntax=[ <Geheel> ]
OrdinalRank.Syntax=[ <Lijst> ]
OrthogonalLine.Syntax=[ <Punt>, <Rechte> ]\n[ <Punt>, <Lijnstuk> ]\n[ <Punt>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punt>, <Rechte> ]\n[ <Punt>, <Lijnstuk> ]\n[ <Punt>, <Vector> ]\n[ <Punt>, <Vlak> ]\n[ <Rechte>, <Rechte> ]\n[ <Punt>, <Richting>, <Richting> ]\n[ <Punt>, <Rechte>, <Context> ]
OrthogonalPlane.Syntax=[ <Punt>, <Rechte> ]\n[ <Punt>, <Vector> ]
OrthogonalVector.Syntax=[ <Rechte> ]\n[ <Lijnstuk> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Rechte> ]\n[ <Lijnstuk> ]\n[ <Vector> ]\n[ <Vlak> ]
OrthogonalVector.SyntaxCAS=[ <Vector> ]
OsculatingCircle.Syntax=[ <Punt>, <Veelhoek> ]
PMCC.Syntax=[ <Puntenlijst> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Punt>, <Rechte> ]
Parameter.Syntax=[ <Parabool> ]
ParametricDerivative.Syntax=[ <Kromme> ]
ParseToFunction.Syntax=[ <Functie>, <String> ]
ParseToNumber.Syntax=[ <Getal>, <String> ]
PartialFractions=Partiëelbreuken
PartialFractions.Syntax=[ <Functie> ]
PartialFractions.SyntaxCAS=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]
Pascal.Syntax=[ <Number of Successes>, <Probabiliteit of Success> ]\n[ <Number of Successes>, <Probabiliteit of Success>, <Logisch Cumulatief> ]\n[ <Number of Successes>, <Probabiliteit of Success>, <Waarde Variabele>, <Logisch Cumulatief> ]
Pascal.SyntaxCAS=[ <Number of Successes>, <Probabiliteit of Success>, <Waarde Variabele>, <Logisch Cumulatief> ]
PathParameter.Syntax=[ <Punt Op Pad> ]
Payment.Syntax=[ <Rentevoet>, <Aantal perioden>, <Aanvangswaarde>, <Eindwaarde (optie)>, <Type (optie)> ]
PenStroke.Syntax=[ <Punt>, ..., <Punt> ]
Percentile.Syntax=[ <Lijst getallen>, <Procent> ]
Perimeter.Syntax=[ <Veelhoek> ]\n[ <Kegelsnede> ]\n[ <Meetkundige plaats> ]
Periods.Syntax=[ <Rentevoet>, <Termijn>, <Aanvangswaarde>, <Eindwaarde (optie)>, <Type (optie)> ]
PieChart.Syntax=[ <Frequentielijst> ]\n[ <Frequentielijst>, <Middelpunt>, <Straal> ]
Plane.Syntax=[ <Veelhoek> ]\n[ <Kegelsnede> ]\n[ <Punt>, <Vlak> ]\n[ <Punt>, <Rechte> ]\n[ <Rechte>, <Rechte> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Vector>, <Vector> ]
PlaneBisector.Syntax=[ <Lijnstuk> ]\n[ <Punt>, <Punt> ]
PlaySound.Syntax=[ <Bestand> ]\n[ <Boolean Play> ]\n[ <Functie>, <Minimum waarde>, <Maximum waarde> ]\n[ <Functie>, <Minimum waarde>, <Maximum waarde>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Vergelijking in x> ]
Point.Syntax=[ <Veelhoek> ]\n[ <Veelhoek>, <Parameter> ]\n[ <Punt>, <Vector> ]\n[ <Lijst> ]
PointIn.Syntax=[ <Gebied> ]
PointList.Syntax=[ <Lijst> ]
Poisson.Syntax=[ <Gemiddelde> ]\n[ <Gemiddelde>, <Logisch Cumulatief> ]\n[ <Gemiddelde>, <Waarde Variabele>, <Logisch Cumulatief> ]
Poisson.SyntaxCAS=[ <Gemiddelde>, <Waarde Variabele>, <Logisch Cumulatief> ]
Polar.Syntax=[ <Punt>, <Kegelsnede> ]\n[ <Rechte>, <Kegelsnede> ]
PolyLine.Syntax=[ <Puntenlijst> ]\n[ <Punt>, ..., <Punt> ]
Polygon.Syntax=[ <Puntenlijst> ]\n[ <Punt>, ..., <Punt> ]\n[ <Punt>, <Punt>, <Aantal hoekpunten> ]
Polygon.Syntax3D=[ <Puntenlijst> ]\n[ <Punt>, ..., <Punt> ]\n[ <Punt>, <Punt>, <Aantal hoekpunten> ]\n[ <Punt>, <Punt>, <Aantal hoekpunten>, <Richting> ]
Polynomial.Syntax=[ <Functie> ]\n[ <Puntenlijst> ]
Polynomial.SyntaxCAS=[ <Functie> ]\n[ <Functie>, <Veranderlijke> ]
PresentValue.Syntax=[ <Rentevoet>, <Aantal perioden>, <Termijn>, <Eindwaarde (optie)>, <Type (optie)> ]
PreviousPrime.Syntax=[ <Getal> ]
PrimeFactors.Syntax=[ <Getal> ]
Prism.Syntax=[ <Veelhoek>, <Punt> ]\n[ <Veelhoek>, <Hoogte> ]\n[ <Punt>, <Punt>, ... ]
Product.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Aantal elementen> ]\n[ <Lijst getallen>, <Frequentielijst> ]\n[ <Uitdrukking>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
Product.SyntaxCAS=[ <Lijst van getallen> ]\n[ <Uitdrukking>, <Veranderlijke>, <Start Index>, <Eind Index> ]
Prove.Syntax=[ <Boolean Expressie> ]
ProveDetails=BewijsDetail
ProveDetails.Syntax=[ <Boolean Expressie> ]
Pyramid.Syntax=[ <Veelhoek>, <Punt> ]\n[ <Veelhoek>, <Hoogte> ]\n[ <Punt>, <Punt>, <Punt>, <Punt>, ... ]
Q1=Q1
Q1.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
Q3=Q3
Q3.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
QRDecomposition.Syntax=[ <Matrix> ]
QuadricSide=zijde
QuadricSide.Syntax=[ <Kwadriek> ]
RSquare=RSquare
RSquare.Syntax=[ <Puntenlijst>, <Functie> ]
Radius.Syntax=[ <Kegelsnede> ]
Random.Syntax=[ <Minimum Integer>, <Maximum Integer> ]\n[ <Minimum Integer>, <Maximum Integer>, <Aantal steekproeven> ]\n[ <Minimum Integer>, <Maximum Integer>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <Minimum Integer>, <Maximum Integer> ]\n[ <Minimum Integer>, <Maximum Integer>, <Aantal steekproeven> ]
RandomBinomial.Syntax=[ <Aantal Experimenten>, <Kans> ]
RandomDiscrete.Syntax=[ <Lijst>, <Lijst> ]
RandomElement.Syntax=[ <Lijst> ]
RandomNormal.Syntax=[ <Gemiddelde>, <Standaardafwijking> ]
RandomPointIn.Syntax=[ <Gebied> ]\n[ <Puntenlijst> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson.Syntax=[ <Gemiddelde> ]
RandomPolynomial=RandomPolynomial
RandomPolynomial.Syntax=[ <Graad>, <Minimum voor Coefficienten>, <Maximum voor Coefficienten> ]
RandomPolynomial.SyntaxCAS=[ <Graad>, <Minimum voor Coefficienten>, <Maximum voor Coefficienten> ]\n[ <Veranderlijke>, <Graad>, <Minimum voor Coefficienten>, <Maximum voor Coefficienten> ]
RandomUniform=RandomUniform
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Aantal steekproeven> ]
Rate.Syntax=[ <Aantal perioden>, <Termijn>, <Aanvangswaarde>, <Eindwaarde (optie)>, <Type (optie)>, <Gok (optie)> ]
Rationalize.SyntaxCAS=[ <Getal> ]
Ray.Syntax=[ <Punt>, <Punt> ]\n[ <Punt>, <Vector> ]
ReadText.Syntax=[ <Tekst> ]
RectangleSum.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Aantal rechthoeken>, <Plaats beginrechthoek> ]
ReducedRowEchelonForm.Syntax=[ <Matrix> ]
Relation=Verband
Relation.Syntax=[ <Lijst> ]\n[ <Veelhoek>, <Veelhoek> ]
RemovableDiscontinuity.Syntax=[ <Functie> ]
Remove.Syntax=[ <Lijst>, <Lijst> ]
RemoveUndefined.Syntax=[ <Lijst> ]
Rename.Syntax=[ <Veelhoek>, <Naam> ]
Repeat.Syntax=[ <Getal>, <Scripting Commando>, <Scripting Commando>, ... ]
ReplaceAll.Syntax=[ <Tekst>, <Te vervangen tekst>, <Nieuwe tekst> ]
ResidualPlot.Syntax=[ <Puntenlijst>, <Functie> ]
Reverse.Syntax=[ <Lijst> ]
RightSide.Syntax=[ <Vergelijking> ]
RightSide.SyntaxCAS=[ <Vergelijking> ]\n[ <Stelsel van vergelijkingen> ]\n[ <Stelsel van vergelijkingen>, <Index> ]
RigidPolygon.Syntax=[ <Veelhoek> ]\n[ <Veelhoek>, <x_coördinaat beginpunt>, <y_coördinaat beginpunt> ]\n[ <Willekeurig Punt>, ..., <Willekeurig Punt> ]
Root=Wortel
Root.Syntax=[ <Veelterm> ]\n[ <Functie>, <Getal> ]\n[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
Root.SyntaxCAS=[ <Veelterm> ]
RootList.Syntax=[ <Lijst> ]
RootMeanSquare.Syntax=[ <Lijst getallen> ]
Roots.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval> ]
Rotate.Syntax=[ <Veelhoek>, <Grootte hoek> ]\n[ <Veelhoek>, <Grootte hoek>, <Punt> ]
Rotate.Syntax3D=[ <Veelhoek>, <Grootte hoek> ]\n[ <Veelhoek>, <Grootte hoek>, <Punt> ]\n[ <Veelhoek>, <Grootte hoek>, <Rotatieas> ]\n[ <Veelhoek>, <Grootte hoek>, <Punt op as>, <As-richting of vlak> ]
RotateText.Syntax=[ <Tekst>, <Grootte hoek> ]
Row.Syntax=[ <Cel> ]
RunClickScript.Syntax=[ <Veelhoek> ]
RunUpdateScript.Syntax=[ <Veelhoek> ]
SDX.Syntax=[ <Puntenlijst> ]
SDY.Syntax=[ <Puntenlijst> ]
SVD.Syntax=[ <Matrix> ]
SXX.Syntax=[ <Lijst getallen> ]\n[ <Puntenlijst> ]
SXY.Syntax=[ <Puntenlijst> ]\n[ <Lijst getallen>, <Lijst getallen> ]
SYY.Syntax=[ <Puntenlijst> ]
Sample.Syntax=[ <Lijst>, <Size> ]\n[ <Lijst>, <Size>, <Met vervanging> ]
SampleSD=SampleSD
SampleSD.SyntaxCAS=[ <Lijst getallen> ]
SampleSDX.Syntax=[ <Puntenlijst> ]
SampleSDY=SY
SampleSDY.Syntax=[ <Puntenlijst> ]
SampleVariance.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
SampleVariance.SyntaxCAS=[ <Lijst getallen> ]
ScientificText.Syntax=[ <Getal> ]\n[ <Getal>, <Precisie> ]
SecondAxis.Syntax=[ <Kegelsnede> ]
SecondAxisLength.Syntax=[ <Kegelsnede> ]
Sector.Syntax=[ <Kegelsnede>, <Punt>, <Punt> ]\n[ <Kegelsnede>, <Parameter Value>, <Parameter Value> ]
Segment.Syntax=[ <Punt>, <Punt> ]\n[ <Punt>, <Getal> ]
SelectObjects=GekozenObjecten
SelectObjects.Syntax=[ ]\n[ <Veelhoek>, <Veelhoek>, ... ]
SelectedElement.Syntax=[ <Lijst> ]
SelectedIndex.Syntax=[ <Lijst> ]
Semicircle.Syntax=[ <Punt>, <Punt> ]
Sequence.Syntax=[ <Maximumwaarde> ]\n[ <Minimumwaarde>, <Maximumwaarde> ]\n[ <Minimumwaarde>, <Maximumwaarde>, <toename> ]\n[ <Uitdrukking>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]\n[ <Uitdrukking>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde>, <toename> ]
SetActiveView.Syntax=[ <View> ]\n[ <Vlak> ]
SetAxesRatio.Syntax=[ <Getal>, <Getal> ]
SetAxesRatio.Syntax3D=[ <Getal>, <Getal> ]\n[ <Getal>, <Getal>, <Getal> ]
SetBackgroundColor.Syntax=[ <Kleur> ]\n[ <Veelhoek>, <Kleur> ]\n[ <Rood>, <Groen>, <Blauw> ]\n[ <Veelhoek>, <Rood>, <Groen>, <Blauw> ]
SetCaption.Syntax=[ <Veelhoek>, <Tekst> ]
SetColor.Syntax=[ <Veelhoek>, <Kleur> ]\n[ <Veelhoek>, <Rood>, <Groen>, <Blauw> ]
SetConditionToShowObject=SetConditionToShowObject
SetConditionToShowObject.Syntax=[ <Veelhoek>, <Voorwaarde> ]
SetConstructionStep.Syntax=[ <Getal> ]
SetCoords.Syntax=[ <Veelhoek>, <x>, <y> ]\n[ <Veelhoek>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Veelhoek>, <Getal> ]\n[ <Lijnstuk>, <Getal>, <Getal>]
SetDynamicColor.Syntax=[ <Veelhoek>, <Rood>, <Groen>, <Blauw> ]\n[ <Veelhoek>, <Rood>, <Groen>, <Blauw>, <Doorzichtigheid> ]
SetFilling.Syntax=[ <Veelhoek>, <Getal> ]
SetFixed.Syntax=[ <Veelhoek>, <true | false> ]\n[ <Veelhoek>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Veelhoek>, <Afbeelding> ]\n[ <Veelhoek>, <Tekst> ]
SetLabelMode.Syntax=[ <Veelhoek>, <Getal> ]
SetLayer.Syntax=[ <Veelhoek>, <Laag> ]
SetLevelOfDetail.Syntax=[ <Oppervlak>, <Detailniveau> ]
SetLineStyle.Syntax=[ <Veelhoek>, <Getal> ]
SetLineThickness.Syntax=[ <Veelhoek>, <Getal> ]
SetPerspective.Syntax=[ <Tekst> ]
SetPointSize.Syntax=[ <Veelhoek>, <Getal> ]
SetPointStyle.Syntax=[ <Punt>, <Getal> ]
SetSeed.Syntax=[ <Geheel> ]
SetSpinSpeed.Syntax=[ <Getal> ]
SetTooltipMode=SetTooltipMode
SetTooltipMode.Syntax=[ <Veelhoek>, <Getal> ]
SetTrace.Syntax=[ <Veelhoek>, <true | false> ]
SetValue=ZetWaarde
SetValue.Syntax=[ <Boolean>, <0|1> ]\n[ <Veelhoek>, <Veelhoek> ]\n[ <Lijst>, <Getal>, <Veelhoek> ]
SetViewDirection.Syntax=[ ]\n[ <Richting> ]\n[ <Richting>, <Boolean animeren> ]
SetVisibleInView.Syntax=[ <Veelhoek>, <View Number 1|2>, <Boolean> ]
Shear.Syntax=[ <Veelhoek>, <Rechte>, <Ratio> ]
ShortestDistance.Syntax=[ <Lijst met lijnstukken>, <Punt>, <Eindpunt>, <Boolean Weighted> ]
ShowAxes.Syntax=[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowGrid.Syntax=[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowLabel.Syntax=[ <Veelhoek>, <Boolean> ]
ShowLayer.Syntax=[ <Getal> ]
Shuffle.Syntax=[ <Lijst> ]
SigmaXX.Syntax=[ <Puntenlijst> ]\n[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
SigmaXY.Syntax=[ <Puntenlijst> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]
SigmaYY.Syntax=[ <Puntenlijst> ]
Simplify.Syntax=[ <Functie> ]\n[ <Tekst> ]
Simplify.SyntaxCAS=[ <Functie> ]
Slider.Syntax=[ <Min>, <Max>, <toename>, <Snelheid>, <Breedte>, <Hoek>, <Horizontaal>, <Animatie>, <Random> ]
Slope.Syntax=[ <Rechte> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Getal> ]\n[ <f(x, y)>, <Getal>, <Length Multiplier a> ]\n[ <f(x, y)>, <Getal>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot.Syntax=[ <Functie> ]\n[ <Functie>, <Boolean herhalen> ]
Solutions.Syntax=[ <Vergelijking> ]
Solutions.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]
Solve.Syntax=[ <Vergelijking> ]
Solve.SyntaxCAS=[ <Vergelijking in x> ]\n[ <Vergelijking>, <Veranderlijke> ]\n[ <Stelsel van vergelijkingen>, <Lijst van veranderlijken> ]\n[ <Lijst met parametervergelijkingen>, <Lijst van veranderlijken> ]\n[ <Vergelijking>, <Veranderlijke>, <Lijst met aannames> ]
SolveCubic.SyntaxCAS=[ <derdegraadsveelterm> ]
SolveODE.Syntax=[ <f'(x)> ]\n[ <f'(x)>, <Punten op f> ]\n[ <f'(x)>, <Begin x>, <Begin y>, <Eind x>, <Stap> ]\n[ <y'>, <x'>, <Begin x>, <Begin y>, <Eind t>, <Stap> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Begin x>, <Begin y>, <Begin y'>, <Eind x>, <Stap> ]
SolveODE.SyntaxCAS=[ <Vergelijking> ]\n[ <Vergelijking>, <Punt(en) op f> ]\n[ <Vergelijking>, <Punt(en) op f>, <Punt(en) op f'> ]\n[ <Vergelijking>, <Afhankelijk veranderlijke>, <Onafhankelijk veranderlijke>, <Punt(en) op f> ] \n[ <Vergelijking>, <Afhankelijk veranderlijke>, <Onafhankelijk veranderlijke>, <Punt(en) op f>, <Punt(en) op f'> ]
SolveQuartic.SyntaxCAS=[ <Veelterm vierde graad> ]
Sort.Syntax=[ <Lijst> ]\n[ <Values>, <Keys> ]
Spearman.Syntax=[ <Puntenlijst> ]\n[ <Lijst getallen>, <Lijst getallen> ]
Sphere.Syntax=[ <Punt>, <Straal> ]\n[ <Punt>, <Punt> ]
Spline.Syntax=[ <Puntenlijst> ]\n[ <Puntenlijst>, <Orde ≥ 3> ]\n[ <Puntenlijst>, <Orde ≥ 3>, <Gewichtsfunctie> ]
Split.Syntax=[ <Tekst>, <Lijst met teksten om op te splitsen> ]
StartAnimation.Syntax=[ ]\n[ <Boolean> ]\n[ <Slider or Point>, <Slider or Point>, ... ]\n[ <Slider or Point>, <Slider or Point>, ..., <Boolean> ]
StartRecord.Syntax=[ ]\n[ <Boolean> ]
StemPlot.Syntax=[ <Lijst> ]\n[ <Lijst>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <Puntenlijst> ]\n[ <Puntenlijst>, <Boolean Join> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]\n[ <Puntenlijst>, <Boolean Join>, <Point style> ]\n[ <List of x-Coordinates>, <List of y-Coordinates>, <Boolean Join> ]\n[ <List of x-Coordinates>, <List of y-Coordinates>, <Boolean Join>, <Point style> ]
StickGraph=Stickdiagram
StickGraph.Syntax=[ <Puntenlijst> ]\n[ <Puntenlijst>, <Boolean Horizontal> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]\n[ <List of x-Coordinates>, <List of y-Coordinates>, <Boolean Horizontal> ]
Stretch.Syntax=[ <Veelhoek>, <Vector> ]\n[ <Veelhoek>, <Rechte>, <Ratio> ]
Substitute.SyntaxCAS=[ <Uitdrukking>, <Substitutielijst> ]\n[ <Uitdrukking>, <van>, <tot> ]
Sum.Syntax=[ <Lijst> ]\n[ <Lijst>, <Aantal elementen> ]\n[ <Lijst>, <Frequentielijst> ]\n[ <Uitdrukking>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
Sum.SyntaxCAS=[ <Lijst> ]\n[ <Uitdrukking>, <Veranderlijke>, <Minimumwaarde>, <Maximumwaarde> ]
SumSquaredErrors=ResidueleVariantie
SumSquaredErrors.Syntax=[ <Puntenlijst>, <Functie> ]
SurdText=SurdText
SurdText.Syntax=[ <Punt> ]\n[ <Getal> ]\n[ <Getal>, <Lijst> ]
Surface.Syntax=[ <Functie>, <Grootte hoek> ]\n[ <Kromme>, <Grootte hoek>, <Rechte> ]\n[ <Uitdrukking>, <Uitdrukking>, <Uitdrukking>, <parameter variabele 1>, <Minimumwaarde>, <Maximumwaarde>, <parameter variabele 2>, <Minimumwaarde>, <Maximumwaarde> ]
TDistribution.Syntax=[ <Aantal vrijheidsgraden>, <Waarde Variabele> ]\n[ <Aantal vrijheidsgraden>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Aantal vrijheidsgraden>, x, <Logisch Cumulatief> ]
TDistribution.SyntaxCAS=[ <Aantal vrijheidsgraden>, <Waarde Variabele> ]
TMean2Estimate=TMean2Estimate
TMean2Estimate.Syntax=[ <Lijst met steekproefgegevens 1>, <Lijst met steekproefgegevens 2>, <Betrouwbaarheidsniveau>, <Boolean Pooled> ]\n[ <Steekproefgemiddelde 1>, <Steekproef standaardafwijking 1>, <Steekproefgrootte 1>, <Steekproefgemiddelde 2>, <Steekproef standaardafwijking 2>, <Steekproefgrootte 2>, <Betrouwbaarheidsniveau>, <Boolean Pooled> ]
TMeanEstimate=TMeanEstimate
TMeanEstimate.Syntax=[ <Lijst van steekproefgegevens>, <Betrouwbaarheidsniveau> ]\n[ <Steekproefgemiddelde>, <Steekproef standaardafwijking>, <Steekproef Grootte>, <Betrouwbaarheidsniveau> ]
TTest=TTest
TTest.Syntax=[ <Lijst van steekproefgegevens>, <Hypothetisch gemiddelde>, <Staart> ]\n[ <Steekproefgemiddelde>, <Steekproef standaardafwijking>, <Steekproef Grootte>, <Hypothetisch gemiddelde>, <Staart> ]
TTest2=TTest2
TTest2.Syntax=[ <Lijst met steekproefgegevens 1>, <Lijst met steekproefgegevens 2>, <Staart>, <Boolean Pooled> ]\n[ <Steekproefgemiddelde 1>, <Steekproef standaardafwijking 1>, <Steekproefgrootte 1>, <Steekproefgemiddelde 2>, <Steekproef standaardafwijking 2>, <Steekproefgrootte 2>, <Staart>, <Boolean Pooled> ]
TTestPaired=TTestPaired
TTestPaired.Syntax=[ <Lijst met steekproefgegevens 1>, <Lijst met steekproefgegevens 2>, <Staart> ]
TableText=TabeLT
TableText.Syntax=[ <Lijst>, <Lijst>, ... ]\n[ <Lijst>, <Lijst>, ..., <Uitlijning tekst> ]\n[ <Lijst>, <Lijst>, ..., <Uitlijning tekst>, <Minimum celbreedte> ]\n[ <Lijst>, <Lijst>, ..., <Uitlijning tekst>, <Minimum celbreedte>, <Minimum celhoogte> ]
Take.Syntax=[ <Lijst>, <Startpositie>, <Eindpositie> ]\n[ <Lijst>, <Startpositie> ]\n[ <Tekst>, <Startpositie>, <Eindpositie> ]\n[ <Tekst>, <Startpositie> ]
Take.SyntaxCAS=[ <Lijst>, <Startpositie> ]\n[ <Lijst>, <Startpositie>, <Eindpositie> ]\n[ <Tekst>, <Startpositie>, <Eindpositie> ]\n[ <Tekst>, <Startpositie> ]
Tangent.Syntax=[ <Punt>, <Kegelsnede> ]\n[ <Punt>, <Functie> ]\n[ <Punt op kromme>, <Kromme> ]\n[ <Getal>, <Functie> ]\n[ <Rechte>, <Kegelsnede> ]\n[ <Kegelsnede>, <Kegelsnede> ]
Tangent.SyntaxCAS=[ <Getal>, <Functie> ]\n[ <Punt>, <Veelhoek> ]
TaylorSeries.Syntax=[ <Functie>, <Getal>, <Getal> ]
TaylorSeries.SyntaxCAS=[ <Uitdrukking>, <Getal>, <Getal> ]\n[ <Uitdrukking>, <Veranderlijke>, <Waarde Variabele>, <Getal> ]
Tetrahedron.Syntax=[ <Gelijkzijdige driehoek> ]\n[ <Punt>, <Punt>, <Punt> ]\n[ <Punt>, <Punt>, <Richting> ]
Text.Syntax=[ <Veelhoek> ]\n[ <Veelhoek>, <Boolean voor vervanging van variabelen> ]\n[ <Veelhoek>, <Punt> ]\n[ <Veelhoek>, <Punt>, <Boolean voor vervanging van variabelen> ]\n[ <Veelhoek>, <Punt>, <Boolean voor vervanging van variabelen>, <Boolean voor LaTeX formule> ]\n[ <Veelhoek>, <Punt>, <Boolean voor vervanging van variabelen>, <Boolean voor LaTeX formule>, <Horizontaal uitlijnen -1|0|1> ]\n[ <Veelhoek>, <Punt>, <Boolean voor vervanging van variabelen>, <Boolean voor LaTeX formule>, <Horizontaal uitlijnen -1|0|1>, <Verticaal uitlijnen -1|0|1> ]
TextToUnicode.Syntax=[ <Tekst> ]
Textfield.Syntax=[ <Linked Object> ]
TiedRank=TiedRank
TiedRank.Syntax=[ <Lijst> ]
ToBase.Syntax=[ <Getal>, <Basis> ]
ToComplex.Syntax=[ <Vector> ]
ToExponential=ToExponential
ToExponential.SyntaxCAS=[ <Complex Getal> ]
ToPoint.Syntax=[ <Complex Getal> ]
ToPolar.Syntax=[ <Complex Getal> ]\n[ <Vector> ]
ToolImage=ToolImage
ToolImage.Syntax=[ <Getal> ]\n[ <Getal>, <Punt> ]\n[ <Getal>, <Punt>, <Punt> ]
Top.Syntax=[ <Kwadriek> ]
Translate.Syntax=[ <Veelhoek>, <Vector> ]\n[ <Vector>, <Punt> ]
Transpose.Syntax=[ <Matrix> ]
TrapezoidalSum.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Aantal> ]
TravelingSalesman.Syntax=[ <Puntenlijst> ]
TriangleCenter=DriehoeksCentrum
TriangleCenter.Syntax=[ <Punt>, <Punt>, <Punt>, <Getal> ]
TriangleCurve.Syntax=[ <Punt>, <Punt>, <Punt>, <Vergelijking> ]
Triangular.Syntax=[ <Ondergrens>, <Bovengrens>, <Modus>, <Waarde Variabele> ]\n[ <Ondergrens>, <Bovengrens>, <Modus>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Ondergrens>, <Bovengrens>, <Modus>, x, <Logisch Cumulatief> ]
TrigCombine.Syntax=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Doelfunctie> ]
TrigExpand.Syntax=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Doelfunctie> ]
TrigExpand.SyntaxCAS=[ <Uitdrukking> ]\n[ <Uitdrukking>, <Doelfunctie> ]\n[ <Uitdrukking>, <Doelfunctie>, <Doel_veranderlijke> ]\n[ <Uitdrukking>, <Doelfunctie>, <Doel_veranderlijke>, <Doel_veranderlijke> ]
TrigSimplify.Syntax=[ <Uitdrukking> ]
Trilinear.Syntax=[ <Punt>, <Punt>, <Punt>, <Getal>, <Getal>, <Getal> ]
TurningPoint.Syntax=[ <Veelterm> ]
TurningPoint.SyntaxCAS=[ <Functie> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Turtle>, <Afstand> ]
TurtleDown.Syntax=[ <Turtle> ]
TurtleForward.Syntax=[ <Turtle>, <Afstand> ]
TurtleLeft.Syntax=[ <Turtle>, <Grootte hoek> ]
TurtleRight.Syntax=[ <Turtle>, <Grootte hoek> ]
TurtleUp.Syntax=[ <Turtle> ]
Type.Syntax=[ <Veelhoek> ]
UnicodeToLetter.Syntax=[ <Geheel> ]
UnicodeToText.Syntax=[ <Lijst van gehele getallen> ]
Uniform.Syntax=[ <Ondergrens>, <Bovengrens>, <Waarde Variabele> ]\n[ <Ondergrens>, <Bovengrens>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Ondergrens>, <Bovengrens>, x, <Logisch Cumulatief> ]
Union.Syntax=[ <Lijst>, <Lijst> ]\n[ <Veelhoek>, <Veelhoek> ]
Unique.Syntax=[ <Lijst> ]
UnitOrthogonalVector.Syntax=[ <Rechte> ]\n[ <Lijnstuk> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Rechte> ]\n[ <Lijnstuk> ]\n[ <Vector> ]\n[ <Vlak> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector> ]
UnitVector.Syntax=[ <Veelhoek> ]
UnitVector.SyntaxCAS=[ <Vector> ]
UpdateConstruction.Syntax=[ ]\n[ <Aantal keren> ]
UpperSum.Syntax=[ <Functie>, <Beginwaarde interval>, <Eindwaarde interval>, <Aantal rechthoeken> ]
Variance.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
Vector.Syntax=[ <Punt> ]\n[ <Punt>, <Eindpunt> ]
Vertex.Syntax=[ <Kegelsnede> ]\n[ <Kegelsnede> ]\n[ <Veelhoek> ]\n[ <Veelhoek>, <Index> ]\n[ <Lijnstuk>, <Index> ]
VerticalText.Syntax=[ <Tekst> ]\n[ <Tekst>, <Punt> ]
Volume.Syntax=[ <Lichaam> ]
Voronoi.Syntax=[ <Puntenlijst> ]
Weibull.Syntax=[ <Shape>, <Parameter s>, <Waarde Variabele> ]\n[ <Shape>, <Parameter s>, <Waarde Variabele>, <Logisch Cumulatief> ]\n[ <Shape>, <Parameter s>, x, <Logisch Cumulatief> ]
Weibull.SyntaxCAS=[ <Shape>, <Parameter s>, <Waarde Variabele> ]
ZMean2Estimate=ZGemiddelde2Schatting
ZMean2Estimate.Syntax=[ <Lijst met steekproefgegevens 1>, <Lijst met steekproefgegevens 2>, <σ1>, <σ2>, <Betrouwbaarheidsniveau> ]\n[ <Steekproefgemiddelde 1>, <σ1>, <Steekproefgrootte 1>, <Steekproefgemiddelde 2>, <σ2>, <Steekproefgrootte 2>, <Betrouwbaarheidsniveau> ]
ZMean2Test=ZGemiddelde2Test
ZMean2Test.Syntax=[ <Lijst met steekproefgegevens 1>, <σ1>, <Lijst met steekproefgegevens 2>, <σ2>, <Staart> ]\n[ <Steekproefgemiddelde 1>, <σ1>, <Steekproefgrootte 1>, <Steekproefgemiddelde 2>, <σ2>, <Steekproefgrootte 2>, <Staart> ]
ZMeanEstimate=ZGemiddeldeSchatter
ZMeanEstimate.Syntax=[ <Lijst van steekproefgegevens>, <sigma>, <Betrouwbaarheidsniveau> ]\n[ <Steekproefgemiddelde>, <sigma>, <Steekproef Grootte>, <Betrouwbaarheidsniveau> ]
ZMeanTest=ZGemiddeldeTest
ZMeanTest.Syntax=[ <Lijst van steekproefgegevens>, <sigma>, <Hypothetisch gemiddelde>, <Staart> ]\n[ <Steekproefgemiddelde>, <sigma>, <Steekproef Grootte>, <Hypothetisch gemiddelde>, <Staart> ]
ZProportion2Estimate=ZProportie2Schatter
ZProportion2Estimate.Syntax=[ <Steekproef_proportie 1>, <Steekproefgrootte 1>, <Steekproef_proportie 2>, <Steekproefgrootte 2>, <Betrouwbaarheidsniveau> ]
ZProportion2Test=ZProportie2Test
ZProportion2Test.Syntax=[ <Steekproef_proportie 1>, <Steekproefgrootte 1>, <Steekproef_proportie 2>, <Steekproefgrootte 2>, <Staart> ]
ZProportionEstimate=ZIntervalSchatting
ZProportionEstimate.Syntax=[ <Steekproef_Proportie>, <Steekproef Grootte>, <Betrouwbaarheidsniveau> ]
ZProportionTest=ZTest
ZProportionTest.Syntax=[ <Steekproef_Proportie>, <Steekproef Grootte>, <Proportie_Hypothese>, <Staart> ]
Zip.Syntax=[ <Uitdrukking>, <Var1>, <Lijst1>, <Var2>, <Lijst2>, ... ]
Zipf.Syntax=[ <Aantal elementen>, <Exponent> ]\n[ <Aantal elementen>, <Exponent>, <Logisch Cumulatief> ]\n[ <Aantal elementen>, <Exponent>, <Waarde Variabele>, <Logisch Cumulatief> ]
Zipf.SyntaxCAS=[ <Aantal elementen>, <Exponent>, <Waarde Variabele>, <Logisch Cumulatief> ]
ZoomIn.Syntax=[ ]\n[ <Schaalfactor> ]\n[ <Schaalfactor>, <Middelpunt> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Schaalfactor> ]\n[ <Schaalfactor>, <Middelpunt> ]
mad.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
mean.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
nCr.Syntax=[ <Getal>, <Getal> ]
stdev.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]
stdevp.Syntax=[ <Onbewerkte gegevenslijst> ]\n[ <Lijst getallen>, <Frequentielijst> ]