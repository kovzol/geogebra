# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
Angle.Syntax=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Vértice>, <Ponto> ]\n[ <Ponto>, <Vértice>, <Ângulo> ]
Angle.Syntax3D=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Reta>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Ponto>, <Vértice>, <Ponto> ]\n[ <Ponto>, <Vértice>, <Ângulo> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Sentido> ]
AngularBisector.Syntax=[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Append=Juntar
Append.Syntax=[ <Lista>, <Objeto> ]\n[ <Objeto>, <Lista> ]
ApplyMatrix.Syntax=[ <Matriz>, <Objeto> ]
Arc.Syntax=[ <Circunferência>, <Ponto>, <Ponto> ]\n[ <Elipse>, <Ponto>, <Ponto> ]\n[ <Circunferência>, <Parâmetro>, <Parâmetro> ]\n[ <Elipse>, <Parâmetro>, <Parâmetro> ]
AreCollinear.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
AreConcurrent.Syntax=[ <Reta>, <Reta>, <Reta> ]
AreConcyclic=EstãonaCircunferência
AreConcyclic.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Ponto> ]
AreCongruent.Syntax=[ <Objeto>, <Objeto> ]
AreEqual.Syntax=[ <Objeto>, <Objeto> ]
AreParallel.Syntax=[ <Reta>, <Reta> ]
ArePerpendicular.Syntax=[ <Reta>, <Reta> ]
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Ponto>, ..., <Ponto> ]
Assume=Assume
Assume.SyntaxCAS=[ <Condição>, <Expressão> ]
Asymptote.Syntax=[ <Objeto> ]
AttachCopyToView=VerEmAnexo
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Ponto 1>, <Ponto 2>, <Ponto Ecrã 1>, <Ponto Ecrã 2> ]
Axes.Syntax=[ <Cónica> ]
Axes.Syntax3D=[ <Cónica> ]\n[ <Quádrica> ]
AxisStepX=PassoEixoOx
AxisStepX.Syntax=[ ]
AxisStepY=PassoEixoOy
AxisStepY.Syntax=[ ]
BarChart=GráficodeBarras
BarChart.Syntax=[ <Lista dos Dados Classificados>, <Lista de Frequências> ]\n[ <Lista dos Dados Não Classificados>, <Largura das Barras>, <Fator de Escala Vertical (opcional)> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências>, <Largura das Barras> ]\n[ <Valor inicial>, <Valor Final>, <Lista das Alturas> ]\n[ <Valor inicial>, <Valor Final>, <Expressão>, <Variável>, <Do Número>, <até  ao Número> ]\n[ <Valor inicial>, <Valor Final>, <Expressão>, <Variável>, <Do Número>, <até  ao Número>, <com Passo de> ]
Barycenter=CentrodeMassa
Barycenter.Syntax=[ <Lista de Pontos>, <Lista de Pesos> ]
Bernoulli=Bernoulli
Bernoulli.Syntax=[ <Probabilidade>, <Acumulada (true|false))> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Valor da Variável> ]\n[ <Alfa>, <Beta>, <Valor da Variável>, <Acumulada (true|false))>  ]\n[ <Alfa>, <Beta>, x, <Acumulada (true|false))> ]
Binomial.Syntax=[ <Número n>, <Número r> ]
BinomialDist=Binomial
BinomialDist.Syntax=[ <Número de Provas>, <Probabilidade do Sucesso> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Acumulada (true|false))> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Lista de Valores> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Valor da Variável>, <Acumulada (true|false))> ]
BinomialDist.SyntaxCAS=[ <Número de Provas>, <Probabilidade do Sucesso>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Número de Provas>, <Probabilidade do Sucesso>, <Lista de Valores> ]
Bottom=BaseInferior
Bottom.Syntax=[ <Quádrica> ]
BoxPlot=DiagramadeExtremoseQuartis
BoxPlot.Syntax=[ <Ordenada>, <Semialtura>, <Lista dos Dados Não Classificados> ]\n[ <Ordenada>, <Semialtura>, <Lista dos Dados Não Classificados>, <Booleano Outliers> ]\n[ <Ordenada>, <Semialtura>, <Lista dos Dados Classificados>, <Lista de Frequências>, <Booleano Outliers> ]\n[ <Ordenada>, <Semialtura>, <Valor inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button.Syntax=[ ]\n[ <Subtítulo> ]
CASLoaded.Syntax=[]
CFactor=CFatorizar
CFactor.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]
CIFactor=FatorizaCI
CIFactor.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]
CSolutions=CSoluções
CSolutions.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
CSolve=CResolver
CSolve.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
Cauchy=Cauchy
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor da Variável> ]\n[ <Mediana>, <Escala>, <Valor da Variável>, <Acumulada (true|false))>  ]\n[ <Mediana>, <Escala>, x, <Acumulada (true|false))> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor da Variável> ]
Cell.Syntax=[ <Coluna>, <Linha> ]
CellRange=BlocodeCélulas
CellRange.Syntax=[ <Célula Inicial>, <Célula Final> ]
Center.Syntax=[ <Cónica> ]
Center.Syntax3D=[ <Cónica> ]\n[ <Quádrica> ]
CenterView=CentrarJanelaDeVisualização
CenterView.Syntax=[ <Ponto> ]
Centroid=Baricentro
Centroid.Syntax=[ <Polígono> ]
CharacteristicPolynomial=PolinómioCaracterístico
CharacteristicPolynomial.Syntax=[ <Matriz> ]
Checkbox=CaixadeControlo
Checkbox.Syntax=[ ]\n[ <Subtítulo> ]\n[ <Lista> ]\n[ <Subtítulo>, <Lista> ]
ChiSquared=QuiQuadrado
ChiSquared.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Graus de Liberdade>, x, <Acumulada (true|false))> ]
ChiSquared.SyntaxCAS=[ <Graus de Liberdade>, <Variável> ]
ChiSquaredTest=TesteQuiQuadrado
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle=Circunferência
Circle.Syntax=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Circle.Syntax3D=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Reta>, <Ponto> ]\n[ <Ponto>, <Raio>, <Sentido> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
CircleArc.Syntax=[ <Centro>, <Ponto>, <Ponto> ]
CircleSector.Syntax=[ <Centro>, <Ponto>, <Ponto> ]
CircumcircleArc.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
CircumcircleSector=SetorCircunCircular
CircumcircleSector.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
Circumference=Perímetrocircunferência
Circumference.Syntax=[ <Cónica> ]
Classes.Syntax=[ <Lista dos Dados Classificados>, <Número de Classes> ]\n[ <Lista dos Dados Classificados>, <Início>, <Amplitude das Classes> ]
ClosestPoint.Syntax=[ <Caminho>, <Ponto> ]\n[ <Reta>, <Reta> ]
ClosestPointRegion=FecharPontoRegião
ClosestPointRegion.Syntax=[ <Região>, <Ponto> ]
Coefficients.Syntax=[ <Polinómio> ]\n[ <Cónica> ]
Coefficients.SyntaxCAS=[ <Polinómio> ]\n[ <Polinómio>, <Variável> ]
Column.Syntax=[ <Célula> ]
ColumnName.Syntax=[ <Célula> ]
CommonDenominator.Syntax=[ <Expressão>, <Expressão> ]
CompleteSquare=CompletarQuadrado
CompleteSquare.Syntax=[ <Função Quadrática> ]
ComplexRoot=RaizComplexa
ComplexRoot.Syntax=[ <Polinómio> ]
Cone.Syntax=[ <Circunferência>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]\n[ <Ponto>, <Vetor>, <Ângulo> ]
ConeInfinite.Syntax=[ <Ponto>, <Vetor>, <Ângulo> ]\n[ <Ponto>, <Ponto>, <Ângulo> ]\n[ <Ponto>, <Reta>, <Ângulo> ]
Conic=Cónica
Conic.Syntax=[ <Lista> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Ponto>, <Ponto> ]\n[ <Número>, <Número>, <Número>, <Número>, <Número>, <Número> ]
ConstructionStep.Syntax=[ ]\n[ <Objeto> ]
ContingencyTable=TabeladeContingência
ContingencyTable.Syntax=[ <Lista de Texto>, <Lista de Texto> ]\n[ <Lista de Texto>, <Lista de Texto>, <Opções> ]\n[ <Lista dos Valores das linhas>, <Lista dos Valores das Colunas>, <Tabela de Frequências> ]\n[ <Lista dos Valores das linhas>, <Lista dos Valores das Colunas>, <Tabela de Frequências> , <Opções> ]
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nível> ]\n[ <Número>, <Nível>, <Simplificado(true|false)> ]
ConvexHull=EnvolventeConvexa
ConvexHull.Syntax=[ <Lista de Pontos> ]
CopyFreeObject=CopiarObjetosLivres
CopyFreeObject.Syntax=[ <Objeto> ]
Corner.Syntax=[ <Número do Canto> ]\n[ <Imagem>, <Número do Canto> ]\n[ <Texto>, <Número do Canto> ]\n[ <Folha>, <Número do Canto> ]
CountIf.Syntax=[ <Condição>, <Lista> ]\n[ <Condição>, <Variável>, <Lista> ]
Covariance.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
Cross.Syntax=[ <Vetor>, <Vetor> ]
CrossRatio.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Ponto> ]
Cube.Syntax=[ <Quadrado> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Cubic=Cúbico
Cubic.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número> ]
Curvature.Syntax=[ <Ponto>, <Objeto> ]
CurvatureVector.Syntax=[ <Ponto>, <Objeto> ]
CurveCartesian.Syntax=[ <Expressão>, <Expressão>, <Parâmetro Variável>, <Valor inicial>, <Valor Final> ]
CurveCartesian.Syntax3D=[ <Expressão>, <Expressão>, <Parâmetro Variável>, <Valor inicial>, <Valor Final> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Parâmetro Variável>, <Valor inicial>, <Valor Final> ]
Cylinder.Syntax=[ <Circunferência>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]
CylinderInfinite.Syntax=[ <Reta>, <Raio> ]\n[ <Ponto>, <Vetor>, <Raio> ]\n[ <Ponto>, <Ponto>, <Raio> ]
DataFunction=FunçãoData
DataFunction.Syntax=[ <Lista de Números>, <Lista de Números> ]
Defined.Syntax=[ <Objeto> ]
Degree.Syntax=[ <Polinómio> ]
Degree.SyntaxCAS=[ <Polinómio> ]\n[ <Polinómio>, <Variável> ]
DelauneyTriangulation=TriangulaçãoDelaunay
DelauneyTriangulation.Syntax=[ <Lista de Pontos> ]
Delete.Syntax=[ <Objeto> ]
Denominator.Syntax=[ <Número> ]\n[ <Função> ]
Denominator.SyntaxCAS=[ <Expressão> ]
DensityPlot=FunçãoDensidade
Derivative.Syntax=[ <Função> ]\n[ <Curva> ]\n[ <Função>, <Número> ]\n[ <Função>, <Variável> ]\n[ <Curva>, <Número> ]\n[ <Função>, <Variável>, <Número> ]
Derivative.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]\n[ <Expressão>, <Variável>, <Número> ]
Determinant.Syntax=[ <Matriz> ]
Diameter=Diametral
Diameter.Syntax=[ <Vetor>, <Cónica> ]\n[ <Reta>, <Cónica> ]
Difference.Syntax=[ <Polígono>, <Polígono> ]
Dilate.Syntax=[ <Objeto>, <Razão> ]\n[ <Objeto>, <Razão>, <Centro> ]
Dimension.Syntax=[ <Objeto> ]
Direction=Sentido
Direction.Syntax=[ <Reta> ]
Directrix.Syntax=[ <Cónica> ]
Distance.Syntax=[ <Ponto>, <Objeto> ]\n[ <Reta>, <Reta> ]\n[ <Plano>, <Plano> ]
Distance.SyntaxCAS=[ <Ponto>, <Objeto> ]
Div.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
Division=Divisão
Division.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
Divisors=Divisores
Divisors.Syntax=[ <Número> ]
DivisorsList=ListaDivisores
DivisorsList.Syntax=[ <Número> ]
DivisorsSum=SomaDivisores
DivisorsSum.Syntax=[ <Número> ]
Dodecahedron.Syntax=[ <Pentágono Regular> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Dot.Syntax=[ <Vetor>, <Vetor> ]
DotPlot=GráficodePontos
DotPlot.Syntax=[ <Lista dos Dados Não Classificados>, <Empilhar Pontos Adjacentes(opcional)>, <Fator de Escala (opcional)>]
DynamicCoordinates.Syntax=[ <Ponto>, <Número>, <Número> ]\n[ <Ponto>, <Número>, <Número>, <z-Coordenada> ]
Eccentricity.Syntax=[ <Cónica> ]
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element.Syntax=[ <Lista>, <Posição do Elemento> ]\n[ <Matriz>, <Linha>, <Coluna> ]\n[ <Lista>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Posição do Elemento> ]\n[ <Matriz>, <Linha>, <Coluna> ]
Eliminate=Eliminado
Eliminate.Syntax=[ <Lista de Polinómios>, <Lista de Variáveis> ]
Ellipse.Syntax=[ <Foco1>, <Foco1>, <Comprimento do Semieixo MaiorX> ]\n[ <Foco1>, <Foco1>, <Segmento de Reta> ]\n[ <Foco1>, <Foco1>, <Ponto> ]
Ends.Syntax=[ <Quádrica> ]
Envelope.Syntax=[ <Caminho>, <Ponto> ]
Erlang=Erlang
Erlang.Syntax=[ <Forma>, <Razão>, <Valor da Variável> ]\n[ <Forma>, <Razão>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Forma>, <Razão>, x, <Acumulada (true|false))> ]
Excentricity.Syntax=[ <Cónica> ]
Execute.Syntax=[ <Lista de Texto> ]\n[ <Lista de Texto>, <Parâmetro>, <Parâmetro>, ... ]
Expand.Syntax=[ <Expressão> ]
Exponential=Exponencial
Exponential.Syntax=[ <Lambda>, <Valor da Variável> ]\n[ <Lambda>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Lambda>, x, <Acumulada (true|false))> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valor da Variável> ]
ExportImage.Syntax=[ <Propriedade>, <Valor>, <Propriedade>, <Valor>, ... ]
ExtendedGCD=AlgoritmodeEuclidesEstendido
ExtendedGCD.Syntax=[ <Inteiro>, <Inteiro>]\n[ <Polinómio>, <Polinómio>]
Extremum.Syntax=[ <Polinómio> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Extremum.SyntaxCAS=[ <Função> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
FDistribution=FDistribuição
FDistribution.Syntax=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Valor da Variável> ]\n[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, x, <Acumulada (true|false))> ]
FDistribution.SyntaxCAS=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Valor da Variável> ]
Factor=Fatorizar
Factor.Syntax=[ <Polinómio> ]
Factor.SyntaxCAS=[ <Número> ]\n[ <Polinómio> ]\n[ <Expressão>, <Variável> ]
Factors.Syntax=[ <Polinómio> ]\n[ <Número> ]
FillCells.Syntax=[ <Bloco de Células>, <Objeto> ]\n[ <Célula>, <Lista> ]\n[ <Célula>, <Matriz> ]
FillColumn.Syntax=[ <Coluna>, <Lista> ]
FillRow.Syntax=[ <Linha>, <Lista> ]
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Texto>, <Número de Elementos> ]\n[ <Lugar Geométrico>, <Número de Elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]
FirstAxis.Syntax=[ <Cónica> ]
FirstAxisLength=ComprimentoSemiEixoMaiorX
FirstAxisLength.Syntax=[ <Cónica> ]
Fit.Syntax=[ <Lista de Pontos>, <Lista de Funções> ]\n[ <Lista de Pontos>, <Função> ]
FitExp.Syntax=[ <Lista de Pontos> ]
FitGrowth=RegressãoExponencialGeral
FitGrowth.Syntax=[ <Lista de Pontos> ]
FitImplicit=AjusteImplícito
FitImplicit.Syntax=[ <Lista de Pontos>, <Ordem> ]
FitLineX.Syntax=[ <Lista de Pontos> ]
FitLineY=RetadeRegressão
FitLineY.Syntax=[ <Lista de Pontos> ]
FitLog.Syntax=[ <Lista de Pontos> ]
FitLogistic.Syntax=[ <Lista de Pontos> ]
FitPoly.Syntax=[ <Lista de Pontos>, <Grau de Polinômio> ]\n[ <Funçao mão livre>, <Grau de Polinômio> ]
FitPow.Syntax=[ <Lista de Pontos> ]
FitSin.Syntax=[ <Lista de Pontos> ]
Flatten=Nivela
Flatten.Syntax=[ <Lista> ]
Focus.Syntax=[ <Cónica> ]
FractionText.Syntax=[ <Número> ]\n[ <Ponto> ]\n[ <Número>, <Fração unitária> ]
Frequency.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Acumulada (true|false))>, <Lista dos Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados> ]\n[ <Lista de Texto>, <Lista de Texto> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]
FrequencyPolygon=PolígonodeFrequências
FrequencyPolygon.Syntax=[ <Lista dos intervalo das Classes>, <Lista das Alturas> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade (true | false)>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade (true | false)>, <Fator de Escala (opcional)> ]
FrequencyTable=TabeladeFrequências
FrequencyTable.Syntax=[ <Lista dos Dados Não Classificados>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true|false))>, <Lista dos Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]
FromBase.Syntax=[ <Número como Texto>, <Base> ]
Function.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Lista de Números> ]
Function.Syntax3D=[ <Lista de Números> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Expressão>, <Variável 1>, <Valor inicial>, <Valor Final>, <Variável2>, <Valor inicial>, <Valor Final> ]
Function.SyntaxCAS=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
FutureValue.Syntax=[ <Taxa>, <Número de Períodos>, <Pagamento>, <Valor Inicial>, <Tipo (opcional)> ]
GCD.Syntax=[ <Lista de Números> ]\n[ <Número>, <Número> ]
GCD.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinómios> ]\n[ <Número>, <Número> ]\n[ <Polinómio>, <Polinómio> ]
Gamma=Gama
Gamma.Syntax=[ <Alfa>, <Beta>, <Valor da Variável> ]\n[ <Alfa>, <Beta>, <Valor da Variável>, <Acumulada (true|false))>  ]\n[ <Alfa>, <Beta>, x, <Acumulada (true|false))> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor da Variável> ]
GeometricMean.Syntax=[ <Lista de Números> ]
GetTime=ObterTempo
GetTime.Syntax=[]\n[ <Configurar> ]
GroebnerDegRevLex=GroebnerDegRevLex
GroebnerDegRevLex.Syntax=[ <Lista de Polinómios> ]\n[ <Lista de Polinómios>, <Lista de Variáveis> ]
GroebnerLex.Syntax=[ <Lista de Polinómios> ]\n[ <Lista de Polinómios>, <Lista de Variáveis> ]
GroebnerLexDeg=GroebnerLexDeg
GroebnerLexDeg.Syntax=[ <Lista de Polinómios> ]\n[ <Lista de Polinómios>, <Lista de Variáveis> ]
HarmonicMean=MédiaHarmónica
HarmonicMean.Syntax=[ <Lista de Números> ]
Height.Syntax=[ <Sólido> ]
HideLayer.Syntax=[ <Número> ]
Histogram.Syntax=[ <Lista dos intervalo das Classes>, <Lista das Alturas> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]
HistogramRight.Syntax=[ <Lista dos intervalo das Classes>, <Lista das Alturas> ]\n[ <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)>  ]\n[ <Acumulada (true|false))>, <Lista dos intervalo das Classes>, <Lista dos Dados Não Classificados>, <Densidade>, <Fator de Escala (opcional)> ]
HyperGeometric=HiperGeométrica
HyperGeometric.Syntax=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra> ]\n[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Acumulada (true|false))> ]\n[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Valor da Variável>, <Acumulada (true|false))> ]
HyperGeometric.SyntaxCAS=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Valor da Variável>, <Acumulada (true|false))> ]
Hyperbola.Syntax=[ <Foco1>, <Foco1>, <Comprimento do Semieixo MaiorX> ]\n[ <Foco1>, <Foco1>, <Segmento de Reta> ]\n[ <Foco1>, <Foco1>, <Ponto> ]
IFactor=FatorizaI
IFactor.Syntax=[ <Polinómio> ]
IFactor.SyntaxCAS=[ <Expressão> ]
Icosahedron.Syntax=[ <Triângulo Equilátero> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Identity=Identidade
Identity.Syntax=[ <Número> ]
If.Syntax=[ <Condição>, <Então> ]\n[ <Condição>, <Então>, <Senão> ]
ImplicitCurve.Syntax=[ <Lista de Pontos> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expressão>, <Variável Dependente>, <Variável Independente> ]
Incircle=CircunferênciaInscrita
Incircle.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
IndexOf=Posição
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <Início> ]\n[ <Texto>, <Texto>, <Início> ]
Insert.Syntax=[ <Lista>, <Lista>, <Posição> ]\n[ <Objeto>, <Lista>, <Posição> ]
Integral.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Calcular(true|false))> ]
Integral.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Variável>, <Valor inicial>, <Valor Final> ]
IntegralBetween.Syntax=[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x>, <Calcular(true|false))> ]
IntegralBetween.SyntaxCAS=[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Função>, <Variável>, <Valor inicial>, <Valor Final> ]
IntegralSymbolic=IntegralSimbólico
IntegralSymbolic.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]
InteriorAngles=InteriorÂngulos
InteriorAngles.Syntax=[ <Polígono> ]
Intersect=Intersetar
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <Índice do Ponto de Interseção> ]\n[ <Objeto>, <Objeto>, <Ponto Inicial> ]\n[ <Função>, <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Curva 1>, <Curva 2>, <Parâmetro 1>, <Parâmetro 2> ]
Intersect.SyntaxCAS=[ <Função>, <Função> ]
IntersectConic=InterseçãoCónica
IntersectConic.Syntax=[ <Plano>, <Quádrica> ]\n[ <Quádrica>, <Quádrica> ]
IntersectPath.Syntax=[ <Reta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]
IntersectPath.Syntax3D=[ <Reta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]\n[ <Plano>, <Polígono> ]\n[ <Plano>, <Quádrica> ]
Intersection=Interseção
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBeta=InversaBeta
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseBinomial=BinomialInversa
InverseBinomial.Syntax=[ <Número de Provas>, <Probabilidade do Sucesso>, <Probabilidade Cumulativa> ]
InverseBinomialMinimumTrials=InvBinomialMínmoTentativas
InverseBinomialMinimumTrials.Syntax=[ <Probabilidade Cumulativa>, <Probabilidade do Sucesso>, <Número de Sucessos> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Probabilidade Cumulativa>, <Probabilidade do Sucesso>, <Número de Sucessos> ]
InverseCauchy=CauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidade> ]
InverseChiSquared=QuiQuadradoInversa
InverseChiSquared.Syntax=[ <Graus de Liberdade>, <Probabilidade> ]
InverseExponential=ExponencialInversa
InverseExponential.Syntax=[ <Lambda>, <Probabilidade> ]
InverseFDistribution=FInversa
InverseFDistribution.Syntax=[ <Graus de Liberdade do Numerador>, <Graus de Liberdade do Denominador>, <Probabilidade> ]
InverseGamma=GamaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseHyperGeometric=HiperGeométricaInversa
InverseHyperGeometric.Syntax=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Probabilidade> ]
InverseLaplace=InversaLaplace
InverseLaplace.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Variável>, <Variável> ]
InverseLogNormal=InversoLogNormal
InverseLogNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Probabilidade> ]
InverseLogistic=LogísticaInversa
InverseLogistic.Syntax=[ <Média>, <Escala>, <Probabilidade> ]
InverseNormal=NormalInversa
InverseNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Probabilidade Cumulativa> ]
InversePascal=Pascalnversa
InversePascal.Syntax=[ <n>, <p>, <Probabilidade> ]
InversePoisson=PoissonInversa
InversePoisson.Syntax=[ <Média>, <Probabilidade> ]
InverseTDistribution.Syntax=[ <Graus de Liberdade>, <Probabilidade> ]
InverseWeibull=WeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Escala>, <Probabilidade> ]
InverseZipf=ZipfInversa
InverseZipf.Syntax=[ <Número de Elementos>, <Expoente>, <Probabilidade> ]
Invert=Inversa
Invert.Syntax=[ <Matriz> ]\n[ <Função> ]
IsFactored=EstáFatorizado
IsFactored.Syntax=[ <Polinómio> ]
IsInRegion=EstánaRegião
IsInRegion.Syntax=[ <Ponto>, <Região> ]
IsInteger.Syntax=[ <Número> ]
IsPrime.Syntax=[ <Número> ]
IsTangent=éTangente
IsTangent.Syntax=[ <Reta>, <Cónica> ]
IsVertexForm=VérticeForma2grau
IsVertexForm.Syntax=[ <Função> ]
Iteration.Syntax=[ <Função>, <Valor inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contar> ]
IterationList=ListaIteração
IterationList.Syntax=[ <Função>, <Valor inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contar> ]
IterationList.SyntaxCAS=[ <Função>, <Valor inicial>, <Número de Iterações> ]
Join=Ligar
Join.Syntax=[ <Lista de Listas> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=JordanDiagonalização
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf.Syntax=[ <Condição>, <Lista> ]\n[ <Condição>, <Variável>, <Lista> ]
LCM.Syntax=[ <Lista de Números> ]\n[ <Número>, <Número> ]
LCM.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinómios> ]\n[ <Número>, <Número> ]\n[ <Polinómio>, <Polinómio> ]
LUDecomposition.Syntax=[ <Matriz> ]
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Exibir Valor dos Parâmetros (true |false)> ]\n[ <Objeto>, <Exibir Valor dos Parâmetros (true |false)>, <Exibir Nome do Objeto (true |false)> ]
Laplace=Laplace
Laplace.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Variável>, <Variável> ]
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Texto>, <Número de Elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]
LeftSide=MembroEsquerdo
LeftSide.Syntax=[ <Condição> ]
LeftSide.SyntaxCAS=[ <Condição> ]\n[ <Lista de Equações> ]\n[ <Lista de Equações>, <Index> ]
LeftSum=SomaEsquerda
LeftSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
Length.Syntax=[ <Objeto> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Valor Inicial>, <Valor Final> ]\n[ <Curva>, <Valor Inicial-t>, <Valor Final-t> ]\n[ <Curva>, <Valor Inicial>, <Valor Final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Variável>, <Valor Inicial-x>, <Valor Final-x> ]
LetterToUnicode.Syntax=[ <Letra> ]
Limit.Syntax=[ <Função>, <Valor> ]
Limit.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
LimitAbove=LimiteàDireita
LimitAbove.Syntax=[ <Função>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
LimitBelow=LimiteàEsquerda
LimitBelow.Syntax=[ <Função>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
Line.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Reta Paralela> ]\n[ <Ponto>, <Vetor Diretor> ]
LineBisector.Syntax=[ <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]
LineBisector.Syntax3D=[ <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
LineGraph=LinhaGráfico
LineGraph.Syntax=[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]
Locus.Syntax=[ <Ponto que define o Lugar Geométrico>, <Ponto> ]\n[ <Ponto que define o Lugar Geométrico>, <Seletor> ]\n[ <Gradiente>, <Ponto> ]\n[ <f(x, y)>, <Ponto> ]
LocusEquation=EquaçãoLugarGeométrico
LocusEquation.Syntax=[ <Lugar Geométrico> ]\n[ <Lugar Geométrico>, <Ponto Móvel> ]\n[ <Expressão Booleana>, <Ponto Móvel> ]
LogNormal=LogNormal
LogNormal.Syntax=[ <Média>, <Desvio-Padrão>, <Valor da Variável> ]\n[ <Média>, <Desvio-Padrão>, <Valor da Variável>, <Acumulada (true|false))>  ]\n[ <Média>, <Desvio-Padrão>, x, <Acumulada (true|false))> ]
Logistic=Logística
Logistic.Syntax=[ <Média>, <Escala>, <Valor da Variável> ]\n[ <Média>, <Escala>, <Valor da Variável>, <Acumulada (true|false))>  ]\n[ <Média>, <Escala>, x, <Acumulada (true|false))> ]
LowerSum=SomaInferior
LowerSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
MAD=MAD
MatrixRank=Intervalo
MatrixRank.Syntax=[ <Matriz> ]
Max.Syntax=[ <Intervalo> ]\n[ <Número>, <Número> ]\n[ <Lista> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <Número>, <Número> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências> ]
Maximize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto no caminho> ]
Mean.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
MeanX.Syntax=[ <Lista de Pontos> ]
MeanY.Syntax=[ <Lista de Pontos> ]
Median.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Median.SyntaxCAS=[ <Lista de Números> ]
Midpoint.Syntax=[ <Segmento de Reta> ]\n[ <Cónica> ]\n[ <Intervalo> ]\n[ <Ponto>, <Ponto> ]
Min.Syntax=[ <Intervalo> ]\n[ <Número>, <Número> ]\n[ <Lista> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <Número>, <Número> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Lista dos Dados Classificados>, <Lista de Frequências> ]
MinimalPolynomial=PolinómioMínino
MinimalPolynomial.Syntax=[ <Matriz> ]
Minimize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto no caminho> ]
MinimumSpanningTree=ÁrvoreAbrangentedeCustoMínimo
MinimumSpanningTree.Syntax=[ <Lista de Pontos> ]
Mirror.Syntax=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Circunferência> ]
Mirror.Syntax3D=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Plano> ]\n[ <Objeto>, <Circunferência> ]
MixedNumber=FraçãoPrópia
MixedNumber.SyntaxCAS=[ <Número> ]
Mod.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinómio Dividendo>, <Polinómio Divisor> ]
Mode.Syntax=[ <Lista de Números> ]
ModularExponent=ExponenciaçãoModular
ModularExponent.Syntax=[ <Número>, <Número>, <Número> ]
NDerivative=NDerivada
NDerivative.Syntax=[ <Função> ]\n[ <Função>, <Ordem> ]
NIntegral=NIntegral
NIntegral.Syntax=[ <Função> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Valor Inicial-x>, <Start y-Value>, <Valor Final-x> ]
NIntegral.SyntaxCAS=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]\n[ <Função>, <Variável>, <Valor inicial>, <Valor Final> ]
NInvert=NInversão
NInvert.Syntax=[ <Função> ]
NSolutions=NSoluções
NSolutions.Syntax=[ <Condição> ]
NSolutions.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Condição>, <Variável = Valor inicial> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
NSolve=NResolver
NSolve.Syntax=[ <Condição> ]
NSolve.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Condição>, <Variável = Valor inicial> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
NSolveODE=NSolveODE
NSolveODE.Syntax=[ <Lista de Derivadas>, <x Inicial>, <Lista de y Inicial>, <x Final> ]
Name.Syntax=[ <Objeto> ]
Net.Syntax=[ <Poliedro>, <Número> ]\n[ <Poliedro>, <Número>, <Face>, <Aresta>, <Aresta>, ... ]
NextPrime.Syntax=[ <Número> ]
Normal=Normal
Normal.Syntax=[ <Média>, <Desvio-Padrão>, <Valor da Variável> ]\n[ <Média>, <Desvio-Padrão>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Média>, <Desvio-Padrão>, x, <Acumulada (true|false))> ]
NormalQuantilePlot=NormalQQPlot
NormalQuantilePlot.Syntax=[ <Lista dos Dados Não Classificados> ]
Normalize.Syntax=[ <Lista de Números> ]\n[ <Lista de Pontos> ]
Numerator.Syntax=[ <Número> ]\n[ <Função> ]
Numerator.SyntaxCAS=[ <Expressão> ]
Numeric.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Números Significativos> ]
Object.Syntax=[ <Nome do Objeto como Texto> ]
Octahedron.Syntax=[ <Triângulo Equilátero> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Ordinal.Syntax=[ <Inteiro> ]
OrdinalRank=PosiçãoOrdinal
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=RetaPerpendicular
OrthogonalLine.Syntax=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Vetor> ]
OrthogonalLine.Syntax3D=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento de Reta> ]\n[ <Ponto>, <Vetor> ]\n[ <Ponto>, <Plano> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Sentido>, <Sentido> ]\n[ <Ponto>, <Reta>, <Contexto> ]
OrthogonalPlane.Syntax=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Vetor> ]
OrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]
OrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]\n[ <Plano> ]
OrthogonalVector.SyntaxCAS=[ <Vetor> ]
OsculatingCircle=CircunferênciaOsculadora
OsculatingCircle.Syntax=[ <Ponto>, <Objeto> ]
PMCC=CoeficienteCorrelação
PMCC.Syntax=[ <Lista de Pontos> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]
Pan=Panorama
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Ponto>, <Reta> ]
Parameter.Syntax=[ <Parábola> ]
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=AnalisarParaFunção
ParseToFunction.Syntax=[ <Função>, <Cadeia de Carateres> ]
ParseToNumber=AnalisarParaNúmero
ParseToNumber.Syntax=[ <Número>, <Cadeia de Carateres> ]
PartialFractions.Syntax=[ <Função> ]
PartialFractions.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]
Pascal=Pascal
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Acumulada (true|false))> ]\n[ <n>, <p>, <Valor da Variável>, <Acumulada (true|false))> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valor da Variável>, <Acumulada (true|false))> ]
PathParameter=ParâmetroDoPonto
PathParameter.Syntax=[ <Ponto no Caminho> ]
Payment.Syntax=[ <Taxa>, <Número de Períodos>, <Valor de Hoje>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
PenStroke.Syntax=[ <Ponto>, ..., <Ponto> ]
Percentile.Syntax=[ <Lista de Números>, <Valor do Percentil> ]
Perimeter.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Lugar Geométrico> ]
Periods.Syntax=[ <Taxa>, <Pagamento>, <Valor de Hoje>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
PieChart=GráficodeSetores
PieChart.Syntax=[ <Lista de Frequências> ]\n[ <Lista de Frequências>, <Centro>, <Raio> ]
Plane.Syntax=[ <Polígono> ]\n[ <Cónica> ]\n[ <Ponto>, <Plano> ]\n[ <Ponto>, <Reta> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Vetor>, <Vetor> ]
PlaneBisector.Syntax=[ <Segmento de Reta> ]\n[ <Ponto>, <Ponto> ]
PlaySound.Syntax=[ <Ficheiro> ]\n[ <Tocar (tocar(true|false)> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo>, <Amostra Simples>, <Profundidade da Amostra> ]
PlotSolve.Syntax=[ <Condição em x> ]
Point.Syntax=[ <Objeto> ]\n[ <Objeto>, <Parâmetro> ]\n[ <Ponto>, <Vetor> ]\n[ <Lista> ]
PointIn.Syntax=[ <Região> ]
PointList=PontodaLista
PointList.Syntax=[ <Lista> ]
Poisson=Poisson
Poisson.Syntax=[ <Média> ]\n[ <Média>, <Acumulada (true|false))> ]\n[ <Média>, <Valor da Variável>, <Acumulada (true|false))> ]
Poisson.SyntaxCAS=[ <Média>, <Valor da Variável>, <Acumulada (true|false))> ]
Polar.Syntax=[ <Ponto>, <Cónica> ]\n[ <Reta>, <Cónica> ]
PolyLine=LinhaPoligonal
PolyLine.Syntax=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]
Polygon.Syntax=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]\n[ <Ponto>, <Ponto>, <Número de Vértices> ]
Polygon.Syntax3D=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]\n[ <Ponto>, <Ponto>, <Número de Vértices> ]\n[ <Ponto>, <Ponto>, <Número de Vértices>, <Sentido> ]
Polynomial=Polinómio
Polynomial.Syntax=[ <Função> ]\n[ <Lista de Pontos> ]
Polynomial.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]
PresentValue=ValorInicial
PresentValue.Syntax=[ <Taxa>, <Número de Períodos>, <Pagamento>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
PreviousPrime.Syntax=[ <Número> ]
PrimeFactors.Syntax=[ <Número> ]
Prism.Syntax=[ <Polígono>, <Ponto> ]\n[ <Polígono>, <Altura> ]\n[ <Ponto>, <Ponto>, ... ]
Product.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Número de Elementos> ]\n[ <Lista de Números>, <Lista de Frequências> ]\n[ <Expressão>, <Variável>, <Valor inicial>, <Valor Final> ]
Product.SyntaxCAS=[ <Lista de expressões> ]\n[ <Expressão>, <Variável>, <Início>, <Valor Final> ]
Prove=Prove
Prove.Syntax=[ <Expressão Booleana> ]
ProveDetails=ProvaDetalhes
ProveDetails.Syntax=[ <Expressão Booleana> ]
Pyramid.Syntax=[ <Polígono>, <Ponto> ]\n[ <Polígono>, <Altura> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Ponto>, ... ]
Q1.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Q3.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
QRDecomposition=DecomposiçãoQR
QRDecomposition.Syntax=[ <Matriz> ]
QuadricSide=FaseLateral
QuadricSide.Syntax=[ <Quádrica> ]
RSquare.Syntax=[ <Lista de Pontos>, <Função> ]
Radius.Syntax=[ <Cónica> ]
Random=AleatórioInteiroEntre
Random.Syntax=[ <Mínimo Inteiro>, <Máximo Inteiro> ]\n[ <Mínimo Inteiro>, <Máximo Inteiro>, <Número de Amostras> ]\n[ <Mínimo Inteiro>, <Máximo Inteiro>, <Booleano Fixo> ]
Random.SyntaxCAS=[ <Mínimo Inteiro>, <Máximo Inteiro> ]\n[ <Mínimo Inteiro>, <Máximo Inteiro>, <Número de Amostras> ]
RandomBinomial=AleatórioBinomial
RandomBinomial.Syntax=[ <Número de Provas>, <Probabilidade> ]
RandomDiscrete=AleatórioDiscreto
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=AleatórioEscolherElemento
RandomElement.Syntax=[ <Lista> ]
RandomNormal=AleatórioNormal
RandomNormal.Syntax=[ <Média>, <Desvio-Padrão> ]
RandomPointIn=NoPontoAleatório
RandomPointIn.Syntax=[ <Região> ]\n[ <Lista de Pontos> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatórioPoisson
RandomPoisson.Syntax=[ <Média> ]
RandomPolynomial=PolinómioAleatório
RandomPolynomial.Syntax=[ <Grau>, <Mínimo para Coeficientes>, <Máximo para Coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grau>, <Mínimo para Coeficientes>, <Máximo para Coeficientes> ]\n[ <Variável>, <Grau>, <Mínimo para Coeficientes>, <Máximo para Coeficientes> ]
RandomUniform=AleatórioUniforme
RandomUniform.Syntax=[ <Mínimo>, <Máximo> ]\n[ <Mínimo>, <Máximo>, <Número de Amostras> ]
Rate=Razão
Rate.Syntax=[ <Número de Períodos>, <Pagamento>, <Valor de Hoje>, <Valor Futuro (opcional)>, <Tipo (opcional)>, <Estimativa (opcional)> ]
Rationalize=Racionalizar
Rationalize.SyntaxCAS=[ <Número> ]
Ray.Syntax=[ <Valor Inicial>, <Ponto> ]\n[ <Valor Inicial>, <Vetor Diretor> ]
ReadText.Syntax=[ <Texto> ]
RectangleSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos>, <Posição do Retângulo Inicial> ]
ReducedRowEchelonForm=CanónicaReduzida
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation.Syntax=[ <Lista> ]\n[ <Objeto>, <Objeto> ]
RemovableDiscontinuity=RemoverDescontinuidade
RemovableDiscontinuity.Syntax=[ <Função> ]
Remove=Elimine
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined.Syntax=[ <Lista> ]
Rename.Syntax=[ <Objeto>, <Nome> ]
Repeat.Syntax=[ <Número>, <Comando Script>, <Comando Script>, ... ]
ReplaceAll=SubstituirTodos
ReplaceAll.Syntax=[ <Texto>, <Texto a combinar>, <Texto a substituir> ]
ResidualPlot=PontosResiduais
ResidualPlot.Syntax=[ <Lista de Pontos>, <Função> ]
Reverse.Syntax=[ <Lista> ]
RightSide.Syntax=[ <Condição> ]
RightSide.SyntaxCAS=[ <Condição> ]\n[ <Lista de Equações> ]\n[ <Lista de Equações>, <Index> ]
RigidPolygon.Syntax=[ <Polígono> ]\n[ <Polígono>, <Offset x>, <Offset y> ]\n[ <Ponto Livre>, ..., <Ponto Livre> ]
Root.Syntax=[ <Polinómio> ]\n[ <Função>, <x Inicial> ]\n[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Root.SyntaxCAS=[ <Polinómio> ]
RootList=ListaRaízes
RootList.Syntax=[ <Lista> ]
RootMeanSquare.Syntax=[ <Lista de Números> ]
Roots.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x> ]
Rotate=Rotação
Rotate.Syntax=[ <Objeto>, <Ângulo> ]\n[ <Objeto>, <Ângulo>, <Ponto> ]
Rotate.Syntax3D=[ <Objeto>, <Ângulo> ]\n[ <Objeto>, <Ângulo>, <Ponto> ]\n[ <Objeto>, <Ângulo>, <Eixo de Rotação> ]\n[ <Objeto>, <Ângulo>, <Ponto no Eixo>, <Sentido do Eixo ou Plano> ]
RotateText=RodarTexto
RotateText.Syntax=[ <Texto>, <Ângulo> ]
Row.Syntax=[ <Célula> ]
RunClickScript.Syntax=[ <Objeto> ]
RunUpdateScript=ExecutarAtualizaçãoScript
RunUpdateScript.Syntax=[ <Objeto> ]
SDX.Syntax=[ <Lista de Pontos> ]
SDY.Syntax=[ <Lista de Pontos> ]
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de Números> ]\n[ <Lista de Pontos> ]
SXY.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
SYY.Syntax=[ <Lista de Pontos> ]
Sample.Syntax=[ <Lista>, <Dimensão> ]\n[ <Lista>, <Dimensão>, <Com Substituição> ]
SampleSD=DesvioPadrãoAmostra
SampleSD.SyntaxCAS=[ <Lista de Números> ]
SampleSDX=DesvioPadrãoAmostraX
SampleSDX.Syntax=[ <Lista de Pontos> ]
SampleSDY=DesvioPadrãoAmostraY
SampleSDY.Syntax=[ <Lista de Pontos> ]
SampleVariance=VariânciaAmostra
SampleVariance.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SampleVariance.SyntaxCAS=[ <Lista de Números> ]
ScientificText=TextoCientífico
ScientificText.Syntax=[ <Número> ]\n[ <Número>, <Precisão> ]
SecondAxis.Syntax=[ <Cónica> ]
SecondAxisLength=ComprimentoSemiEixoMenorX
SecondAxisLength.Syntax=[ <Cónica> ]
Sector.Syntax=[ <Cónica>, <Ponto>, <Ponto> ]\n[ <Cónica>, <Parâmetro>, <Parâmetro> ]
Segment=SegmentodeReta
Segment.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Comprimento> ]
SelectObjects.Syntax=[ ]\n[ <Objeto>, <Objeto>, ... ]
SelectedElement=SelecionarElemento
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=SelecionarPosição
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicircunferência
Semicircle.Syntax=[ <Ponto>, <Ponto> ]
Sequence.Syntax=[ <Valor Final> ]\n[ <Valor inicial>, <Valor Final> ]\n[ <Valor inicial>, <Valor Final>, <Incremento> ]\n[ <Expressão>, <Variável>, <Valor inicial>, <Valor Final> ]\n[ <Expressão>, <Variável>, <Valor inicial>, <Valor Final>, <Incremento> ]
SetActiveView=AtivarFolha
SetActiveView.Syntax=[ <Vista> ]\n[ <Plano> ]
SetAxesRatio=RazãoEntreEixos
SetAxesRatio.Syntax=[ <Número>, <Número> ]
SetAxesRatio.Syntax3D=[ <Número>, <Número> ]\n[ <Número>, <Número>, <Número> ]
SetBackgroundColor=CorDeFundo
SetBackgroundColor.Syntax=[ <Cor> ]\n[ <Objeto>, <Cor> ]\n[ <Vermelho>, <Verde>, <Azul> ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]
SetCaption.Syntax=[ <Objeto>, <Texto> ]
SetColor.Syntax=[ <Objeto>, <Cor> ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]
SetConditionToShowObject=CondiçãoParaExibir
SetConditionToShowObject.Syntax=[ <Objeto>, <Condição> ]
SetConstructionStep=DefinirPassosConstrução
SetConstructionStep.Syntax=[ <Número> ]
SetCoords.Syntax=[ <Objeto>, <x>, <y> ]\n[ <Objeto>, <x>, <y>, <z> ]
SetDecoration=ConfiguraçãoDecoração
SetDecoration.Syntax=[ <Objeto>, <Número> ]\n[ <Segmento de Reta>, <Número>, <Número>]
SetDynamicColor=DefinirCoresDinâmicas
SetDynamicColor.Syntax=[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul>, <Opacidade> ]
SetFilling=DefinirEnchimento
SetFilling.Syntax=[ <Objeto>, <Número> ]
SetFixed=DefinirFixar
SetFixed.Syntax=[ <Objeto>, <true | false> ]\n[ <Objeto>, <true | false>, <true | false> ]
SetImage=ConfigurarImagem
SetImage.Syntax=[ <Objeto>, <Imagem> ]\n[ <Objeto>, <Texto> ]
SetLabelMode=DefinirRótulo
SetLabelMode.Syntax=[ <Objeto>, <Número> ]
SetLayer.Syntax=[ <Objeto>, <Camada> ]
SetLevelOfDetail=ConfigurarNíveldeDetalhes
SetLevelOfDetail.Syntax=[ <Superfície>, <Nível de Detalhe> ]
SetLineStyle=DefinirEstilodeReta
SetLineStyle.Syntax=[ <Objeto>, <Número> ]
SetLineThickness=DefinirEspessuradaReta
SetLineThickness.Syntax=[ <Objeto>, <Número> ]
SetPerspective=ConfigurarDisposições
SetPerspective.Syntax=[ <Texto> ]
SetPointSize=DefinirTamanhodoPonto
SetPointSize.Syntax=[ <Objeto>, <Número> ]
SetPointStyle=DefinirEstilodoPonto
SetPointStyle.Syntax=[ <Ponto>, <Número> ]
SetSeed=DefineInícioAleatório
SetSeed.Syntax=[ <Inteiro> ]
SetSpinSpeed=ConfiguraçãoVelocidadeRotação
SetSpinSpeed.Syntax=[ <Número> ]
SetTooltipMode=DefinirDescrição
SetTooltipMode.Syntax=[ <Objeto>, <Número> ]
SetTrace.Syntax=[ <Objeto>, <true | false> ]
SetValue.Syntax=[ <Booleano>, <0|1> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <Número>, <Objeto> ]
SetViewDirection=ConfigurarVistas
SetViewDirection.Syntax=[ ]\n[ <Sentido> ]\n[ <Sentido>, <Animação Booleana> ]
SetVisibleInView.Syntax=[ <Objeto>, <Número da Vista 1|2>, <Booleano> ]
Shear.Syntax=[ <Objeto>, <Reta>, <Razão> ]
ShortestDistance.Syntax=[ <Lista de Segmentos de reta>, <Valor Inicial>, <Valor Final>, <Booleano Ponderado> ]
ShowAxes=MostrarEixos
ShowAxes.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowGrid=MostrarGrelha
ShowGrid.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowLabel=MostrarRótulo
ShowLabel.Syntax=[ <Objeto>, <Booleano> ]
ShowLayer=MostrarCamada
ShowLayer.Syntax=[ <Número> ]
Shuffle=Baralhar
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de Pontos> ]\n[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SigmaXY.Syntax=[ <Lista de Pontos> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]
SigmaYY.Syntax=[ <Lista de Pontos> ]
Simplify.Syntax=[ <Função> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Função> ]
Slider=Seletor
Slider.Syntax=[ <Mínimo>, <Máximo>, <Incremento>, <Velocidade>, <Largura>, <Ângulo>, <Horizontal>, <Animação>, <Aleatório> ]
Slope=Declive
Slope.Syntax=[ <Reta> ]
SlopeField=Gradiente
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Número n> ]\n[ <f(x, y)>, <Número n>, <Fator de Escala a> ]\n[ <f(x, y)>, <Número n>, <Fator de Escala a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=AnimarConstruçãoGráfico
SlowPlot.Syntax=[ <Função> ]\n[ <Função>, <Repetição Booleana> ]
Solutions.Syntax=[ <Condição> ]
Solutions.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
Solve.Syntax=[ <Condição> ]
Solve.SyntaxCAS=[ <Condição em x> ]\n[ <Condição>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]\n[ <Lista de Equações Paramétricas>, <Lista de Variáveis> ]\n[ <Condição>, <Variável>, <Lista de suposições> ]
SolveCubic.SyntaxCAS=[ <Polinómio 3º Grau> ]
SolveODE.Syntax=[ <f´(x, y)> ]\n[ <f´(x, y)>, <Ponto em f> ]\n[ <f´(x, y)>, <Início x>, <Início y>, <Fim x>, <Passo> ]\n[ <y'>, <x'>, <Início x>, <Início y>, <Fim t>, <Passo> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Início x>, <Início y>, <Início  y'>, <Fim x>, <Passo> ]
SolveODE.SyntaxCAS=[ <Condição> ]\n[ <Condição>, <Ponto(s) em f> ]\n[ <Condição>, <Ponto(s) em f>, <Pontos(s) em f'> ]\n[ <Condição>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f> ] \n[ <Condição>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f>, <Pontos(s) em f'> ]
SolveQuartic=ResolverQuática
SolveQuartic.SyntaxCAS=[ <Polinómio 4º Grau> ]
Sort.Syntax=[ <Lista> ]\n[ <Valores>, <Chaves> ]
Spearman=CorrelaçãoSpearman
Spearman.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
Sphere=SuperfícieEsférica
Sphere.Syntax=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Ponto> ]
Spline.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Ordem ≥ 3> ]\n[ <Lista de Pontos>, <Ordem ≥ 3>, <Peso Função> ]
Split=Separar
Split.Syntax=[ <Texto>, <Lista de Textos a dividir em> ]
StartAnimation.Syntax=[ ]\n[ <Booleano> ]\n[ <Seletor ou Ponto>, <Seletor ou Ponto>, ... ]\n[ <Seletor ou Ponto>, <Seletor ou Ponto>, ..., <Booleano> ]
StartRecord.Syntax=[ ]\n[ <Booleano> ]
StemPlot=DiagramaCauleFolhas
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajustamento (-1 | 0 | 1)> ]
StepGraph=GráficoEmEscada
StepGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Booleana Junção> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]\n[ <Lista de Pontos>, <Booleana Junção>, <Estilo do Ponto> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas>, <Booleana Junção> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas>, <Booleana Junção>, <Estilo do Ponto> ]
StickGraph=GráficoDePalitos
StickGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Booleana Horizontal> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas> ]\n[ <Lista de x-coordenadas>, <Lista  y-coordenadas>, <Booleana Horizontal> ]
Stretch.Syntax=[ <Objeto>, <Vetor> ]\n[ <Objeto>, <Reta>, <Razão> ]
Substitute.SyntaxCAS=[ <Expressão>, <Lista de Substituições> ]\n[ <Expressão>, <o quê?>, <por> ]
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Lista>, <Lista de Frequências> ]\n[ <Expressão>, <Variável>, <Valor inicial>, <Valor Final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expressão>, <Variável>, <Valor inicial>, <Valor Final> ]
SumSquaredErrors=SomaErrosQuadráticos
SumSquaredErrors.Syntax=[ <Lista de Pontos>, <Função> ]
SurdText=TextoRacionalIrracional
SurdText.Syntax=[ <Ponto> ]\n[ <Número> ]\n[ <Número>, <Lista> ]
Surface=SuperfícieLateral
Surface.Syntax=[ <Função>, <Ângulo> ]\n[ <Curva>, <Ângulo>, <Reta> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Variável 1>, <Valor inicial>, <Valor Final>, <Variável2>, <Valor inicial>, <Valor Final> ]
TDistribution=TDistribuição
TDistribution.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Graus de Liberdade>, x, <Acumulada (true|false))> ]
TDistribution.SyntaxCAS=[ <Graus de Liberdade>, <Valor da Variável> ]
TMean2Estimate.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Nível de Confiança>, <Agregada (true | false)> ]\n[ <Média da Amostra1>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra1>, <Média da Amostra2>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra2>, <Nível de Confiança>, <Agregada (true | false)> ]
TMeanEstimate.Syntax=[ <Amostra (Lista)>, <Nível de Confiança> ]\n[ <Média da Amostra>, <Desvio-Padrão da Amostra>, <Tamanho da Amostra>, <Nível de Confiança> ]
TTest.Syntax=[ <Amostra (Lista)>, <Média Hipotética>, <Cauda> ]\n[ <Média da Amostra>, <Desvio-Padrão da Amostra>, <Tamanho da Amostra>, <Média Hipotética>, <Cauda> ]
TTest2.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Cauda>, <Agregada (true | false)> ]\n[ <Média da Amostra1>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra1>, <Média da Amostra2>, <Desvio-Padrão da Amostra2>, <Tamanho da Amostra2>, <Cauda>, <Agregada (true | false)> ]
TTestPaired.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <Cauda> ]
TableText=TabelaTexto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Alinhamento do Texto> ]\n[ <Lista>, <Lista>, ..., <Alinhamento do Texto>, <Comprimento Mínima da Célula> ]\n[ <Lista>, <Lista>, ..., <Alinhamento do Texto>, <Comprimento Mínima da Célula>, <Altura Mínima da Célula> ]
Take.Syntax=[ <Lista>, <Posição Inicial>, <Posição Final> ]\n[ <Lista>, <Posição Inicial> ]\n[ <Texto>, <Posição Inicial>, <Posição Final> ]\n[ <Texto>, <Posição Inicial> ]
Take.SyntaxCAS=[ <Lista>, <Posição Inicial> ]\n[ <Lista>, <Posição Inicial>, <Posição Final> ]\n[ <Texto>, <Posição Inicial>, <Posição Final> ]\n[ <Texto>, <Posição Inicial> ]
Tangent.Syntax=[ <Ponto>, <Cónica> ]\n[ <Ponto>, <Função> ]\n[ <Ponto na Curva>, <Curva> ]\n[ <x_valor>, <Função> ]\n[ <Reta>, <Cónica> ]\n[ <Cónica>, <Cónica> ]
Tangent.SyntaxCAS=[ <Número>, <Função> ]\n[ <Ponto>, <Objeto> ]
TaylorSeries=PolinómioTaylor
TaylorSeries.Syntax=[ <Função>, <x_valor>, <Ordem> ]
TaylorSeries.SyntaxCAS=[ <Expressão>, <x_valor>, <Ordem> ]\n[ <Expressão>, <Variável>, <Valor da Variável>, <Ordem> ]
Tetrahedron.Syntax=[ <Triângulo Equilátero> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Sentido> ]
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Exibir Valor dos Parâmetros (true |false)> ]\n[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Ponto>, <Exibir Valor dos Parâmetros (true |false)> ]\n[ <Objeto>, <Ponto>, <Exibir Valor dos Parâmetros (true |false)>, <Booleano para fórmula LaTeX> ]\n[ <Objeto>, <Ponto>, <Exibir Valor dos Parâmetros (true |false)>, <Booleano para fórmula LaTeX>, <Alinhamento horizontal -1|0|1> ]\n[ <Objeto>, <Ponto>, <Exibir Valor dos Parâmetros (true |false)>, <Booleano para fórmula LaTeX>, <Alinhamento horizontal -1|0|1>, <Alinhamento vertical -1|0|1> ]
TextToUnicode=TextoparaUnicode
TextToUnicode.Syntax=[ <Texto> ]
Textfield=CaixadeEntrada
Textfield.Syntax=[ <Objeto Vinculado> ]
TiedRank.Syntax=[ <Lista> ]
ToBase.Syntax=[ <Número>, <Base> ]
ToComplex.Syntax=[ <Vetor> ]
ToExponential.SyntaxCAS=[ <Número Complexo> ]
ToPoint.Syntax=[ <Número Complexo> ]
ToPolar.Syntax=[ <Número Complexo> ]\n[ <Vetor> ]
ToolImage=ÍconeFerramenta
ToolImage.Syntax=[ <Número> ]\n[ <Número>, <Ponto> ]\n[ <Número>, <Ponto>, <Ponto> ]
Top=BaseSuperior
Top.Syntax=[ <Quádrica> ]
Translate=Translação
Translate.Syntax=[ <Objeto>, <Vetor> ]\n[ <Vetor>, <Valor Inicial> ]
Transpose=Transposta
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Trapézios> ]
TravelingSalesman=CaixeiroViajante
TravelingSalesman.Syntax=[ <Lista de Pontos> ]
TriangleCenter=PontosNotáveisdoTriângulo
TriangleCenter.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número> ]
TriangleCurve=TriânguloCurva
TriangleCurve.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Condição> ]
Triangular=Triangular
Triangular.Syntax=[ <Limite Inferior>, <Limite Superior>, <Modo>, <Valor da Variável> ]\n[ <Limite Inferior>, <Limite Superior>, <Modo>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Limite Inferior>, <Limite Superior>, <Modo>, x, <Acumulada (true|false))> ]
TrigCombine=CombinaçãoTrigonométrica
TrigCombine.Syntax=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]
TrigExpand=ExpansãoTrigonométrica
TrigExpand.Syntax=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]
TrigExpand.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]\n[ <Expressão>, <Função Alvo>, <Função Alvo> ]\n[ <Expressão>, <Função Alvo>, <Função Alvo>, <Função Alvo> ]
TrigSimplify=SimplificaçãoTrigonométrica
TrigSimplify.Syntax=[ <Expressão> ]
Trilinear.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número>, <Número>, <Número> ]
TurningPoint=PontodeInflexão
TurningPoint.Syntax=[ <Polinómio> ]
TurningPoint.SyntaxCAS=[ <Função> ]
Turtle=Tar
Turtle.Syntax=[]
TurtleBack=TarPT
TurtleBack.Syntax=[ <Tar>, <Distância> ]
TurtleDown=TarPB
TurtleDown.Syntax=[ <Tar> ]
TurtleForward=TarPF
TurtleForward.Syntax=[ <Tar>, <Distância> ]
TurtleLeft=TarRE
TurtleLeft.Syntax=[ <Tar>, <Ângulo> ]
TurtleRight=TarRD
TurtleRight.Syntax=[ <Tar>, <Ângulo> ]
TurtleUp=TarPC
TurtleUp.Syntax=[ <Tar> ]
Type.Syntax=[ <Objeto> ]
UnicodeToLetter.Syntax=[ <Inteiro> ]
UnicodeToText.Syntax=[ <Lista de números> ]
Uniform=Uniforme
Uniform.Syntax=[ <Limite Inferior>, <Limite Superior>, <Valor da Variável> ]\n[ <Limite Inferior>, <Limite Superior>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Limite Inferior>, <Limite Superior>, x, <Acumulada (true|false))> ]
Union=Reunião
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Polígono>, <Polígono> ]
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VetorUnitárioPerpendicular
UnitOrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]
UnitOrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento de Reta> ]\n[ <Vetor> ]\n[ <Plano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vetor> ]
UnitVector.Syntax=[ <Objeto> ]
UnitVector.SyntaxCAS=[ <Vetor> ]
UpdateConstruction.Syntax=[ ]\n[ <Número de vezes> ]
UpperSum=SomaSuperior
UpperSum.Syntax=[ <Função>, <Valor Inicial-x>, <Valor Final-x>, <Número de Retângulos> ]
Variance.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Vector.Syntax=[ <Ponto> ]\n[ <Valor Inicial>, <Valor Final> ]
Vertex.Syntax=[ <Cónica> ]\n[ <Inequação> ]\n[ <Polígono> ]\n[ <Polígono>, <Index> ]\n[ <Segmento de Reta>, <Index> ]
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Ponto> ]
Volume.Syntax=[ <Sólido> ]
Voronoi=Voronoi
Voronoi.Syntax=[ <Lista de Pontos> ]
Weibull=Weibull
Weibull.Syntax=[ <Forma>, <Escala>, <Valor da Variável> ]\n[ <Forma>, <Escala>, <Valor da Variável>, <Acumulada (true|false))> ]\n[ <Forma>, <Escala>, x, <Acumulada (true|false))> ]
Weibull.SyntaxCAS=[ <Forma>, <Escala>, <Valor da Variável> ]
ZMean2Estimate=ZMédia2Estimativa
ZMean2Estimate.Syntax=[ <Amostra1 (Lista)>, <Amostra2 (Lista)>, <σ1>, <σ2>, <Nível de Confiança> ]\n[ <Média da Amostra1>, <σ1>, <Tamanho da Amostra1>, <Média da Amostra2>, <σ2>, <Tamanho da Amostra2>, <Nível de Confiança> ]
ZMean2Test=ZMédia2Teste
ZMean2Test.Syntax=[ <Amostra1 (Lista)>, <σ1>, <Amostra2 (Lista)>, <σ2>, <Cauda> ]\n[ <Média da Amostra1>, <σ1>, <Tamanho da Amostra1>, <Média da Amostra2>, <σ2>, <Tamanho da Amostra2>, <Cauda> ]
ZMeanEstimate=ZMédiaEstimativa
ZMeanEstimate.Syntax=[ <Amostra (Lista)>, <σ>, <Nível de Confiança> ]\n[ <Média da Amostra>, <σ>, <Tamanho da Amostra>, <Nível de Confiança> ]
ZMeanTest=ZMédiaTeste
ZMeanTest.Syntax=[ <Amostra (Lista)>, <σ>, <Média Hipotética>, <Cauda> ]\n[ <Média da Amostra>, <σ>, <Tamanho da Amostra>, <Média Hipotética>, <Cauda> ]
ZProportion2Estimate=ZProporcional2Estimado
ZProportion2Estimate.Syntax=[ <Proporção 1>, <Tamanho da Amostra1>, <Proporção 2>, <Tamanho da Amostra2>, <Nível de Confiança> ]
ZProportion2Test=ZProporção2Teste
ZProportion2Test.Syntax=[ <Proporção 1>, <Tamanho da Amostra1>, <Proporção 2>, <Tamanho da Amostra2>, <Cauda> ]
ZProportionEstimate=ZProporçãoEstimado
ZProportionEstimate.Syntax=[ <Proporção>, <Tamanho da Amostra>, <Nível de Confiança> ]
ZProportionTest=ZProporçãoTeste
ZProportionTest.Syntax=[ <Proporção>, <Tamanho da Amostra>, <Hipótese da Proporção>, <Cauda> ]
Zip=Zip
Zip.Syntax=[ <Expressão>, <Variável1>, <Lista1>, <Variável2>, <Lista2>, ... ]
Zipf=Zipf
Zipf.Syntax=[ <Número de Elementos>, <Expoente> ]\n[ <Número de Elementos>, <Expoente>, <Acumulada (true|false))> ]\n[ <Número de Elementos>, <Expoente>, <Valor da Variável>, <Acumulada (true|false))> ]
Zipf.SyntaxCAS=[ <Número de Elementos>, <Expoente>, <Valor da Variável>, <Acumulada (true|false))> ]
ZoomIn.Syntax=[ ]\n[ <Fator de Escala> ]\n[ <Fator de Escala>, <Ponto> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Fator de Escala> ]\n[ <Fator de Escala>, <Ponto> ]
mad=mad
mad.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
mean.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
nCr=nCp
nCr.Syntax=[ <Número n>, <Número r> ]
stdev=DevStd
stdev.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]
stdevp=DesStd
stdevp.Syntax=[ <Lista dos Dados Não Classificados> ]\n[ <Lista de Números>, <Lista de Frequências> ]