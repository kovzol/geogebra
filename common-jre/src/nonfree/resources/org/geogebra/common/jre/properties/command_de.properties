# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Liste>, <Liste>, ... ]
AffineRatio=Teilverhältnis
AffineRatio.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
Angle=Winkel
Angle.Syntax=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Scheitelpunkt>, <Punkt> ]\n[ <Punkt>, <Scheitelpunkt>, <Winkel> ]
Angle.Syntax3D=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <Gerade>, <Gerade> ]\n[ <Gerade>, <Ebene> ]\n[ <Ebene>, <Ebene> ]\n[ <Punkt>, <Scheitelpunkt>, <Punkt> ]\n[ <Punkt>, <Scheitelpunkt>, <Winkel> ]\n[ <Punkt>, <Punkt>, <Punkt>, <Richtung> ]
AngularBisector=Winkelhalbierende
AngularBisector.Syntax=[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Punkt>, <Punkt> ]
Append=Anfügen
Append.Syntax=[ <Liste>, <Objekt> ]\n[ <Objekt>, <Liste> ]
ApplyMatrix=MatrixAnwenden
ApplyMatrix.Syntax=[ <Matrix>, <Objekt> ]
Arc=Bogen
Arc.Syntax=[ <Ellipse>, <Punkt>, <Punkt> ]\n[ <Kreis>, <Punkt>, <Punkt> ]\n[ <Ellipse>, <Parameter Startwert>, <Parameter Startwert> ]\n[ <Kreis>, <Parameter Startwert>, <Parameter Startwert> ]
AreCollinear=LiegenAufGerade
AreCollinear.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
AreConcurrent=SindKopunktal
AreConcurrent.Syntax=[ <Gerade>, <Gerade>, <Gerade> ]
AreConcyclic=LiegenAufKreis
AreConcyclic.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Punkt> ]
AreCongruent=SindKongruent
AreCongruent.Syntax=[ <Objekt>, <Objekt> ]
AreEqual=SindGleich
AreEqual.Syntax=[ <Objekt>, <Objekt> ]
AreParallel=SindParallel
AreParallel.Syntax=[ <Gerade>, <Gerade> ]
ArePerpendicular=SindNormal
ArePerpendicular.Syntax=[ <Gerade>, <Gerade> ]
Area=Fläche
Area.Syntax=[ <Kegelschnitt> ]\n[ <Vieleck> ]\n[ <Punkt>, ..., <Punkt> ]
Assume=Annahme
Assume.SyntaxCAS=[ <Bedingung>, <Ausdruck> ]
Asymptote.Syntax=[ <Objekt> ]
AttachCopyToView=KopieAnAnsichtHeften
AttachCopyToView.Syntax=[ <Objekt>, <Ansicht 0|1|2> ]\n[ <Objekt>, <Ansicht 0|1|2>, <Punkt 1>, <Punkt 2>, <Bildschirmpunkt 1>, <Bildschirmpunkt 2> ]
Axes=Achsen
Axes.Syntax=[ <Kegelschnitt> ]
Axes.Syntax3D=[ <Kegelschnitt> ]\n[ <Quadrik> ]
AxisStepX=AchsenSchrittweiteX
AxisStepX.Syntax=[ ]
AxisStepY=AchsenSchrittweiteY
AxisStepY.Syntax=[ ]
BarChart=Säulendiagramm
BarChart.Syntax=[ <Liste von Daten>, <Liste von Häufigkeiten> ]\n[ <Liste von Rohdaten>, <Balkenbreite>, <Vertikaler Skalierungsfaktor (optional)> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten>, <Balkenbreite> ]\n[ <Anfangswert>, <Endwert>, <Liste von Balkenhöhen> ]\n[ <Anfangswert>, <Endwert>, <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]\n[ <Anfangswert>, <Endwert>, <Ausdruck>, <Variable>, <Startwert>, <Endwert>, <Schrittweite> ]
Barycenter=Massenmittelpunkt
Barycenter.Syntax=[ <Liste von Punkten>, <Liste von Gewichten> ]
Bernoulli.Syntax=[ <Wahrscheinlichkeit>, <Kumuliert true|false> ]
BetaDist.Syntax=[ <Alpha>, <Beta>, <Wert der Zufallsgröße> ]\n[ <Alpha>, <Beta>, <Wert der Zufallsgröße>, <Kumuliert true|false>  ]\n[ <Alpha>, <Beta>, x, <Kumuliert true|false> ]
Binomial=BinomialKoeffizient
Binomial.Syntax=[ <Zahl n>, <Zahl k> ]
BinomialDist=Binomial
BinomialDist.Syntax=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Kumuliert true|false> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Liste von Werten> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
BinomialDist.SyntaxCAS=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Liste von Werten> ]
Bottom=Unten
Bottom.Syntax=[ <Quadrik> ]
BoxPlot=Boxplot
BoxPlot.Syntax=[ <yAbstand>, <ySkalierung>, <Liste von Rohdaten> ]\n[ <yAbstand>, <ySkalierung>, <Liste von Rohdaten>, <Ausreißer ausschließen true|false> ]\n[ <yAbstand>, <ySkalierung>, <Liste von Daten>, <Liste von Häufigkeiten>, <Ausreißer ausschließen true|false> ]\n[ <yAbstand>, <ySkalierung>, <Anfangswert>, <Q1>, <Median>, <Q3>, <Endwert> ]
Button=Schaltfläche
Button.Syntax=[ ]\n[ <Beschriftung> ]
CASLoaded.Syntax=[]
CFactor=KFaktorisiere
CFactor.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Variable> ]
CIFactor=KIFaktorisiere
CIFactor.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Variable> ]
CSolutions=KLösungen
CSolutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
CSolve=KLöse
CSolve.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
Cauchy.Syntax=[ <Median>, <Breitenparameter>, <Wert der Zufallsgröße> ]\n[ <Median>, <Breitenparameter>, <Wert der Zufallsgröße>, <Kumuliert true|false>  ]\n[ <Median>, <Breitenparameter>, x, <Kumuliert true|false> ]
Cauchy.SyntaxCAS=[ <Median>, <Breitenparameter>, <Wert der Zufallsgröße> ]
Cell=Zelle
Cell.Syntax=[ <Spalte>, <Zeile> ]
CellRange=Zellbereich
CellRange.Syntax=[ <Anfangszelle>, <Endzelle> ]
Center=Mittelpunkt
Center.Syntax=[ <Kegelschnitt> ]
Center.Syntax3D=[ <Kegelschnitt> ]\n[ <Quadrik> ]
CenterView=Zentralansicht
CenterView.Syntax=[ <Zentraler Punkt> ]
Centroid=Schwerpunkt
Centroid.Syntax=[ <Vieleck> ]
CharacteristicPolynomial=CharakteristischesPolynom
CharacteristicPolynomial.Syntax=[ <Matrix> ]
Checkbox=Kontrollkästchen
Checkbox.Syntax=[ ]\n[ <Beschriftung> ]\n[ <Liste> ]\n[ <Beschriftung>, <Liste> ]
ChiSquared=ChiQuadrat
ChiSquared.Syntax=[ <Freiheitsgrade>, <Wert der Zufallsgröße> ]\n[ <Freiheitsgrade>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Freiheitsgrade>, x, <Kumuliert true|false> ]
ChiSquared.SyntaxCAS=[ <Freiheitsgrade>, <Variable> ]
ChiSquaredTest=ChiQuadratTest
ChiSquaredTest.Syntax=[ <Matrix> ]\n[ <Liste>, <Liste> ]\n[ <Matrix>, <Matrix> ]\n[ <Liste>, <Liste>, <Freiheitsgrade> ]
Circle=Kreis
Circle.Syntax=[ <Punkt>, <Radius> ]\n[ <Punkt>, <Strecke> ]\n[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Punkt> ]
Circle.Syntax3D=[ <Punkt>, <Radius> ]\n[ <Punkt>, <Strecke> ]\n[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Gerade>, <Punkt> ]\n[ <Punkt>, <Radius>, <Richtung> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
CircleArc=Kreisbogen
CircleArc.Syntax=[ <Mittelpunkt>, <Punkt>, <Punkt> ]
CircleSector=Kreissektor
CircleSector.Syntax=[ <Mittelpunkt>, <Punkt>, <Punkt> ]
CircumcircleArc=Umkreisbogen
CircumcircleArc.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
CircumcircleSector=Umkreissektor
CircumcircleSector.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
Circumference=Umfang
Circumference.Syntax=[ <Kegelschnitt> ]
Classes=Klassen
Classes.Syntax=[ <Liste von Daten>, <Anzahl der Klassen> ]\n[ <Liste von Daten>, <Anfangswert>, <Klassenbreite> ]
ClosestPoint=NächsterPunkt
ClosestPoint.Syntax=[ <Pfad>, <Punkt> ]\n[ <Gerade>, <Gerade> ]
ClosestPointRegion=NächsterPunktBereich
ClosestPointRegion.Syntax=[ <Pfad>, <Punkt> ]
Coefficients=Koeffizienten
Coefficients.Syntax=[ <Polynom> ]\n[ <Kegelschnitt> ]
Coefficients.SyntaxCAS=[ <Polynom> ]\n[ <Polynom>, <Variable> ]
Column=Spalte
Column.Syntax=[ <Zellname> ]
ColumnName=Spaltenname
ColumnName.Syntax=[ <Zellname> ]
Command=Befehl
CommonDenominator=GemeinsamerNenner
CommonDenominator.Syntax=[ <Ausdruck>, <Ausdruck> ]
Compare=Vergleiche
Compare.Syntax=[ <Ausdruck>, <Ausdruck> ]
CompleteSquare=VollständigesQuadrat
CompleteSquare.Syntax=[ <quadratische Funktion> ]
ComplexRoot=KomplexeNullstelle
ComplexRoot.Syntax=[ <Polynom> ]
Cone=Kegel
Cone.Syntax=[ <Ellipse>, <Höhe> ]\n[ <Punkt>, <Punkt>, <Radius> ]\n[ <Punkt>, <Vektor>, <Winkel> ]
ConeInfinite=Rotationskegel
ConeInfinite.Syntax=[ <Punkt>, <Vektor>, <Winkel> ]\n[ <Punkt>, <Punkt>, <Winkel> ]\n[ <Punkt>, <Gerade>, <Winkel> ]
Conic=Kegelschnitt
Conic.Syntax=[ <Liste> ]\n[ <Punkt>, <Punkt>, <Punkt>, <Punkt>, <Punkt> ]\n[ <Zahl>, <Zahl>, <Zahl>, <Zahl>, <Zahl>, <Zahl> ]
ConstructionStep=Konstruktionsschritt
ConstructionStep.Syntax=[ ]\n[ <Objekt> ]
ContingencyTable=Kontingenztafel
ContingencyTable.Syntax=[ <Liste von Texten>, <Liste von Texten> ]\n[ <Liste von Texten>, <Liste von Texten>, <Optionen> ]\n[ <Liste von Zeilenwerte>, <Liste von Spaltenwerte>, <Häufigkeitstabelle> ]\n[ <Liste von Zeilenwerte>, <Liste von Spaltenwerte>, <Häufigkeitstabelle> , <Optionen> ]
ContinuedFraction=Kettenbruch
ContinuedFraction.Syntax=[ <Zahl> ]\n[ <Zahl>, <Ebene> ]\n[ <Zahl>, <Ebene>, <Kurzschrift true|false> ]
ConvexHull=KonvexeHülle
ConvexHull.Syntax=[ <Liste von Punkten> ]
CopyFreeObject=KopiereFreiesObjekt
CopyFreeObject.Syntax=[ <Objekt> ]
Corner=Eckpunkt
Corner.Syntax=[ <Nummer des Eckpunkts> ]\n[ <Bild>, <Nummer des Eckpunkts> ]\n[ <Text>, <Nummer des Eckpunkts> ]\n[ <Nummer der Grafik-Ansicht>, <Nummer des Eckpunkts> ]
CountIf=ZähleWenn
CountIf.Syntax=[ <Bedingung>, <Liste> ]\n[ <Bedingung>, <Variable>, <Liste> ]
Covariance=Kovarianz
Covariance.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
Cross=Kreuzprodukt
Cross.Syntax=[ <Vektor>, <Vektor> ]
CrossRatio=Doppelverhältnis
CrossRatio.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Punkt> ]
Cube=Würfel
Cube.Syntax=[ <Quadrat> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
Cubic=KubischeKurve
Cubic.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Zahl> ]
Curvature=Krümmung
Curvature.Syntax=[ <Punkt>, <Objekt> ]
CurvatureVector=Krümmungsvektor
CurvatureVector.Syntax=[ <Punkt>, <Objekt> ]
CurveCartesian=Kurve
CurveCartesian.Syntax=[ <Ausdruck>, <Ausdruck>, <Parameter>, <Anfangswert>, <Endwert> ]
CurveCartesian.Syntax3D=[ <Ausdruck>, <Ausdruck>, <Parameter>, <Anfangswert>, <Endwert> ]\n[ <Ausdruck>, <Ausdruck>, <Ausdruck>, <Parameter>, <Anfangswert>, <Endwert> ]
Cylinder=Zylinder
Cylinder.Syntax=[ <Ellipse>, <Höhe> ]\n[ <Punkt>, <Punkt>, <Radius> ]
CylinderInfinite=Rotationszylinder
CylinderInfinite.Syntax=[ <Gerade>, <Radius> ]\n[ <Punkt>, <Vektor>, <Radius> ]\n[ <Punkt>, <Punkt>, <Radius> ]
DataFunction=DatenFunktion
DataFunction.Syntax=[ <Liste von Zahlen>, <Liste von Zahlen> ]
Defined=IstDefiniert
Defined.Syntax=[ <Objekt> ]
Degree=Grad
Degree.Syntax=[ <Polynom> ]
Degree.SyntaxCAS=[ <Polynom> ]\n[ <Polynom>, <Variable> ]
DelauneyTriangulation.Syntax=[ <Liste von Punkten> ]
Delete=Lösche
Delete.Syntax=[ <Objekt> ]
Denominator=Nenner
Denominator.Syntax=[ <Zahl> ]\n[ <Funktion> ]
Denominator.SyntaxCAS=[ <Ausdruck> ]
DensityPlot=Dichteplot
Derivative=Ableitung
Derivative.Syntax=[ <Funktion> ]\n[ <Kurve> ]\n[ <Funktion>, <Zahl> ]\n[ <Funktion>, <Variable> ]\n[ <Kurve>, <Zahl> ]\n[ <Funktion>, <Variable>, <Zahl> ]
Derivative.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Variable> ]\n[ <Ausdruck>, <Variable>, <Zahl> ]
Determinant=Determinante
Determinant.Syntax=[ <Matrix> ]
Diameter=KonjugierterDurchmesser
Diameter.Syntax=[ <Vektor>, <Kegelschnitt> ]\n[ <Gerade>, <Kegelschnitt> ]
Difference=Differenz
Difference.Syntax=[ <Vieleck>, <Vieleck> ]
Dilate=StreckeZentrisch
Dilate.Syntax=[ <Objekt>, <Streckungsfaktor> ]\n[ <Objekt>, <Streckungsfaktor>, <Zentrum der Streckung> ]
Dimension.Syntax=[ <Objekt> ]
Direction=Richtung
Direction.Syntax=[ <Gerade> ]
Directrix=Leitlinie
Directrix.Syntax=[ <Kegelschnitt> ]
Discover=Entdecken
Discover.Syntax=[ <Punkt> ]
Distance=Abstand
Distance.Syntax=[ <Punkt>, <Objekt> ]\n[ <Gerade>, <Gerade> ]\n[ <Ebene>, <Ebene> ]
Div=Quotient
Div.Syntax=[ <Dividend>, <Divisor> ]\n[ <Dividend-Polynom>, <Divisor-Polynom> ]
Division.Syntax=[ <Dividend>, <Divisor> ]\n[ <Dividend-Polynom>, <Divisor-Polynom> ]
Divisors=Teiler
Divisors.Syntax=[ <Zahl> ]
DivisorsList=Teilerliste
DivisorsList.Syntax=[ <Zahl> ]
DivisorsSum=Teilersumme
DivisorsSum.Syntax=[ <Zahl> ]
Dodecahedron=Dodekaeder
Dodecahedron.Syntax=[ <Regelmäßiges Fünfeck> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
Dot=Skalarprodukt
Dot.Syntax=[ <Vektor>, <Vektor> ]
DotPlot.Syntax=[ <Liste von Rohdaten>, <Staple überlappende Punkte (optional)>, <Skalierungsfaktor (optional)>]
DynamicCoordinates=DynamischeKoordinaten
DynamicCoordinates.Syntax=[ <Punkt>, <x-Koordinate>, <y-Koordinate> ]\n[ <Punkt>, <x-Koordinate>, <y-Koordinate>, <z-Koordinate> ]
Eccentricity=NumerischeExzentrizität
Eccentricity.Syntax=[ <Kegelschnitt> ]
Eigenvalues=Eigenwerte
Eigenvalues.SyntaxCAS=[ <Matrix> ]
Eigenvectors=Eigenvektoren
Eigenvectors.SyntaxCAS=[ <Matrix> ]
Element.Syntax=[ <Liste>, <Position des Elements> ]\n[ <Matrix>, <Zeile>, <Spalte> ]\n[ <Liste>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Liste>, <Position des Elements> ]\n[ <Matrix>, <Zeile>, <Spalte> ]
Eliminate=Eliminiere
Eliminate.Syntax=[ <Liste von Polynomen>, <Liste von Variablen> ]
Ellipse.Syntax=[ <Brennpunkt>, <Brennpunkt>, <Halbachsenlänge> ]\n[ <Brennpunkt>, <Brennpunkt>, <Strecke> ]\n[ <Brennpunkt>, <Brennpunkt>, <Punkt> ]
Ends=Enden
Ends.Syntax=[ <Quadrik> ]
Envelope=Einhüllende
Envelope.Syntax=[ <Pfad>, <Punkt> ]
Erlang.Syntax=[ <Formparameter>, <Zinssatz>, <Wert der Zufallsgröße> ]\n[ <Formparameter>, <Zinssatz>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Formparameter>, <Zinssatz>, x, <Kumuliert true|false> ]
Evaluate=Berechne
Excentricity=LineareExzentrizität
Excentricity.Syntax=[ <Kegelschnitt> ]
Execute=Ausführen
Execute.Syntax=[ <Liste von Texten> ]\n[ <Liste von Texten>, <Parameter>, <Parameter>, ... ]
Expand=Multipliziere
Expand.Syntax=[ <Ausdruck> ]
Exponential.Syntax=[ <Parameter>, <Wert der Zufallsgröße> ]\n[ <Parameter>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Parameter>, x, <Kumuliert true|false> ]
Exponential.SyntaxCAS=[ <Parameter>, <Wert der Zufallsgröße> ]
ExportImage=ExportiereBild
ExportImage.Syntax=[ <Property>, <Wert>, <Property>, <Wert>, ... ]
ExtendedGCD=ErweiterterGGT
ExtendedGCD.Syntax=[ <ganze Zahl>, <ganze Zahl>]\n[ <Polynom>, <Polynom>]
Extremum.Syntax=[ <Polynom> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Extremum.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
FDistribution=FVerteilung
FDistribution.Syntax=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wert der Zufallsgröße> ]\n[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, x, <Kumuliert true|false> ]
FDistribution.SyntaxCAS=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wert der Zufallsgröße> ]
Factor=Faktorisiere
Factor.Syntax=[ <Polynom> ]
Factor.SyntaxCAS=[ <Zahl> ]\n[ <Polynom> ]\n[ <Ausdruck>, <Variable> ]
Factors=Faktoren
Factors.Syntax=[ <Polynom> ]\n[ <Zahl> ]
FillCells=FülleZellen
FillCells.Syntax=[ <Zellbereich>, <Objekt> ]\n[ <Zelle>, <Liste> ]\n[ <Zelle>, <Matrix> ]
FillColumn=FülleSpalte
FillColumn.Syntax=[ <Spalte>, <Liste> ]
FillRow=FülleZeile
FillRow.Syntax=[ <Zeile>, <Liste> ]
First=Erstes
First.Syntax=[ <Liste> ]\n[ <Text> ]\n[ <Liste>, <Anzahl n der Elemente> ]\n[ <Text>, <Anzahl n der Elemente> ]\n[ <Ortslinie>, <Anzahl n der Elemente> ]
First.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Anzahl n der Elemente> ]
FirstAxis=Hauptachse
FirstAxis.Syntax=[ <Kegelschnitt> ]
FirstAxisLength=HalbeHauptachsenlänge
FirstAxisLength.Syntax=[ <Kegelschnitt> ]
Fit=Trend
Fit.Syntax=[ <Liste von Punkten>, <Liste von Funktionen> ]\n[ <Liste von Punkten>, <Funktion> ]
FitExp=TrendExp
FitExp.Syntax=[ <Liste von Punkten> ]
FitGrowth=TrendExp2
FitGrowth.Syntax=[ <Liste von Punkten> ]
FitImplicit=TrendImplizit
FitImplicit.Syntax=[ <Liste von Punkten>, <Grad> ]
FitLineX=TrendlinieX
FitLineX.Syntax=[ <Liste von Punkten> ]
FitLineY=Trendlinie
FitLineY.Syntax=[ <Liste von Punkten> ]
FitLog=TrendLog
FitLog.Syntax=[ <Liste von Punkten> ]
FitLogistic=TrendLogistisch
FitLogistic.Syntax=[ <Liste von Punkten> ]
FitPoly=TrendPoly
FitPoly.Syntax=[ <Liste von Punkten>, <Grad des Polynoms> ]\n[ <Freihand Funktion>, <Grad des Polynoms> ]
FitPow=TrendPot
FitPow.Syntax=[ <Liste von Punkten> ]
FitSin=TrendSin
FitSin.Syntax=[ <Liste von Punkten> ]
Flatten=Reduzieren
Flatten.Syntax=[ <Liste> ]
Focus=Brennpunkt
Focus.Syntax=[ <Kegelschnitt> ]
FractionText=BruchText
FractionText.Syntax=[ <Zahl> ]\n[ <Punkt> ]\n[ <Zahl>, <Echter Bruch> ]
Frequency=Häufigkeit
Frequency.Syntax=[ <Liste von Rohdaten> ]\n[ <Kumuliert true|false>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten> ]\n[ <Liste von Texten>, <Liste von Texten> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]
FrequencyPolygon=Häufigkeitspolygon
FrequencyPolygon.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]
FrequencyTable=Häufigkeitstabelle
FrequencyTable.Syntax=[ <Liste von Rohdaten>, <Skalierungsfaktor (optional)> ]\n[ <Kumuliert true|false>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]
FromBase=VonBasis
FromBase.Syntax=[ <Zahl als Text>, <Basis> ]
Function=Funktion
Function.Syntax=[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Liste von Zahlen> ]
Function.Syntax3D=[ <Liste von Zahlen> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Ausdruck>, <Parameter Variable 1>, <Anfangswert>, <Endwert>, <Parameter Variable 2>, <Anfangswert>, <Endwert> ]
Function.SyntaxCAS=[ <Funktion>, <Startwert>, <Endwert> ]
FutureValue=Endwert
FutureValue.Syntax=[ <Zinssatz>, <Anzahl der Perioden>, <Zahlung>, <Barwert(optional)>, <Fälligkeit (optional)> ]
GCD=GGT
GCD.Syntax=[ <Liste von Zahlen> ]\n[ <Zahl>, <Zahl> ]
GCD.SyntaxCAS=[ <Liste von Zahlen> ]\n[ <Liste von Polynomen> ]\n[ <Zahl>, <Zahl> ]\n[ <Polynom>, <Polynom> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Wert der Zufallsgröße> ]\n[ <Alpha>, <Beta>, <Wert der Zufallsgröße>, <Kumuliert true|false>  ]\n[ <Alpha>, <Beta>, x, <Kumuliert true|false> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <Wert der Zufallsgröße> ]
GeometricMean=GeometrischerMittelwert
GeometricMean.Syntax=[ <Liste von Zahlen> ]
GetTime=Zeitabfrage
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex=GröbnerGradRevLex
GroebnerDegRevLex.Syntax=[ <Liste von Polynomen> ]\n[ <Liste von Polynomen>, <Liste von Variablen> ]
GroebnerLex=GröbnerLex
GroebnerLex.Syntax=[ <Liste von Polynomen> ]\n[ <Liste von Polynomen>, <Liste von Variablen> ]
GroebnerLexDeg=GröbnerLexGrad
GroebnerLexDeg.Syntax=[ <Liste von Polynomen> ]\n[ <Liste von Polynomen>, <Liste von Variablen> ]
HarmonicMean=HarmonischerMittelwert
HarmonicMean.Syntax=[ <Liste von Zahlen> ]
Height=Höhe
Height.Syntax=[ <Körper> ]
HideLayer=VerbergeEbene
HideLayer.Syntax=[ <Zahl> ]
Histogram=Histogramm
Histogram.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]
HistogramRight=HistogrammRechts
HistogramRight.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)>  ]\n[ <Kumuliert true|false>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Dichte true|false>, <Skalierungsfaktor (optional)> ]
HyperGeometric=Hypergeometrisch
HyperGeometric.Syntax=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang> ]\n[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Kumuliert true|false> ]\n[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
HyperGeometric.SyntaxCAS=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
Hyperbola=Hyperbel
Hyperbola.Syntax=[ <Brennpunkt>, <Brennpunkt>, <Halbachsenlänge> ]\n[ <Brennpunkt>, <Brennpunkt>, <Strecke> ]\n[ <Brennpunkt>, <Brennpunkt>, <Punkt> ]
IFactor=IFaktorisiere
IFactor.Syntax=[ <Polynom> ]
IFactor.SyntaxCAS=[ <Ausdruck> ]
Icosahedron=Ikosaeder
Icosahedron.Syntax=[ <Gleichseitiges Dreieck> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
Identity=Einheitsmatrix
Identity.Syntax=[ <Zahl> ]
If=Wenn
If.Syntax=[ <Bedingung>, <Dann> ]\n[ <Bedingung>, <Dann>, <Sonst> ]
ImplicitCurve=ImpliziteKurve
ImplicitCurve.Syntax=[ <Liste von Punkten> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImpliziteAbleitung
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Ausdruck>, <Abhängige Variable>, <Unabhängige Variable> ]
Incircle=Inkreis
Incircle.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
IncircleCenter=Inkreismittelpunkt
IncircleCenter.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
IndexOf=IndexVon
IndexOf.Syntax=[ <Objekt>, <Liste> ]\n[ <Text>, <Text> ]\n[ <Objekt>, <Liste>, <StartIndex> ]\n[ <Text>, <Text>, <StartIndex> ]
Insert=Einfügen
Insert.Syntax=[ <Liste>, <Liste>, <Position> ]\n[ <Objekt>, <Liste>, <Position> ]
Integral.Syntax=[ <Funktion> ]\n[ <Funktion>, <Variable> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Startwert>, <Endwert>, <Wert berechnen true|false> ]
Integral.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Variable> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Variable>, <Anfangswert>, <Endwert> ]
IntegralBetween=IntegralZwischen
IntegralBetween.Syntax=[ <Funktion>, <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Funktion>, <Startwert>, <Endwert>, <Wert berechnen true|false> ]
IntegralBetween.SyntaxCAS=[ <Funktion>, <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Funktion>, <Variable>, <Anfangswert>, <Endwert> ]
IntegralSymbolic=IntegralSymbolisch
IntegralSymbolic.Syntax=[ <Funktion> ]\n[ <Funktion>, <Variable> ]
InteriorAngles=Innenwinkel
InteriorAngles.Syntax=[ <Vieleck> ]
Intersect=Schnittpunkt
Intersect.Syntax=[ <Objekt>, <Objekt> ]\n[ <Objekt>, <Objekt>, <Nummer des Schnittpunkts> ]\n[ <Objekt>, <Objekt>, <Anfangspunkt> ]\n[ <Funktion>, <Funktion>, <Startwert>, <Endwert> ]\n[ <Kurve 1>, <Kurve 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <Funktion>, <Funktion> ]
IntersectConic=SchneideKegelschnitt
IntersectConic.Syntax=[ <Ebene>, <Quadrik> ]\n[ <Quadrik>, <Quadrik> ]
IntersectPath=SchneideBahnkurven
IntersectPath.Syntax=[ <Gerade>, <Vieleck> ]\n[ <Vieleck>, <Vieleck> ]
IntersectPath.Syntax3D=[ <Gerade>, <Vieleck> ]\n[ <Vieleck>, <Vieleck> ]\n[ <Ebene>, <Vieleck> ]\n[ <Ebene>, <Quadrik> ]
Intersection=Schnittmenge
Intersection.Syntax=[ <Liste>, <Liste> ]
InverseBeta.Syntax=[ <Alpha>, <Beta>, <Wahrscheinlichkeit> ]
InverseBinomial=InversBinomial
InverseBinomial.Syntax=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Kumulative Wahrscheinlichkeit> ]
InverseBinomialMinimumTrials=InversBinomialMinimumVersuche
InverseBinomialMinimumTrials.Syntax=[ <Kumulative Wahrscheinlichkeit>, <Erfolgswahrscheinlichkeit>, <Anzahl möglicher Erfolge> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Kumulative Wahrscheinlichkeit>, <Erfolgswahrscheinlichkeit>, <Anzahl möglicher Erfolge> ]
InverseCauchy=InversCauchy
InverseCauchy.Syntax=[ <Median>, <Breitenparameter>, <Wahrscheinlichkeit> ]
InverseChiSquared=InversChiQuadrat
InverseChiSquared.Syntax=[ <Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseExponential=InversExponential
InverseExponential.Syntax=[ <Parameter>, <Wahrscheinlichkeit> ]
InverseFDistribution=InversFVerteilung
InverseFDistribution.Syntax=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseGamma=InversGamma
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Wahrscheinlichkeit> ]
InverseHyperGeometric=InversHypergeometrisch
InverseHyperGeometric.Syntax=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wahrscheinlichkeit> ]
InverseLaplace=InversLaplace
InverseLaplace.Syntax=[ <Funktion> ]\n[ <Funktion>, <Variable> ]\n[ <Funktion>, <Variable>, <Variable> ]
InverseLogNormal=InversLogNormal
InverseLogNormal.Syntax=[ <Erwartungswert>, <Standardabweichung>, <Wahrscheinlichkeit> ]
InverseLogistic=InversLogistischeVerteilung
InverseLogistic.Syntax=[ <Erwartungswert>, <Breitenparameter>, <Wahrscheinlichkeit> ]
InverseNormal=InversNormal
InverseNormal.Syntax=[ <Erwartungswert>, <Standardabweichung>, <Kumulative Wahrscheinlichkeit> ]
InversePascal=InversPascal
InversePascal.Syntax=[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wahrscheinlichkeit> ]
InversePoisson=InversPoisson
InversePoisson.Syntax=[ <Erwartungswert>, <Wahrscheinlichkeit> ]
InverseTDistribution=InversTVerteilung
InverseTDistribution.Syntax=[ <Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseWeibull=InversWeibull
InverseWeibull.Syntax=[ <Formparameter>, <Breitenparameter>, <Wahrscheinlichkeit> ]
InverseZipf=InversZeta
InverseZipf.Syntax=[ <Anzahl n der Elemente>, <Exponent>, <Wahrscheinlichkeit> ]
Invert=Invertiere
Invert.Syntax=[ <Matrix> ]\n[ <Funktion> ]
IsFactored=IstFaktorisiert
IsFactored.Syntax=[ <Polynom> ]
IsInRegion=LiegtImBereich
IsInRegion.Syntax=[ <Punkt>, <Pfad> ]
IsInteger=IstGanzzahlig
IsInteger.Syntax=[ <Zahl> ]
IsPrime=IstPrimzahl
IsPrime.Syntax=[ <Zahl> ]
IsTangent=IstTangente
IsTangent.Syntax=[ <Gerade>, <Kegelschnitt> ]
IsVertexForm=IstScheitelpunktform
IsVertexForm.Syntax=[ <Funktion> ]
Iteration.Syntax=[ <Funktion>, <Anfangswert>, <Anzahl der Iterationen> ]\n[ <Ausdruck>, <Variablen>, <Startwert>, <Anzahl> ]
IterationList=Iterationsliste
IterationList.Syntax=[ <Funktion>, <Anfangswert>, <Anzahl der Iterationen> ]\n[ <Ausdruck>, <Variablen>, <Startwert>, <Anzahl> ]
IterationList.SyntaxCAS=[ <Funktion>, <Anfangswert>, <Anzahl der Iterationen> ]
Join=Verbinde
Join.Syntax=[ <Liste von Listen> ]\n[ <Liste>, <Liste>, ... ]
JordanDiagonalization=JordanDiagonalisierung
JordanDiagonalization.SyntaxCAS=[ <Matrix> ]
KeepIf=BehalteWenn
KeepIf.Syntax=[ <Bedingung>, <Liste> ]\n[ <Bedingung>, <Variable>, <Liste> ]
LCM=KGV
LCM.Syntax=[ <Liste von Zahlen> ]\n[ <Zahl>, <Zahl> ]
LCM.SyntaxCAS=[ <Liste von Zahlen> ]\n[ <Liste von Polynomen> ]\n[ <Zahl>, <Zahl> ]\n[ <Polynom>, <Polynom> ]
LUDecomposition=LRZerlegung
LUDecomposition.Syntax=[ <Matrix> ]
LaTeX=FormelText
LaTeX.Syntax=[ <Objekt> ]\n[ <Objekt>, <Variablen ersetzen true|false> ]\n[ <Objekt>, <Variablen ersetzen true|false>, <Wahrheitswert für Anzeige des Namens> ]
Laplace.Syntax=[ <Funktion> ]\n[ <Funktion>, <Variable> ]\n[ <Funktion>, <Variable>, <Variable> ]
Last=Letztes
Last.Syntax=[ <Liste> ]\n[ <Text> ]\n[ <Liste>, <Anzahl n der Elemente> ]\n[ <Text>, <Anzahl n der Elemente> ]
Last.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Anzahl n der Elemente> ]
LeftSide=LinkeSeite
LeftSide.Syntax=[ <Gleichung> ]
LeftSide.SyntaxCAS=[ <Gleichung> ]\n[ <Liste von Gleichungen> ]\n[ <Liste von Gleichungen>, <Index> ]
LeftSum=LinkeSumme
LeftSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
Length=Länge
Length.Syntax=[ <Objekt> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Anfangspunkt>, <Endpunkt> ]\n[ <Kurve>, <Startwert>, <Endwert> ]\n[ <Kurve>, <Anfangspunkt>, <Endpunkt> ]
Length.SyntaxCAS=[ <Liste> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Variable>, <Startwert>, <Endwert> ]
LetterToUnicode=BuchstabeZuUnicode
LetterToUnicode.Syntax=[ <Buchstabe> ]
Limit=Grenzwert
Limit.Syntax=[ <Funktion>, <Wert> ]
Limit.SyntaxCAS=[ <Ausdruck>, <Wert> ]\n[ <Ausdruck>, <Variable>, <Wert> ]
LimitAbove=RechtsseitigerGrenzwert
LimitAbove.Syntax=[ <Funktion>, <Wert> ]
LimitAbove.SyntaxCAS=[ <Ausdruck>, <Wert> ]\n[ <Ausdruck>, <Variable>, <Wert> ]
LimitBelow=LinksseitigerGrenzwert
LimitBelow.Syntax=[ <Funktion>, <Wert> ]
LimitBelow.SyntaxCAS=[ <Ausdruck>, <Wert> ]\n[ <Ausdruck>, <Variable>, <Wert> ]
Line=Gerade
Line.Syntax=[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Parallele Gerade> ]\n[ <Punkt>, <Richtungsvektor> ]
LineBisector=Mittelsenkrechte
LineBisector.Syntax=[ <Strecke> ]\n[ <Punkt>, <Punkt> ]
LineBisector.Syntax3D=[ <Strecke> ]\n[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
LineGraph=Streckendiagramm
LineGraph.Syntax=[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]
Locus=Ortslinie
Locus.Syntax=[ <Punkt Q der die Ortslinie erzeugt>, <Punkt> ]\n[ <Punkt Q der die Ortslinie erzeugt>, <Schieberegler> ]\n[ <Richtungsfeld>, <Punkt> ]\n[ <f(x, y)>, <Punkt> ]
LocusEquation=Ortsliniengleichung
LocusEquation.Syntax=[ <Ortslinie> ]\n[ <Punkt auf Ortslinie>, <Bewegter Punkt> ]\n[ <Boolscher Ausdruck>, <Bewegter Punkt> ]
LogNormal.Syntax=[ <Erwartungswert>, <Standardabweichung>, <Wert der Zufallsgröße> ]\n[ <Erwartungswert>, <Standardabweichung>, <Wert der Zufallsgröße>, <Kumuliert true|false>  ]\n[ <Erwartungswert>, <Standardabweichung>, x, <Kumuliert true|false> ]
Logistic=LogistischeVerteilung
Logistic.Syntax=[ <Erwartungswert>, <Breitenparameter>, <Wert der Zufallsgröße> ]\n[ <Erwartungswert>, <Breitenparameter>, <Wert der Zufallsgröße>, <Kumuliert true|false>  ]\n[ <Erwartungswert>, <Breitenparameter>, x, <Kumuliert true|false> ]
LowerSum=Untersumme
LowerSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
MatrixPlot=Matrixplot
MatrixRank=Rang
MatrixRank.Syntax=[ <Matrix> ]
Max.Syntax=[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Liste> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Max.SyntaxCAS=[ <Liste> ]\n[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten> ]
Maximize=Maximiere
Maximize.Syntax=[ <Abhängige Zahl>, <Freie Zahl> ]\n[ <Abhängige Zahl>, <Punkt auf Linie> ]
Mean=Mittelwert
Mean.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
MeanX=MittelwertX
MeanX.Syntax=[ <Liste von Punkten> ]
MeanY=MittelwertY
MeanY.Syntax=[ <Liste von Punkten> ]
Median.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Median.SyntaxCAS=[ <Liste von Zahlen> ]
Midpoint=Mittelpunkt
Midpoint.Syntax=[ <Strecke> ]\n[ <Kegelschnitt> ]\n[ <Intervall> ]\n[ <Punkt>, <Punkt> ]
Min.Syntax=[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Liste> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Min.SyntaxCAS=[ <Liste> ]\n[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten> ]
MinimalPolynomial=Minimalpolynom
MinimalPolynomial.Syntax=[ <Matrix> ]
Minimize=Minimiere
Minimize.Syntax=[ <Abhängige Zahl>, <Freie Zahl> ]\n[ <Abhängige Zahl>, <Punkt auf Linie> ]
MinimumSpanningTree=MinimalerSpannbaum
MinimumSpanningTree.Syntax=[ <Liste von Punkten> ]
Mirror=Spiegle
Mirror.Syntax=[ <Objekt>, <Punkt> ]\n[ <Objekt>, <Gerade> ]\n[ <Objekt>, <Ellipse> ]
Mirror.Syntax3D=[ <Objekt>, <Punkt> ]\n[ <Objekt>, <Gerade> ]\n[ <Objekt>, <Ebene> ]\n[ <Objekt>, <Ellipse> ]
MixedNumber=GemischterBruch
MixedNumber.SyntaxCAS=[ <Zahl> ]
Mod.Syntax=[ <Dividend>, <Divisor> ]\n[ <Dividend-Polynom>, <Divisor-Polynom> ]
Mode=Modalwert
Mode.Syntax=[ <Liste von Zahlen> ]
ModularExponent=ModulareExponentiation
ModularExponent.Syntax=[ <Zahl>, <Zahl>, <Zahl> ]
NDerivative=NAbleitung
NDerivative.Syntax=[ <Funktion> ]\n[ <Funktion>, <Grad> ]
NIntegral.Syntax=[ <Funktion> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Startwert>, <Start y-Value>, <Endwert> ]
NIntegral.SyntaxCAS=[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Variable>, <Anfangswert>, <Endwert> ]
NInvert=NInvertiere
NInvert.Syntax=[ <Funktion> ]
NSolutions=NLösungen
NSolutions.Syntax=[ <Gleichung> ]
NSolutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Gleichung>, <Variable = Startwert> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
NSolve=NLöse
NSolve.Syntax=[ <Gleichung> ]
NSolve.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Gleichung>, <Variable = Startwert> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
NSolveODE=NLöseDgl
NSolveODE.Syntax=[ <Liste von Ableitungen>, <Startwert x-Koordinate>, <Liste von Anfangswerten der y-Koordinaten>, <Endwert x-Koordinate> ]
Name.Syntax=[ <Objekt> ]
Net=Netz
Net.Syntax=[ <Polyeder>, <Zahl> ]\n[ <Polyeder>, <Zahl>, <Fläche>, <Kante>, <Kante>, ... ]
NextPrime=NächstePrimzahl
NextPrime.Syntax=[ <Zahl> ]
Normal.Syntax=[ <Erwartungswert>, <Standardabweichung>, <Wert der Zufallsgröße> ]\n[ <Erwartungswert>, <Standardabweichung>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Erwartungswert>, <Standardabweichung>, x, <Kumuliert true|false> ]\n[ <Erwartungswert>, <Standardabweichung>, <Variable Value u> , <Variable Value v> ]
NormalQuantilePlot=NormalQuantilPlot
NormalQuantilePlot.Syntax=[ <Liste von Rohdaten> ]
Normalize=Normalisiere
Normalize.Syntax=[ <Liste von Zahlen> ]\n[ <Liste von Punkten> ]
Numerator=Zähler
Numerator.Syntax=[ <Zahl> ]\n[ <Funktion> ]
Numerator.SyntaxCAS=[ <Ausdruck> ]
Numeric=Numerisch
Numeric.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <signifikante Stellen> ]
Object=Objekt
Object.Syntax=[ <Name des Objekts als Text> ]
Octahedron=Oktaeder
Octahedron.Syntax=[ <Gleichseitiges Dreieck> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
Ordinal.Syntax=[ <ganze Zahl> ]
OrdinalRank=OrdinalRang
OrdinalRank.Syntax=[ <Liste> ]
OrthogonalLine=Senkrechte
OrthogonalLine.Syntax=[ <Punkt>, <Gerade> ]\n[ <Punkt>, <Strecke> ]\n[ <Punkt>, <Vektor> ]
OrthogonalLine.Syntax3D=[ <Punkt>, <Gerade> ]\n[ <Punkt>, <Strecke> ]\n[ <Punkt>, <Vektor> ]\n[ <Punkt>, <Ebene> ]\n[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Richtung>, <Richtung> ]\n[ <Punkt>, <Gerade>, <Kontext> ]
OrthogonalPlane=Normalebene
OrthogonalPlane.Syntax=[ <Punkt>, <Gerade> ]\n[ <Punkt>, <Vektor> ]
OrthogonalVector=Normalvektor
OrthogonalVector.Syntax=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]
OrthogonalVector.Syntax3D=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]\n[ <Ebene> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle=Krümmungskreis
OsculatingCircle.Syntax=[ <Punkt>, <Objekt> ]
PMCC=KorrelationsKoeffizient
PMCC.Syntax=[ <Liste von Punkten> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]
Pan=Bewege
Pan.Syntax=[ <Anzahl x-Pixel>, <Anzahl y-Pixel> ]
Pan.Syntax3D=[ <Anzahl x-Pixel>, <Anzahl y-Pixel> ]\n[ <Anzahl x-Pixel>, <Anzahl y-Pixel>, <z> ]
Parabola=Parabel
Parabola.Syntax=[ <Punkt>, <Gerade> ]
Parameter.Syntax=[ <Parabel> ]
ParametricDerivative=ParametrischeAbleitung
ParametricDerivative.Syntax=[ <Kurve> ]
ParseToFunction=VerwandleInFunktion
ParseToFunction.Syntax=[ <Text> ]\n[ <Funktion>, <Text> ]
ParseToNumber=VerwandleInZahl
ParseToNumber.Syntax=[ <Text> ]\n[ <Zahl>, <Text> ]
PartialFractions=Partialbruch
PartialFractions.Syntax=[ <Funktion> ]
PartialFractions.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Variable> ]
Pascal=NegativBinomial
Pascal.Syntax=[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges> ]\n[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Kumuliert true|false> ]\n[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
Pascal.SyntaxCAS=[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
PathParameter=PfadParameter
PathParameter.Syntax=[ <Punkt auf Pfad> ]
Payment=Zahlung
Payment.Syntax=[ <Zinssatz>, <Anzahl der Perioden>, <Barwert>, <Endwert (optional)>, <Fälligkeit (optional)> ]
PenStroke.Syntax=[ <Punkt>, ..., <Punkt> ]
Percentile=Perzentil
Percentile.Syntax=[ <Liste von Zahlen>, <Prozent> ]
Perimeter=Umfang
Perimeter.Syntax=[ <Vieleck> ]\n[ <Kegelschnitt> ]\n[ <Ortslinie> ]
Periods=Perioden
Periods.Syntax=[ <Zinssatz>, <Zahlung>, <Barwert>, <Endwert (optional)>, <Fälligkeit (optional)> ]
PieChart=Kreisdiagramm
PieChart.Syntax=[ <Liste von Häufigkeiten> ]\n[ <Liste von Häufigkeiten>, <Mittelpunkt>, <Radius> ]
Plane=Ebene
Plane.Syntax=[ <Vieleck> ]\n[ <Kegelschnitt> ]\n[ <Punkt>, <Ebene> ]\n[ <Punkt>, <Gerade> ]\n[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Vektor>, <Vektor> ]
Plane.SyntaxCAS=[ <Punkt>, <Punkt>, <Punkt> ]
PlaneBisector=Halbierungsebene
PlaneBisector.Syntax=[ <Strecke> ]\n[ <Punkt>, <Punkt> ]
PlaySound=SpieleTon
PlaySound.Syntax=[ <URL> ]\n[ <Weiterspielen true|false> ]\n[ <Funktion>, <minimaler Wert>, <maximaler Wert> ]\n[ <Funktion>, <minimaler Wert>, <maximaler Wert>, <Sample Rate>, <Sample Tiefe> ]
Plot2D=Zeichne2D
Plot2D.Syntax=[ <Funktion> ]
PlotSolve=ZeichneLösung
PlotSolve.Syntax=[ <Gleichung in x> ]
Point=Punkt
Point.Syntax=[ <Objekt> ]\n[ <Objekt>, <Parameter> ]\n[ <Punkt>, <Vektor> ]\n[ <Liste> ]
PointIn=PunktIn
PointIn.Syntax=[ <Pfad> ]
PointList=PunktListe
PointList.Syntax=[ <Liste> ]
Poisson.Syntax=[ <Erwartungswert> ]\n[ <Erwartungswert>, <Kumuliert true|false> ]\n[ <Erwartungswert>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
Poisson.SyntaxCAS=[ <Erwartungswert>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
Polar=Polare
Polar.Syntax=[ <Punkt>, <Kegelschnitt> ]\n[ <Gerade>, <Kegelschnitt> ]
PolyLine=Polygonzug
PolyLine.Syntax=[ <Liste von Punkten> ]\n[ <Punkt>, ..., <Punkt> ]
Polygon=Vieleck
Polygon.Syntax=[ <Liste von Punkten> ]\n[ <Punkt>, ..., <Punkt> ]\n[ <Punkt>, <Punkt>, <Anzahl der Ecken> ]
Polygon.Syntax3D=[ <Liste von Punkten> ]\n[ <Punkt>, ..., <Punkt> ]\n[ <Punkt>, <Punkt>, <Anzahl der Ecken> ]\n[ <Punkt>, <Punkt>, <Anzahl der Ecken>, <Richtung> ]
Polynomial=Polynom
Polynomial.Syntax=[ <Funktion> ]\n[ <Liste von Punkten> ]
Polynomial.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Variable> ]
PresentValue=Barwert
PresentValue.Syntax=[ <Zinssatz>, <Anzahl der Perioden>, <Zahlung>, <Endwert (optional)>, <Fälligkeit (optional)> ]
PreviousPrime=VorherigePrimzahl
PreviousPrime.Syntax=[ <Zahl> ]
PrimeFactors=Primfaktoren
PrimeFactors.Syntax=[ <Zahl> ]
Prism=Prisma
Prism.Syntax=[ <Vieleck>, <Punkt> ]\n[ <Vieleck>, <Höhe> ]\n[ <Punkt>, <Punkt>, ... ]
Product=Produkt
Product.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Anzahl n der Elemente> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]\n[ <Ausdruck>, <Variable>, <Anfangswert>, <Endwert> ]
Product.SyntaxCAS=[ <Liste von Ausdrücken> ]\n[ <Ausdruck>, <Variable>, <StartIndex>, <Endwert> ]
Prove=Prüfe
Prove.Syntax=[ <Boolscher Ausdruck> ]
ProveDetails=PrüfeDetails
ProveDetails.Syntax=[ <Boolscher Ausdruck> ]
Pyramid=Pyramide
Pyramid.Syntax=[ <Vieleck>, <Punkt> ]\n[ <Vieleck>, <Höhe> ]\n[ <Punkt>, <Punkt>, <Punkt>, <Punkt>, ... ]
Q1=Quartil1
Q1.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Q3=Quartil3
Q3.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
QRDecomposition=QRZerlegung
QRDecomposition.Syntax=[ <Matrix> ]
QuadricSide=Seitenfläche
QuadricSide.Syntax=[ <Quadrik> ]
RSquare=RQuadrat
RSquare.Syntax=[ <Liste von Punkten>, <Funktion> ]
Radius.Syntax=[ <Kegelschnitt> ]
Random=Zufallszahl
Random.Syntax=[ <Minimalwert>, <Maximalwert> ]\n[ <Minimalwert>, <Maximalwert>, <Stichprobenanzahl> ]\n[ <Minimalwert>, <Maximalwert>, <Wahrheitswert> ]
Random.SyntaxCAS=[ <Minimalwert>, <Maximalwert> ]\n[ <Minimalwert>, <Maximalwert>, <Stichprobenanzahl> ]
RandomBinomial=ZufallszahlBinomialverteilt
RandomBinomial.Syntax=[ <Anzahl der Versuche>, <Wahrscheinlichkeit> ]
RandomDiscrete=ZufallszahlDiskret
RandomDiscrete.Syntax=[ <Liste>, <Liste> ]
RandomElement=ZufälligesElement
RandomElement.Syntax=[ <Liste> ]
RandomNormal=ZufallszahlNormalverteilt
RandomNormal.Syntax=[ <Erwartungswert>, <Standardabweichung> ]
RandomPointIn=ZufälligerPunktIn
RandomPointIn.Syntax=[ <Pfad> ]\n[ <Liste von Punkten> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=ZufallszahlPoissonverteilt
RandomPoisson.Syntax=[ <Erwartungswert> ]
RandomPolynomial=ZufälligesPolynom
RandomPolynomial.Syntax=[ <Grad>, <Minimalwert für Koeffezienten>, <Maximalwert für Koeffezienten> ]
RandomPolynomial.SyntaxCAS=[ <Grad>, <Minimalwert für Koeffezienten>, <Maximalwert für Koeffezienten> ]\n[ <Variable>, <Grad>, <Minimalwert für Koeffezienten>, <Maximalwert für Koeffezienten> ]
RandomUniform=ZufallszahlGleichverteilt
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Stichprobenanzahl> ]
Rate=Zinssatz
Rate.Syntax=[ <Anzahl der Perioden>, <Zahlung>, <Barwert>, <Endwert (optional)>, <Fälligkeit (optional)>, <Schätzung (optional)> ]
Rationalize=DezimalInBruch
Rationalize.SyntaxCAS=[ <Zahl> ]
Ray=Strahl
Ray.Syntax=[ <Anfangspunkt>, <Punkt> ]\n[ <Anfangspunkt>, <Richtungsvektor> ]
ReadText=LeseText
ReadText.Syntax=[ <Text> ]
RealQuantifierElimination=ReelleQuantorenelimination
RealQuantifierElimination.Syntax=[ <Ausdruck> ]
RectangleSum=Rechtecksumme
RectangleSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke>, <Position Rechtecksanfang> ]
ReducedRowEchelonForm=Treppennormalform
ReducedRowEchelonForm.Syntax=[ <Matrix> ]
Relation=Beziehung
Relation.Syntax=[ <Liste> ]\n[ <Objekt>, <Objekt> ]
RemovableDiscontinuity=HebbareUnstetigkeit
RemovableDiscontinuity.Syntax=[ <Funktion> ]
Remove=Entferne
Remove.Syntax=[ <Liste>, <Liste> ]
RemoveUndefined=EntferneUndefiniert
RemoveUndefined.Syntax=[ <Liste> ]
Rename=Umbenennen
Rename.Syntax=[ <Objekt>, <Name> ]
Repeat=Wiederhole
Repeat.Syntax=[ <Zahl>, <Scripting Befehl>, <Scripting Befehl>, ... ]
ReplaceAll=ErsetzeAlle
ReplaceAll.Syntax=[ <Text>, <zu ersetzender Text>, <neuer Text> ]
ResidualPlot.Syntax=[ <Liste von Punkten>, <Funktion> ]
Reverse=Umkehren
Reverse.Syntax=[ <Liste> ]
RightSide=RechteSeite
RightSide.Syntax=[ <Gleichung> ]
RightSide.SyntaxCAS=[ <Gleichung> ]\n[ <Liste von Gleichungen> ]\n[ <Liste von Gleichungen>, <Index> ]
RigidPolygon=StarresVieleck
RigidPolygon.Syntax=[ <Vieleck> ]\n[ <Vieleck>, <x-Verschiebung>, <y-Verschiebung> ]\n[ <Freier Punkt>, ..., <Freier Punkt> ]
Root=Nullstelle
Root.Syntax=[ <Polynom> ]\n[ <Funktion>, <Startwert> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Root.SyntaxCAS=[ <Polynom> ]
RootList=NullstellenListe
RootList.Syntax=[ <Liste> ]
RootMeanSquare=Effektivwert
RootMeanSquare.Syntax=[ <Liste von Zahlen> ]
Roots=Nullstellen
Roots.Syntax=[ <Funktion>, <Startwert>, <Endwert> ]
Rotate=Drehe
Rotate.Syntax=[ <Objekt>, <Winkel> ]\n[ <Objekt>, <Winkel>, <Punkt> ]
Rotate.Syntax3D=[ <Objekt>, <Winkel> ]\n[ <Objekt>, <Winkel>, <Punkt> ]\n[ <Objekt>, <Winkel>, <Rotationsachse> ]\n[ <Objekt>, <Winkel>, <Punkt auf Achse>, <Achsenrichtung oder Ebene> ]
RotateText=DreheText
RotateText.Syntax=[ <Text>, <Winkel> ]
Row=Zeile
Row.Syntax=[ <Zellname> ]
RunClickScript=SkriptBeiMausklickAusführen
RunClickScript.Syntax=[ <Objekt> ]
RunUpdateScript=SkriptBeiUpdateAusführen
RunUpdateScript.Syntax=[ <Objekt> ]
SD=Standardabweichung
SDX=StandardabweichungX
SDX.Syntax=[ <Liste von Punkten> ]
SDY=StandardabweichungY
SDY.Syntax=[ <Liste von Punkten> ]
SVD=SWZ
SVD.Syntax=[ <Matrix> ]
SXX.Syntax=[ <Liste von Zahlen> ]\n[ <Liste von Punkten> ]
SXY.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
SYY.Syntax=[ <Liste von Punkten> ]
Sample=Stichprobe
Sample.Syntax=[ <Liste>, <Größe> ]\n[ <Liste>, <Größe>, <Wiederholung möglich true|false> ]
SampleSD=StichprobenStandardabweichung
SampleSD.SyntaxCAS=[ <Liste von Zahlen> ]
SampleSDX=StichprobenStandardabweichungX
SampleSDX.Syntax=[ <Liste von Punkten> ]
SampleSDY=StichprobenStandardabweichungY
SampleSDY.Syntax=[ <Liste von Punkten> ]
SampleVariance=Stichprobenvarianz
SampleVariance.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SampleVariance.SyntaxCAS=[ <Liste von Zahlen> ]
ScientificText=WissenschaftlicheNotation
ScientificText.Syntax=[ <Zahl> ]\n[ <Zahl>, <Genauigkeit> ]
SecondAxis=Nebenachse
SecondAxis.Syntax=[ <Kegelschnitt> ]
SecondAxisLength=HalbeNebenachsenlänge
SecondAxisLength.Syntax=[ <Kegelschnitt> ]
Sector=Sektor
Sector.Syntax=[ <Kegelschnitt>, <Punkt>, <Punkt> ]\n[ <Kegelschnitt>, <Parameter Startwert>, <Parameter Startwert> ]
Segment=Strecke
Segment.Syntax=[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Länge> ]
SelectObjects=WähleObjekte
SelectObjects.Syntax=[ ]\n[ <Objekt>, <Objekt>, ... ]
SelectedElement=AusgewähltesElement
SelectedElement.Syntax=[ <Liste> ]
SelectedIndex=AusgewählterIndex
SelectedIndex.Syntax=[ <Liste> ]
Semicircle=Halbkreis
Semicircle.Syntax=[ <Punkt>, <Punkt> ]
Sequence=Folge
Sequence.Syntax=[ <Endwert> ]\n[ <Anfangswert>, <Endwert> ]\n[ <Anfangswert>, <Endwert>, <Schrittweite> ]\n[ <Ausdruck>, <Variable>, <Anfangswert>, <Endwert> ]\n[ <Ausdruck>, <Variable>, <Anfangswert>, <Endwert>, <Schrittweite> ]
SetActiveView=SetzeAktiveGrafikansicht
SetActiveView.Syntax=[ <Ansicht> ]\n[ <Ebene> ]
SetAxesRatio=SetzeAchsenverhältnis
SetAxesRatio.Syntax=[ <Zahl>, <Zahl> ]
SetAxesRatio.Syntax3D=[ <Zahl>, <Zahl> ]\n[ <Zahl>, <Zahl>, <Zahl> ]
SetBackgroundColor=SetzeHintergrundfarbe
SetBackgroundColor.Syntax=[ <Farbe> ]\n[ <Objekt>, <Farbe> ]\n[ <Rot>, <Grün>, <Blau> ]\n[ <Objekt>, <Rot>, <Grün>, <Blau> ]
SetCaption=SetzeBeschriftung
SetCaption.Syntax=[ <Objekt>, <Text> ]
SetColor=SetzeFarbe
SetColor.Syntax=[ <Objekt>, <Farbe> ]\n[ <Objekt>, <Rot>, <Grün>, <Blau> ]
SetConditionToShowObject=SetzeBedingungUmObjektAnzuzeigen
SetConditionToShowObject.Syntax=[ <Objekt>, <Bedingung> ]
SetConstructionStep=SetzeKonstruktionsschritt
SetConstructionStep.Syntax=[ <Zahl> ]
SetCoords=SetzeKoordinaten
SetCoords.Syntax=[ <Objekt>, <Anzahl x-Pixel>, <Anzahl y-Pixel> ]\n[ <Objekt>, <Anzahl x-Pixel>, <Anzahl y-Pixel>, <z> ]
SetDecoration=SetzeDekoration
SetDecoration.Syntax=[ <Objekt>, <Zahl> ]\n[ <Strecke>, <Zahl>, <Zahl>]
SetDynamicColor=SetzeDynamischeFarben
SetDynamicColor.Syntax=[ <Objekt>, <Rot>, <Grün>, <Blau> ]\n[ <Objekt>, <Rot>, <Grün>, <Blau>, <Deckkraft> ]
SetFilling=SetzeFüllung
SetFilling.Syntax=[ <Objekt>, <Zahl> ]
SetFixed=SetzeFixiert
SetFixed.Syntax=[ <Objekt>, <true | false> ]\n[ <Objekt>, <true | false>, <true | false> ]
SetImage=SetzeBild
SetImage.Syntax=[ <Objekt>, <Bild> ]\n[ <Objekt>, <Text> ]
SetLabelMode=SetzeBeschriftungsmodus
SetLabelMode.Syntax=[ <Objekt>, <Zahl> ]
SetLayer=SetzeEbene
SetLayer.Syntax=[ <Objekt>, <Ebene> ]
SetLevelOfDetail=SetzeDetailierungsgrad
SetLevelOfDetail.Syntax=[ <Fläche>, <Detailierungsgrad> ]
SetLineStyle=SetzeLinienart
SetLineStyle.Syntax=[ <Objekt>, <Zahl> ]
SetLineThickness=SetzeLinienstärke
SetLineThickness.Syntax=[ <Objekt>, <Zahl> ]
SetPerspective=SetzePerspektive
SetPerspective.Syntax=[ <Text> ]
SetPointSize=SetzePunktgröße
SetPointSize.Syntax=[ <Objekt>, <Zahl> ]
SetPointStyle=SetzePunktform
SetPointStyle.Syntax=[ <Punkt>, <Zahl> ]
SetSeed=SetzeSeed
SetSeed.Syntax=[ <ganze Zahl> ]
SetSpinSpeed=SetzeDrehGeschwindigkeit
SetSpinSpeed.Syntax=[ <Zahl> ]
SetTooltipMode=SetzeKurzinfoModus
SetTooltipMode.Syntax=[ <Objekt>, <Zahl> ]
SetTrace=SetzeSpur
SetTrace.Syntax=[ <Objekt>, <true | false> ]
SetValue=SetzeWert
SetValue.Syntax=[ <Wahrheitswert>, <0|1> ]\n[ <Objekt>, <Objekt> ]\n[ <Liste>, <Zahl>, <Objekt> ]
SetViewDirection=SetzeAnsichtsrichtung
SetViewDirection.Syntax=[ ]\n[ <Richtung> ]\n[ <Richtung>, <Animation true|false> ]
SetVisibleInView=SetzeSichtbarInGrafikansicht
SetVisibleInView.Syntax=[ <Objekt>, <Grafikfenster 1|2>, <Wahrheitswert> ]
Shear=Verschiebung
Shear.Syntax=[ <Objekt>, <Gerade>, <Verhältnis> ]
ShortestDistance=KürzesterPfad
ShortestDistance.Syntax=[ <Liste von Strecken>, <Anfangspunkt>, <Endpunkt>, <Gewichtet true|false> ]
ShowAxes=ZeigeAchsen
ShowAxes.Syntax=[]\n[ <Wahrheitswert> ]\n[ <Ansicht>, <Wahrheitswert> ]
ShowGrid=ZeigeGitter
ShowGrid.Syntax=[]\n[ <Wahrheitswert> ]\n[ <Ansicht>, <Wahrheitswert> ]
ShowLabel=ZeigeBeschriftung
ShowLabel.Syntax=[ <Objekt>, <Wahrheitswert> ]
ShowLayer=ZeigeEbene
ShowLayer.Syntax=[ <Zahl> ]
ShowProof=BeweisSchritte
ShowProof.Syntax=[ <Boolscher Ausdruck> ]
Shuffle=Mischen
Shuffle.Syntax=[ <Liste> ]
SigmaXX.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SigmaXY.Syntax=[ <Liste von Punkten> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]
SigmaYY.Syntax=[ <Liste von Punkten> ]
Simplify=Vereinfache
Simplify.Syntax=[ <Funktion> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Funktion> ]
Slider=Schieberegler
Slider.Syntax=[ <Min>, <Max>, <Schrittweite>, <Geschwindigkeit>, <Breite>, <IstWinkel>, <Horizontal>, <Animiert>, <Zufällig> ]
Slope=Steigung
Slope.Syntax=[ <Gerade> ]
SlopeField=Richtungsfeld
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Zahl n> ]\n[ <f(x, y)>, <Zahl n>, <Längenfaktor a> ]\n[ <f(x, y)>, <Zahl n>, <Längenfaktor a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=LangsamesZeichnen
SlowPlot.Syntax=[ <Funktion> ]\n[ <Funktion>, <Wiederholung true|false> ]
Solutions=Lösungen
Solutions.Syntax=[ <Gleichung> ]
Solutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
Solve=Löse
Solve.Syntax=[ <Gleichung> ]
Solve.SyntaxCAS=[ <Gleichung in x> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]\n[ <Liste parametrischer Gleichungen>, <Liste von Variablen> ]\n[ <Gleichung>, <Variable>, <Liste von Annahmen> ]
SolveCubic=LöseKubisch
SolveCubic.SyntaxCAS=[ <Kubische Gleichung> ]
SolveODE=LöseDgl
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punkt von f> ]\n[ <f'(x, y)>, <Start x>, <Start y>, <Ende x>, <Schrittweite> ]\n[ <y'>, <x'>, <Start x>, <Start y>, <Ende t>, <Schrittweite> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <Ende x>, <Schrittweite> ]
SolveODE.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Punkt(e) von f> ]\n[ <Gleichung>, <Punkt(e) von f>, <Punkt(e) von f'> ]\n[ <Gleichung>, <Abhängige Variable>, <Unabhängige Variable>, <Punkt(e) von f> ] \n[ <Gleichung>, <Abhängige Variable>, <Unabhängige Variable>, <Punkt(e) von f>, <Punkt(e) von f'> ]
SolveQuartic=LöseBiquadratisch
SolveQuartic.SyntaxCAS=[ <Biquadratische Gleichung> ]
Sort=Sortiere
Sort.Syntax=[ <Liste> ]\n[ <Liste>, <abhängige Liste> ]
Spearman.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
Sphere=Kugel
Sphere.Syntax=[ <Punkt>, <Radius> ]\n[ <Punkt>, <Punkt> ]
Spline.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Punkten>, <Grad ≥ 3> ]\n[ <Liste von Punkten>, <Grad ≥ 3>, <Gewichtung> ]
Split=Aufteilen
Split.Syntax=[ <Text>, <Liste der zu teilenden Texte> ]
StartAnimation.Syntax=[ ]\n[ <Wahrheitswert> ]\n[ <Schieberegler oder Punkt>, <Schieberegler oder Punkt>, ... ]\n[ <Schieberegler oder Punkt>, <Schieberegler oder Punkt>, ..., <Wahrheitswert> ]
StartRecord=StarteAufnahme
StartRecord.Syntax=[ ]\n[ <Wahrheitswert> ]
StemPlot=StammBlattDiagramm
StemPlot.Syntax=[ <Liste> ]\n[ <Liste>, <Anordnung -1|0|1> ]
StepGraph=Stufendiagramm
StepGraph.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Punkten>, <Verbunden true|false> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]\n[ <Liste von Punkten>, <Verbunden true|false>, <Punktestil> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten>, <Verbunden true|false> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten>, <Verbunden true|false>, <Punktestil> ]
StepwiseDiscovery=SchrittweisesEntdecken
StepwiseDiscovery.Syntax=[ ]\n[ <Wahrheitswert> ]
StickGraph=Stabdiagramm
StickGraph.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Punkten>, <Horizontal true|false> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten>, <Horizontal true|false> ]
Stretch=Strecken
Stretch.Syntax=[ <Objekt>, <Vektor> ]\n[ <Objekt>, <Gerade>, <Verhältnis> ]
Substitute=Ersetze
Substitute.SyntaxCAS=[ <Ausdruck>, <Ersetzungsliste> ]\n[ <Ausdruck>, <von>, <durch> ]
Sum=Summe
Sum.Syntax=[ <Liste> ]\n[ <Liste>, <Anzahl n der Elemente> ]\n[ <Liste>, <Liste von Häufigkeiten> ]\n[ <Ausdruck>, <Variable>, <Anfangswert>, <Endwert> ]
Sum.SyntaxCAS=[ <Liste> ]\n[ <Ausdruck>, <Variable>, <Anfangswert>, <Endwert> ]
SumSquaredErrors=SQA
SumSquaredErrors.Syntax=[ <Liste von Punkten>, <Funktion> ]
SurdText=IrrationalerText
SurdText.Syntax=[ <Punkt> ]\n[ <Zahl> ]\n[ <Zahl>, <Liste> ]
Surface=Oberfläche
Surface.Syntax=[ <Funktion>, <Winkel> ]\n[ <Kurve>, <Winkel>, <Gerade> ]\n[ <Ausdruck>, <Ausdruck>, <Ausdruck>, <Parameter Variable 1>, <Anfangswert>, <Endwert>, <Parameter Variable 2>, <Anfangswert>, <Endwert> ]
TDistribution=TVerteilung
TDistribution.Syntax=[ <Freiheitsgrade>, <Wert der Zufallsgröße> ]\n[ <Freiheitsgrade>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Freiheitsgrade>, x, <Kumuliert true|false> ]
TDistribution.SyntaxCAS=[ <Freiheitsgrade>, <Wert der Zufallsgröße> ]
TMean2Estimate=TMittelwert2Schätzer
TMean2Estimate.Syntax=[ <Liste von Stichprobe 1>, <Liste von Stichprobe 2>, <Konfidenzniveau>, <Boolean GleicheVarianz> ]\n[ <Stichprobenmittelwert 1>, <Stichprobenstandardabweichung 1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <Stichprobenstandardabweichung 2>, <Stichprobengröße 2>, <Konfidenzniveau>, <Boolean GleicheVarianz> ]
TMeanEstimate=TMittelwertSchätzer
TMeanEstimate.Syntax=[ <Stichprobenliste>, <Konfidenzniveau> ]\n[ <Stichprobenmittelwert>, <Stichprobenstandardabweichung>, <Stichprobenumfang>, <Konfidenzniveau> ]
TTest.Syntax=[ <Stichprobenliste>, <Vermuteter Mittelwert>, <Seite> ]\n[ <Stichprobenmittelwert>, <Stichprobenstandardabweichung>, <Stichprobenumfang>, <Vermuteter Mittelwert>, <Seite> ]
TTest2.Syntax=[ <Liste von Stichprobe 1>, <Liste von Stichprobe 2>, <Seite>, <Boolean GleicheVarianz> ]\n[ <Stichprobenmittelwert 1>, <Stichprobenstandardabweichung 1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <Stichprobenstandardabweichung 2>, <Stichprobengröße 2>, <Seite>, <Boolean GleicheVarianz> ]
TTestPaired=TTestGepaart
TTestPaired.Syntax=[ <Liste von Stichprobe 1>, <Liste von Stichprobe 2>, <Seite> ]
TableText=TabellenText
TableText.Syntax=[ <Liste>, <Liste>, ... ]\n[ <Liste>, <Liste>, ..., <Textausrichtung> ]\n[ <Liste>, <Liste>, ..., <Textausrichtung>, <Minimale Zellenbreite> ]\n[ <Liste>, <Liste>, ..., <Textausrichtung>, <Minimale Zellenbreite>, <Minimale Zellenhöhe> ]
Take=Teilliste
Take.Syntax=[ <Liste>, <Anfangsposition>, <Endposition> ]\n[ <Liste>, <Anfangsposition> ]\n[ <Text>, <Anfangsposition>, <Endposition> ]\n[ <Text>, <Anfangsposition> ]
Take.SyntaxCAS=[ <Liste>, <Anfangsposition> ]\n[ <Liste>, <Anfangsposition>, <Endposition> ]\n[ <Text>, <Anfangsposition>, <Endposition> ]\n[ <Text>, <Anfangsposition> ]
Tangent=Tangente
Tangent.Syntax=[ <Punkt>, <Kegelschnitt> ]\n[ <Punkt>, <Funktion> ]\n[ <Punkt auf Kurve>, <Kurve> ]\n[ <x-Wert>, <Funktion> ]\n[ <Gerade>, <Kegelschnitt> ]\n[ <Kegelschnitt>, <Kegelschnitt> ]
Tangent.SyntaxCAS=[ <Zahl>, <Funktion> ]\n[ <Punkt>, <Objekt> ]
TaylorSeries=TaylorReihe
TaylorSeries.Syntax=[ <Funktion>, <x-Wert>, <Grad> ]
TaylorSeries.SyntaxCAS=[ <Ausdruck>, <x-Wert>, <Grad> ]\n[ <Ausdruck>, <Variable>, <Wert der Variablen>, <Grad> ]
Tetrahedron=Tetraeder
Tetrahedron.Syntax=[ <Gleichseitiges Dreieck> ]\n[ <Punkt>, <Punkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Richtung> ]
Text.Syntax=[ <Objekt> ]\n[ <Objekt>, <Variablen ersetzen true|false> ]\n[ <Objekt>, <Punkt> ]\n[ <Objekt>, <Punkt>, <Variablen ersetzen true|false> ]\n[ <Objekt>, <Punkt>, <Variablen ersetzen true|false>, <LaTeX true|false> ]\n[ <Objekt>, <Punkt>, <Variablen ersetzen true|false>, <LaTeX true|false>, <Horizontale Ausrichtung -1|0|1> ]\n[ <Objekt>, <Punkt>, <Variablen ersetzen true|false>, <LaTeX true|false>, <Horizontale Ausrichtung -1|0|1>, <Vertikale Ausrichtung -1|0|1> ]
TextToUnicode=TextZuUnicode
TextToUnicode.Syntax=[ <Text> ]
Textfield=Eingabefeld
Textfield.Syntax=[ <Verknüpftes Objekt> ]
TiedRank=GebundenerRang
TiedRank.Syntax=[ <Liste> ]
ToBase=ZuBasis
ToBase.Syntax=[ <Zahl>, <Basis> ]
ToComplex=InKomplex
ToComplex.Syntax=[ <Vektor> ]
ToExponential=InExponential
ToExponential.SyntaxCAS=[ <Komplexe Zahl> ]
ToPoint=InPunkt
ToPoint.Syntax=[ <Komplexe Zahl> ]
ToPolar=InPolar
ToPolar.Syntax=[ <Komplexe Zahl> ]\n[ <Vektor> ]
ToolImage=WerkzeugBild
ToolImage.Syntax=[ <Zahl> ]\n[ <Zahl>, <Punkt> ]\n[ <Zahl>, <Punkt>, <Punkt> ]
Top=Oben
Top.Syntax=[ <Quadrik> ]
Translate=Verschiebe
Translate.Syntax=[ <Objekt>, <Vektor> ]\n[ <Vektor>, <Anfangspunkt> ]
Transpose=Transponiere
Transpose.Syntax=[ <Matrix> ]
TrapezoidalSum=Trapezsumme
TrapezoidalSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Trapeze> ]
TravelingSalesman=Handelsreisendenproblem
TravelingSalesman.Syntax=[ <Liste von Punkten> ]
TriangleCenter=Dreieckspunkt
TriangleCenter.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Zahl> ]
TriangleCurve=Dreieckskurve
TriangleCurve.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Gleichung> ]
Triangular=Dreiecksverteilung
Triangular.Syntax=[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, <Wert der Zufallsgröße> ]\n[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, x, <Kumuliert true|false> ]
TrigCombine=TrigKombiniere
TrigCombine.Syntax=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]
TrigExpand=TrigErweitere
TrigExpand.Syntax=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]
TrigExpand.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]\n[ <Ausdruck>, <Zielfunktion>, <Argument> ]\n[ <Ausdruck>, <Zielfunktion>, <Argument>, <Argument> ]
TrigSimplify=TrigVereinfache
TrigSimplify.Syntax=[ <Ausdruck> ]
Trilinear.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Zahl>, <Zahl>, <Zahl> ]
TurningPoint=Wendepunkt
TurningPoint.Syntax=[ <Polynom> ]
TurningPoint.SyntaxCAS=[ <Funktion> ]
Turtle.Syntax=[]
TurtleBack=TurtleZurück
TurtleBack.Syntax=[ <Turtle>, <Distanz> ]
TurtleDown=TurtleRunter
TurtleDown.Syntax=[ <Turtle> ]
TurtleForward=TurtleVor
TurtleForward.Syntax=[ <Turtle>, <Distanz> ]
TurtleLeft=TurtleLinks
TurtleLeft.Syntax=[ <Turtle>, <Winkel> ]
TurtleRight=TurtleRechts
TurtleRight.Syntax=[ <Turtle>, <Winkel> ]
TurtleUp=TurtleRauf
TurtleUp.Syntax=[ <Turtle> ]
Type=Typ
Type.Syntax=[ <Objekt> ]
UnicodeToLetter=UnicodeZuBuchstabe
UnicodeToLetter.Syntax=[ <ganze Zahl> ]
UnicodeToText=UnicodeZuText
UnicodeToText.Syntax=[ <Liste von natürlichen Zahlen> ]
Uniform=Gleichverteilung
Uniform.Syntax=[ <Untere Grenze>, <Obere Grenze>, <Wert der Zufallsgröße> ]\n[ <Untere Grenze>, <Obere Grenze>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Untere Grenze>, <Obere Grenze>, x, <Kumuliert true|false> ]
Union=Vereinigungsmenge
Union.Syntax=[ <Liste>, <Liste> ]\n[ <Vieleck>, <Vieleck> ]
Unique=Einzigartig
Unique.Syntax=[ <Liste> ]
UnitOrthogonalVector=Einheitsnormalvektor
UnitOrthogonalVector.Syntax=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]
UnitOrthogonalVector.Syntax3D=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]\n[ <Ebene> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector=Einheitsvektor
UnitVector.Syntax=[ <Objekt> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpdateConstruction=AktualisiereKonstruktion
UpdateConstruction.Syntax=[ ]\n[ <Anzahl> ]
UpperSum=Obersumme
UpperSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
Variance=Varianz
Variance.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Vector=Vektor
Vector.Syntax=[ <Punkt> ]\n[ <Anfangspunkt>, <Endpunkt> ]
Vertex=Scheitel
Vertex.Syntax=[ <Kegelschnitt> ]\n[ <Ungleichungen> ]\n[ <Vieleck> ]\n[ <Vieleck>, <Index> ]\n[ <Strecke>, <Index> ]
VerticalText=VertikalerText
VerticalText.Syntax=[ <Text> ]\n[ <Text>, <Punkt> ]
Volume=Volumen
Volume.Syntax=[ <Körper> ]
Voronoi.Syntax=[ <Liste von Punkten> ]
Weibull.Syntax=[ <Formparameter>, <Breitenparameter>, <Wert der Zufallsgröße> ]\n[ <Formparameter>, <Breitenparameter>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]\n[ <Formparameter>, <Breitenparameter>, x, <Kumuliert true|false> ]
Weibull.SyntaxCAS=[ <Formparameter>, <Breitenparameter>, <Wert der Zufallsgröße> ]
ZMean2Estimate=Gauß2Schätzer
ZMean2Estimate.Syntax=[ <Liste von Stichprobe 1>, <Liste von Stichprobe 2>, <σ1>, <σ2>, <Konfidenzniveau> ]\n[ <Stichprobenmittelwert 1>, <σ1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <σ2>, <Stichprobengröße 2>, <Konfidenzniveau> ]
ZMean2Test=Gauß2Test
ZMean2Test.Syntax=[ <Liste von Stichprobe 1>, <σ1>, <Liste von Stichprobe 2>, <σ2>, <Seite> ]\n[ <Stichprobenmittelwert 1>, <σ1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <σ2>, <Stichprobengröße 2>, <Seite> ]
ZMeanEstimate=GaußSchätzer
ZMeanEstimate.Syntax=[ <Stichprobenliste>, <σ>, <Konfidenzniveau> ]\n[ <Stichprobenmittelwert>, <σ>, <Stichprobenumfang>, <Konfidenzniveau> ]
ZMeanTest=GaußTest
ZMeanTest.Syntax=[ <Stichprobenliste>, <σ>, <Vermuteter Mittelwert>, <Seite> ]\n[ <Stichprobenmittelwert>, <σ>, <Stichprobenumfang>, <Vermuteter Mittelwert>, <Seite> ]
ZProportion2Estimate=GaußAnteil2Schätzer
ZProportion2Estimate.Syntax=[ <Stichprobenanteil 1>, <Stichprobengröße 1>, <Stichprobenanteil 2>, <Stichprobengröße 2>, <Konfidenzniveau> ]
ZProportion2Test=GaußAnteil2Test
ZProportion2Test.Syntax=[ <Stichprobenanteil 1>, <Stichprobengröße 1>, <Stichprobenanteil 2>, <Stichprobengröße 2>, <Seite> ]
ZProportionEstimate=GaußAnteilSchätzer
ZProportionEstimate.Syntax=[ <Stichprobenanteil>, <Stichprobenumfang>, <Konfidenzniveau> ]
ZProportionTest=GaußAnteilTest
ZProportionTest.Syntax=[ <Stichprobenanteil>, <Stichprobenumfang>, <Vermuteter Anteil>, <Seite> ]
Zip.Syntax=[ <Ausdruck>, <Var1>, <Liste1>, <Var2>, <Liste2>, ... ]
Zipf=Zeta
Zipf.Syntax=[ <Anzahl n der Elemente>, <Exponent> ]\n[ <Anzahl n der Elemente>, <Exponent>, <Kumuliert true|false> ]\n[ <Anzahl n der Elemente>, <Exponent>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
Zipf.SyntaxCAS=[ <Anzahl n der Elemente>, <Exponent>, <Wert der Zufallsgröße>, <Kumuliert true|false> ]
ZoomIn.Syntax=[ ]\n[ <Skalierungsfaktor> ]\n[ <Skalierungsfaktor>, <Zentraler Punkt> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Skalierungsfaktor> ]\n[ <Skalierungsfaktor>, <Zentraler Punkt> ]
mad.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
mean=Mittel
mean.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
stdev.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
stdevp.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]